
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Organisation
 * 
 */
export type Organisation = $Result.DefaultSelection<Prisma.$OrganisationPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model Authenticator
 * 
 */
export type Authenticator = $Result.DefaultSelection<Prisma.$AuthenticatorPayload>
/**
 * Model Invitation
 * 
 */
export type Invitation = $Result.DefaultSelection<Prisma.$InvitationPayload>
/**
 * Model PasswordResetToken
 * 
 */
export type PasswordResetToken = $Result.DefaultSelection<Prisma.$PasswordResetTokenPayload>
/**
 * Model Contact
 * 
 */
export type Contact = $Result.DefaultSelection<Prisma.$ContactPayload>
/**
 * Model Comment
 * 
 */
export type Comment = $Result.DefaultSelection<Prisma.$CommentPayload>
/**
 * Model FeedbackContact
 * 
 */
export type FeedbackContact = $Result.DefaultSelection<Prisma.$FeedbackContactPayload>
/**
 * Model Favorite
 * 
 */
export type Favorite = $Result.DefaultSelection<Prisma.$FavoritePayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Stock
 * 
 */
export type Stock = $Result.DefaultSelection<Prisma.$StockPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Brand
 * 
 */
export type Brand = $Result.DefaultSelection<Prisma.$BrandPayload>
/**
 * Model Note
 * 
 */
export type Note = $Result.DefaultSelection<Prisma.$NotePayload>
/**
 * Model Devis
 * 
 */
export type Devis = $Result.DefaultSelection<Prisma.$DevisPayload>
/**
 * Model DevisItem
 * 
 */
export type DevisItem = $Result.DefaultSelection<Prisma.$DevisItemPayload>
/**
 * Model Task
 * 
 */
export type Task = $Result.DefaultSelection<Prisma.$TaskPayload>
/**
 * Model ActivityLog
 * 
 */
export type ActivityLog = $Result.DefaultSelection<Prisma.$ActivityLogPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const AccessType: {
  READ: 'READ',
  WRITE: 'WRITE',
  ADMIN: 'ADMIN'
};

export type AccessType = (typeof AccessType)[keyof typeof AccessType]


export const Role: {
  ADMIN: 'ADMIN',
  MEMBRE: 'MEMBRE'
};

export type Role = (typeof Role)[keyof typeof Role]


export const Status_Contact: {
  PERSONNE: 'PERSONNE',
  COMPAGNIE: 'COMPAGNIE',
  GROSSISTE: 'GROSSISTE'
};

export type Status_Contact = (typeof Status_Contact)[keyof typeof Status_Contact]


export const Niveau: {
  PROSPECT: 'PROSPECT',
  CLIENT: 'CLIENT',
  PROSPECT_POTENTIAL: 'PROSPECT_POTENTIAL'
};

export type Niveau = (typeof Niveau)[keyof typeof Niveau]


export const Domain: {
  AGRICULTURE: 'AGRICULTURE',
  ENERGIE: 'ENERGIE',
  LOGISTIQUE: 'LOGISTIQUE',
  NUMERIQUE: 'NUMERIQUE',
  SECURITE: 'SECURITE',
  TRANSPORT: 'TRANSPORT',
  INFORMATIQUE: 'INFORMATIQUE',
  SANTE: 'SANTE',
  EDUCATION: 'EDUCATION',
  FINANCE: 'FINANCE',
  COMMERCE: 'COMMERCE',
  CONSTRUCTION: 'CONSTRUCTION',
  ENVIRONNEMENT: 'ENVIRONNEMENT',
  TOURISME: 'TOURISME',
  INDUSTRIE: 'INDUSTRIE',
  TELECOMMUNICATIONS: 'TELECOMMUNICATIONS',
  IMMOBILIER: 'IMMOBILIER',
  ADMINISTRATION: 'ADMINISTRATION',
  ART_CULTURE: 'ART_CULTURE',
  ALIMENTATION: 'ALIMENTATION'
};

export type Domain = (typeof Domain)[keyof typeof Domain]


export const DevisStatus: {
  ATTENTE: 'ATTENTE',
  VALIDE: 'VALIDE',
  FACTURE: 'FACTURE',
  ARCHIVE: 'ARCHIVE'
};

export type DevisStatus = (typeof DevisStatus)[keyof typeof DevisStatus]


export const TaxType: {
  TVA: 'TVA',
  HORS_TAXE: 'HORS_TAXE'
};

export type TaxType = (typeof TaxType)[keyof typeof TaxType]


export const TaskType: {
  FEATURE: 'FEATURE',
  BUG: 'BUG',
  DOCUMENTATION: 'DOCUMENTATION'
};

export type TaskType = (typeof TaskType)[keyof typeof TaskType]


export const TaskStatus: {
  TODO: 'TODO',
  IN_PROGRESS: 'IN_PROGRESS',
  WAITING: 'WAITING',
  DONE: 'DONE',
  CANCELLED: 'CANCELLED'
};

export type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus]


export const TaskPriority: {
  HIGH: 'HIGH',
  MEDIUM: 'MEDIUM',
  LOW: 'LOW'
};

export type TaskPriority = (typeof TaskPriority)[keyof typeof TaskPriority]

}

export type AccessType = $Enums.AccessType

export const AccessType: typeof $Enums.AccessType

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type Status_Contact = $Enums.Status_Contact

export const Status_Contact: typeof $Enums.Status_Contact

export type Niveau = $Enums.Niveau

export const Niveau: typeof $Enums.Niveau

export type Domain = $Enums.Domain

export const Domain: typeof $Enums.Domain

export type DevisStatus = $Enums.DevisStatus

export const DevisStatus: typeof $Enums.DevisStatus

export type TaxType = $Enums.TaxType

export const TaxType: typeof $Enums.TaxType

export type TaskType = $Enums.TaskType

export const TaskType: typeof $Enums.TaskType

export type TaskStatus = $Enums.TaskStatus

export const TaskStatus: typeof $Enums.TaskStatus

export type TaskPriority = $Enums.TaskPriority

export const TaskPriority: typeof $Enums.TaskPriority

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.organisation`: Exposes CRUD operations for the **Organisation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organisations
    * const organisations = await prisma.organisation.findMany()
    * ```
    */
  get organisation(): Prisma.OrganisationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.authenticator`: Exposes CRUD operations for the **Authenticator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Authenticators
    * const authenticators = await prisma.authenticator.findMany()
    * ```
    */
  get authenticator(): Prisma.AuthenticatorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invitation`: Exposes CRUD operations for the **Invitation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invitations
    * const invitations = await prisma.invitation.findMany()
    * ```
    */
  get invitation(): Prisma.InvitationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.passwordResetToken`: Exposes CRUD operations for the **PasswordResetToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PasswordResetTokens
    * const passwordResetTokens = await prisma.passwordResetToken.findMany()
    * ```
    */
  get passwordResetToken(): Prisma.PasswordResetTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.contact`: Exposes CRUD operations for the **Contact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contacts
    * const contacts = await prisma.contact.findMany()
    * ```
    */
  get contact(): Prisma.ContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **Comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.CommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.feedbackContact`: Exposes CRUD operations for the **FeedbackContact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FeedbackContacts
    * const feedbackContacts = await prisma.feedbackContact.findMany()
    * ```
    */
  get feedbackContact(): Prisma.FeedbackContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favorite`: Exposes CRUD operations for the **Favorite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favorites
    * const favorites = await prisma.favorite.findMany()
    * ```
    */
  get favorite(): Prisma.FavoriteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stock`: Exposes CRUD operations for the **Stock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stocks
    * const stocks = await prisma.stock.findMany()
    * ```
    */
  get stock(): Prisma.StockDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brand`: Exposes CRUD operations for the **Brand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brand.findMany()
    * ```
    */
  get brand(): Prisma.BrandDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.note`: Exposes CRUD operations for the **Note** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notes
    * const notes = await prisma.note.findMany()
    * ```
    */
  get note(): Prisma.NoteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.devis`: Exposes CRUD operations for the **Devis** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Devis
    * const devis = await prisma.devis.findMany()
    * ```
    */
  get devis(): Prisma.DevisDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.devisItem`: Exposes CRUD operations for the **DevisItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DevisItems
    * const devisItems = await prisma.devisItem.findMany()
    * ```
    */
  get devisItem(): Prisma.DevisItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.task`: Exposes CRUD operations for the **Task** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.task.findMany()
    * ```
    */
  get task(): Prisma.TaskDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.activityLog`: Exposes CRUD operations for the **ActivityLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ActivityLogs
    * const activityLogs = await prisma.activityLog.findMany()
    * ```
    */
  get activityLog(): Prisma.ActivityLogDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Organisation: 'Organisation',
    Account: 'Account',
    Session: 'Session',
    VerificationToken: 'VerificationToken',
    Authenticator: 'Authenticator',
    Invitation: 'Invitation',
    PasswordResetToken: 'PasswordResetToken',
    Contact: 'Contact',
    Comment: 'Comment',
    FeedbackContact: 'FeedbackContact',
    Favorite: 'Favorite',
    Product: 'Product',
    Stock: 'Stock',
    Category: 'Category',
    Brand: 'Brand',
    Note: 'Note',
    Devis: 'Devis',
    DevisItem: 'DevisItem',
    Task: 'Task',
    ActivityLog: 'ActivityLog'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "organisation" | "account" | "session" | "verificationToken" | "authenticator" | "invitation" | "passwordResetToken" | "contact" | "comment" | "feedbackContact" | "favorite" | "product" | "stock" | "category" | "brand" | "note" | "devis" | "devisItem" | "task" | "activityLog"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Organisation: {
        payload: Prisma.$OrganisationPayload<ExtArgs>
        fields: Prisma.OrganisationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganisationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganisationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>
          }
          findFirst: {
            args: Prisma.OrganisationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganisationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>
          }
          findMany: {
            args: Prisma.OrganisationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>[]
          }
          create: {
            args: Prisma.OrganisationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>
          }
          createMany: {
            args: Prisma.OrganisationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganisationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>[]
          }
          delete: {
            args: Prisma.OrganisationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>
          }
          update: {
            args: Prisma.OrganisationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>
          }
          deleteMany: {
            args: Prisma.OrganisationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganisationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrganisationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>[]
          }
          upsert: {
            args: Prisma.OrganisationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganisationPayload>
          }
          aggregate: {
            args: Prisma.OrganisationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganisation>
          }
          groupBy: {
            args: Prisma.OrganisationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganisationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganisationCountArgs<ExtArgs>
            result: $Utils.Optional<OrganisationCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      Authenticator: {
        payload: Prisma.$AuthenticatorPayload<ExtArgs>
        fields: Prisma.AuthenticatorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuthenticatorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuthenticatorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>
          }
          findFirst: {
            args: Prisma.AuthenticatorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuthenticatorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>
          }
          findMany: {
            args: Prisma.AuthenticatorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>[]
          }
          create: {
            args: Prisma.AuthenticatorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>
          }
          createMany: {
            args: Prisma.AuthenticatorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuthenticatorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>[]
          }
          delete: {
            args: Prisma.AuthenticatorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>
          }
          update: {
            args: Prisma.AuthenticatorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>
          }
          deleteMany: {
            args: Prisma.AuthenticatorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuthenticatorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AuthenticatorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>[]
          }
          upsert: {
            args: Prisma.AuthenticatorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuthenticatorPayload>
          }
          aggregate: {
            args: Prisma.AuthenticatorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuthenticator>
          }
          groupBy: {
            args: Prisma.AuthenticatorGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuthenticatorGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuthenticatorCountArgs<ExtArgs>
            result: $Utils.Optional<AuthenticatorCountAggregateOutputType> | number
          }
        }
      }
      Invitation: {
        payload: Prisma.$InvitationPayload<ExtArgs>
        fields: Prisma.InvitationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvitationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvitationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          findFirst: {
            args: Prisma.InvitationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvitationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          findMany: {
            args: Prisma.InvitationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          create: {
            args: Prisma.InvitationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          createMany: {
            args: Prisma.InvitationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvitationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          delete: {
            args: Prisma.InvitationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          update: {
            args: Prisma.InvitationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          deleteMany: {
            args: Prisma.InvitationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvitationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvitationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          upsert: {
            args: Prisma.InvitationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          aggregate: {
            args: Prisma.InvitationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvitation>
          }
          groupBy: {
            args: Prisma.InvitationGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvitationGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvitationCountArgs<ExtArgs>
            result: $Utils.Optional<InvitationCountAggregateOutputType> | number
          }
        }
      }
      PasswordResetToken: {
        payload: Prisma.$PasswordResetTokenPayload<ExtArgs>
        fields: Prisma.PasswordResetTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PasswordResetTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findFirst: {
            args: Prisma.PasswordResetTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          findMany: {
            args: Prisma.PasswordResetTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          create: {
            args: Prisma.PasswordResetTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          createMany: {
            args: Prisma.PasswordResetTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          delete: {
            args: Prisma.PasswordResetTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          update: {
            args: Prisma.PasswordResetTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          deleteMany: {
            args: Prisma.PasswordResetTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PasswordResetTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>[]
          }
          upsert: {
            args: Prisma.PasswordResetTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokenPayload>
          }
          aggregate: {
            args: Prisma.PasswordResetTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePasswordResetToken>
          }
          groupBy: {
            args: Prisma.PasswordResetTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.PasswordResetTokenCountArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokenCountAggregateOutputType> | number
          }
        }
      }
      Contact: {
        payload: Prisma.$ContactPayload<ExtArgs>
        fields: Prisma.ContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findFirst: {
            args: Prisma.ContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          findMany: {
            args: Prisma.ContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          create: {
            args: Prisma.ContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          createMany: {
            args: Prisma.ContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          delete: {
            args: Prisma.ContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          update: {
            args: Prisma.ContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          deleteMany: {
            args: Prisma.ContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>[]
          }
          upsert: {
            args: Prisma.ContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContactPayload>
          }
          aggregate: {
            args: Prisma.ContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateContact>
          }
          groupBy: {
            args: Prisma.ContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContactCountArgs<ExtArgs>
            result: $Utils.Optional<ContactCountAggregateOutputType> | number
          }
        }
      }
      Comment: {
        payload: Prisma.$CommentPayload<ExtArgs>
        fields: Prisma.CommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findFirst: {
            args: Prisma.CommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findMany: {
            args: Prisma.CommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          create: {
            args: Prisma.CommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          createMany: {
            args: Prisma.CommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          delete: {
            args: Prisma.CommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          update: {
            args: Prisma.CommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          deleteMany: {
            args: Prisma.CommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          upsert: {
            args: Prisma.CommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.CommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      FeedbackContact: {
        payload: Prisma.$FeedbackContactPayload<ExtArgs>
        fields: Prisma.FeedbackContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FeedbackContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FeedbackContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>
          }
          findFirst: {
            args: Prisma.FeedbackContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FeedbackContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>
          }
          findMany: {
            args: Prisma.FeedbackContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>[]
          }
          create: {
            args: Prisma.FeedbackContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>
          }
          createMany: {
            args: Prisma.FeedbackContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FeedbackContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>[]
          }
          delete: {
            args: Prisma.FeedbackContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>
          }
          update: {
            args: Prisma.FeedbackContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>
          }
          deleteMany: {
            args: Prisma.FeedbackContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FeedbackContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FeedbackContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>[]
          }
          upsert: {
            args: Prisma.FeedbackContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeedbackContactPayload>
          }
          aggregate: {
            args: Prisma.FeedbackContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFeedbackContact>
          }
          groupBy: {
            args: Prisma.FeedbackContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<FeedbackContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.FeedbackContactCountArgs<ExtArgs>
            result: $Utils.Optional<FeedbackContactCountAggregateOutputType> | number
          }
        }
      }
      Favorite: {
        payload: Prisma.$FavoritePayload<ExtArgs>
        fields: Prisma.FavoriteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findFirst: {
            args: Prisma.FavoriteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findMany: {
            args: Prisma.FavoriteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          create: {
            args: Prisma.FavoriteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          createMany: {
            args: Prisma.FavoriteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoriteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          delete: {
            args: Prisma.FavoriteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          update: {
            args: Prisma.FavoriteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          deleteMany: {
            args: Prisma.FavoriteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavoriteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          upsert: {
            args: Prisma.FavoriteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          aggregate: {
            args: Prisma.FavoriteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorite>
          }
          groupBy: {
            args: Prisma.FavoriteGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Stock: {
        payload: Prisma.$StockPayload<ExtArgs>
        fields: Prisma.StockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          findFirst: {
            args: Prisma.StockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          findMany: {
            args: Prisma.StockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>[]
          }
          create: {
            args: Prisma.StockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          createMany: {
            args: Prisma.StockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>[]
          }
          delete: {
            args: Prisma.StockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          update: {
            args: Prisma.StockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          deleteMany: {
            args: Prisma.StockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StockUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>[]
          }
          upsert: {
            args: Prisma.StockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockPayload>
          }
          aggregate: {
            args: Prisma.StockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStock>
          }
          groupBy: {
            args: Prisma.StockGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockCountArgs<ExtArgs>
            result: $Utils.Optional<StockCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Brand: {
        payload: Prisma.$BrandPayload<ExtArgs>
        fields: Prisma.BrandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BrandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BrandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findFirst: {
            args: Prisma.BrandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BrandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findMany: {
            args: Prisma.BrandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          create: {
            args: Prisma.BrandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          createMany: {
            args: Prisma.BrandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BrandCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          delete: {
            args: Prisma.BrandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          update: {
            args: Prisma.BrandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          deleteMany: {
            args: Prisma.BrandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BrandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BrandUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          upsert: {
            args: Prisma.BrandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          aggregate: {
            args: Prisma.BrandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrand>
          }
          groupBy: {
            args: Prisma.BrandGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandGroupByOutputType>[]
          }
          count: {
            args: Prisma.BrandCountArgs<ExtArgs>
            result: $Utils.Optional<BrandCountAggregateOutputType> | number
          }
        }
      }
      Note: {
        payload: Prisma.$NotePayload<ExtArgs>
        fields: Prisma.NoteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NoteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NoteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          findFirst: {
            args: Prisma.NoteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NoteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          findMany: {
            args: Prisma.NoteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>[]
          }
          create: {
            args: Prisma.NoteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          createMany: {
            args: Prisma.NoteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NoteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>[]
          }
          delete: {
            args: Prisma.NoteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          update: {
            args: Prisma.NoteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          deleteMany: {
            args: Prisma.NoteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NoteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NoteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>[]
          }
          upsert: {
            args: Prisma.NoteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotePayload>
          }
          aggregate: {
            args: Prisma.NoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNote>
          }
          groupBy: {
            args: Prisma.NoteGroupByArgs<ExtArgs>
            result: $Utils.Optional<NoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.NoteCountArgs<ExtArgs>
            result: $Utils.Optional<NoteCountAggregateOutputType> | number
          }
        }
      }
      Devis: {
        payload: Prisma.$DevisPayload<ExtArgs>
        fields: Prisma.DevisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevisFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DevisFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>
          }
          findFirst: {
            args: Prisma.DevisFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DevisFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>
          }
          findMany: {
            args: Prisma.DevisFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>[]
          }
          create: {
            args: Prisma.DevisCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>
          }
          createMany: {
            args: Prisma.DevisCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DevisCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>[]
          }
          delete: {
            args: Prisma.DevisDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>
          }
          update: {
            args: Prisma.DevisUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>
          }
          deleteMany: {
            args: Prisma.DevisDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DevisUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DevisUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>[]
          }
          upsert: {
            args: Prisma.DevisUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisPayload>
          }
          aggregate: {
            args: Prisma.DevisAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevis>
          }
          groupBy: {
            args: Prisma.DevisGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevisGroupByOutputType>[]
          }
          count: {
            args: Prisma.DevisCountArgs<ExtArgs>
            result: $Utils.Optional<DevisCountAggregateOutputType> | number
          }
        }
      }
      DevisItem: {
        payload: Prisma.$DevisItemPayload<ExtArgs>
        fields: Prisma.DevisItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DevisItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DevisItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>
          }
          findFirst: {
            args: Prisma.DevisItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DevisItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>
          }
          findMany: {
            args: Prisma.DevisItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>[]
          }
          create: {
            args: Prisma.DevisItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>
          }
          createMany: {
            args: Prisma.DevisItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DevisItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>[]
          }
          delete: {
            args: Prisma.DevisItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>
          }
          update: {
            args: Prisma.DevisItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>
          }
          deleteMany: {
            args: Prisma.DevisItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DevisItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DevisItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>[]
          }
          upsert: {
            args: Prisma.DevisItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevisItemPayload>
          }
          aggregate: {
            args: Prisma.DevisItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevisItem>
          }
          groupBy: {
            args: Prisma.DevisItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<DevisItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.DevisItemCountArgs<ExtArgs>
            result: $Utils.Optional<DevisItemCountAggregateOutputType> | number
          }
        }
      }
      Task: {
        payload: Prisma.$TaskPayload<ExtArgs>
        fields: Prisma.TaskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TaskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TaskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findFirst: {
            args: Prisma.TaskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TaskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          findMany: {
            args: Prisma.TaskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          create: {
            args: Prisma.TaskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          createMany: {
            args: Prisma.TaskCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TaskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          delete: {
            args: Prisma.TaskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          update: {
            args: Prisma.TaskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          deleteMany: {
            args: Prisma.TaskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TaskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TaskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>[]
          }
          upsert: {
            args: Prisma.TaskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TaskPayload>
          }
          aggregate: {
            args: Prisma.TaskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTask>
          }
          groupBy: {
            args: Prisma.TaskGroupByArgs<ExtArgs>
            result: $Utils.Optional<TaskGroupByOutputType>[]
          }
          count: {
            args: Prisma.TaskCountArgs<ExtArgs>
            result: $Utils.Optional<TaskCountAggregateOutputType> | number
          }
        }
      }
      ActivityLog: {
        payload: Prisma.$ActivityLogPayload<ExtArgs>
        fields: Prisma.ActivityLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ActivityLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ActivityLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>
          }
          findFirst: {
            args: Prisma.ActivityLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ActivityLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>
          }
          findMany: {
            args: Prisma.ActivityLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>[]
          }
          create: {
            args: Prisma.ActivityLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>
          }
          createMany: {
            args: Prisma.ActivityLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ActivityLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>[]
          }
          delete: {
            args: Prisma.ActivityLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>
          }
          update: {
            args: Prisma.ActivityLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>
          }
          deleteMany: {
            args: Prisma.ActivityLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ActivityLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ActivityLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>[]
          }
          upsert: {
            args: Prisma.ActivityLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActivityLogPayload>
          }
          aggregate: {
            args: Prisma.ActivityLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActivityLog>
          }
          groupBy: {
            args: Prisma.ActivityLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<ActivityLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.ActivityLogCountArgs<ExtArgs>
            result: $Utils.Optional<ActivityLogCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    organisation?: OrganisationOmit
    account?: AccountOmit
    session?: SessionOmit
    verificationToken?: VerificationTokenOmit
    authenticator?: AuthenticatorOmit
    invitation?: InvitationOmit
    passwordResetToken?: PasswordResetTokenOmit
    contact?: ContactOmit
    comment?: CommentOmit
    feedbackContact?: FeedbackContactOmit
    favorite?: FavoriteOmit
    product?: ProductOmit
    stock?: StockOmit
    category?: CategoryOmit
    brand?: BrandOmit
    note?: NoteOmit
    devis?: DevisOmit
    devisItem?: DevisItemOmit
    task?: TaskOmit
    activityLog?: ActivityLogOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    accounts: number
    sessions: number
    authenticators: number
    organisations: number
    ownedOrganisations: number
    invitations: number
    passwordResetTokens: number
    FeedbackContact: number
    notes: number
    collaboratedNotes: number
    TaskAssignee: number
    TaskCreator: number
    CreatedActivities: number
    UpdatedActivities: number
    RelatedActivities: number
    AllActivityLogs: number
    User: number
    Users: number
    Favorite: number
    Organisation: number
    Organisations: number
    Contact: number
    Contacts: number
    Comment: number
    Category: number
    Categorys: number
    Product: number
    Products: number
    Stock: number
    Stocks: number
    Brand: number
    Brands: number
    Note: number
    Notes: number
    Deviss: number
    updatedDeviss: number
    FeedbackContacts: number
    Task: number
    Tasks: number
    DevisItems: number
    Devis: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    authenticators?: boolean | UserCountOutputTypeCountAuthenticatorsArgs
    organisations?: boolean | UserCountOutputTypeCountOrganisationsArgs
    ownedOrganisations?: boolean | UserCountOutputTypeCountOwnedOrganisationsArgs
    invitations?: boolean | UserCountOutputTypeCountInvitationsArgs
    passwordResetTokens?: boolean | UserCountOutputTypeCountPasswordResetTokensArgs
    FeedbackContact?: boolean | UserCountOutputTypeCountFeedbackContactArgs
    notes?: boolean | UserCountOutputTypeCountNotesArgs
    collaboratedNotes?: boolean | UserCountOutputTypeCountCollaboratedNotesArgs
    TaskAssignee?: boolean | UserCountOutputTypeCountTaskAssigneeArgs
    TaskCreator?: boolean | UserCountOutputTypeCountTaskCreatorArgs
    CreatedActivities?: boolean | UserCountOutputTypeCountCreatedActivitiesArgs
    UpdatedActivities?: boolean | UserCountOutputTypeCountUpdatedActivitiesArgs
    RelatedActivities?: boolean | UserCountOutputTypeCountRelatedActivitiesArgs
    AllActivityLogs?: boolean | UserCountOutputTypeCountAllActivityLogsArgs
    User?: boolean | UserCountOutputTypeCountUserArgs
    Users?: boolean | UserCountOutputTypeCountUsersArgs
    Favorite?: boolean | UserCountOutputTypeCountFavoriteArgs
    Organisation?: boolean | UserCountOutputTypeCountOrganisationArgs
    Organisations?: boolean | UserCountOutputTypeCountOrganisationsArgs
    Contact?: boolean | UserCountOutputTypeCountContactArgs
    Contacts?: boolean | UserCountOutputTypeCountContactsArgs
    Comment?: boolean | UserCountOutputTypeCountCommentArgs
    Category?: boolean | UserCountOutputTypeCountCategoryArgs
    Categorys?: boolean | UserCountOutputTypeCountCategorysArgs
    Product?: boolean | UserCountOutputTypeCountProductArgs
    Products?: boolean | UserCountOutputTypeCountProductsArgs
    Stock?: boolean | UserCountOutputTypeCountStockArgs
    Stocks?: boolean | UserCountOutputTypeCountStocksArgs
    Brand?: boolean | UserCountOutputTypeCountBrandArgs
    Brands?: boolean | UserCountOutputTypeCountBrandsArgs
    Note?: boolean | UserCountOutputTypeCountNoteArgs
    Notes?: boolean | UserCountOutputTypeCountNotesArgs
    Deviss?: boolean | UserCountOutputTypeCountDevissArgs
    updatedDeviss?: boolean | UserCountOutputTypeCountUpdatedDevissArgs
    FeedbackContacts?: boolean | UserCountOutputTypeCountFeedbackContactsArgs
    Task?: boolean | UserCountOutputTypeCountTaskArgs
    Tasks?: boolean | UserCountOutputTypeCountTasksArgs
    DevisItems?: boolean | UserCountOutputTypeCountDevisItemsArgs
    Devis?: boolean | UserCountOutputTypeCountDevisArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuthenticatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuthenticatorWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrganisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOwnedOrganisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPasswordResetTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFeedbackContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeedbackContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCollaboratedNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaskAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaskCreatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRelatedActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAllActivityLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrganisationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrganisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCategorysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStocksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDevissArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedDevissArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFeedbackContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeedbackContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDevisItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisItemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDevisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisWhereInput
  }


  /**
   * Count Type OrganisationCountOutputType
   */

  export type OrganisationCountOutputType = {
    members: number
    invitations: number
    Product: number
    Stock: number
    Contact: number
    Category: number
    Brand: number
    notes: number
    Devis: number
    Task: number
    Favorite: number
    ActivityLogs: number
  }

  export type OrganisationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | OrganisationCountOutputTypeCountMembersArgs
    invitations?: boolean | OrganisationCountOutputTypeCountInvitationsArgs
    Product?: boolean | OrganisationCountOutputTypeCountProductArgs
    Stock?: boolean | OrganisationCountOutputTypeCountStockArgs
    Contact?: boolean | OrganisationCountOutputTypeCountContactArgs
    Category?: boolean | OrganisationCountOutputTypeCountCategoryArgs
    Brand?: boolean | OrganisationCountOutputTypeCountBrandArgs
    notes?: boolean | OrganisationCountOutputTypeCountNotesArgs
    Devis?: boolean | OrganisationCountOutputTypeCountDevisArgs
    Task?: boolean | OrganisationCountOutputTypeCountTaskArgs
    Favorite?: boolean | OrganisationCountOutputTypeCountFavoriteArgs
    ActivityLogs?: boolean | OrganisationCountOutputTypeCountActivityLogsArgs
  }

  // Custom InputTypes
  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganisationCountOutputType
     */
    select?: OrganisationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountBrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountDevisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountTaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountFavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * OrganisationCountOutputType without action
   */
  export type OrganisationCountOutputTypeCountActivityLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type AccountCountOutputType
   */

  export type AccountCountOutputType = {
    ActivityLog: number
  }

  export type AccountCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | AccountCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * AccountCountOutputType without action
   */
  export type AccountCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AccountCountOutputType
     */
    select?: AccountCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AccountCountOutputType without action
   */
  export type AccountCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type SessionCountOutputType
   */

  export type SessionCountOutputType = {
    ActivityLog: number
  }

  export type SessionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | SessionCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessionCountOutputType
     */
    select?: SessionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type AuthenticatorCountOutputType
   */

  export type AuthenticatorCountOutputType = {
    ActivityLog: number
  }

  export type AuthenticatorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | AuthenticatorCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * AuthenticatorCountOutputType without action
   */
  export type AuthenticatorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuthenticatorCountOutputType
     */
    select?: AuthenticatorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AuthenticatorCountOutputType without action
   */
  export type AuthenticatorCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type InvitationCountOutputType
   */

  export type InvitationCountOutputType = {
    ActivityLog: number
  }

  export type InvitationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | InvitationCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * InvitationCountOutputType without action
   */
  export type InvitationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvitationCountOutputType
     */
    select?: InvitationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InvitationCountOutputType without action
   */
  export type InvitationCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type PasswordResetTokenCountOutputType
   */

  export type PasswordResetTokenCountOutputType = {
    ActivityLog: number
  }

  export type PasswordResetTokenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | PasswordResetTokenCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * PasswordResetTokenCountOutputType without action
   */
  export type PasswordResetTokenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokenCountOutputType
     */
    select?: PasswordResetTokenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PasswordResetTokenCountOutputType without action
   */
  export type PasswordResetTokenCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type ContactCountOutputType
   */

  export type ContactCountOutputType = {
    organisations: number
    comments: number
    FeedbackContact: number
    notes: number
    Devis: number
    Favorite: number
    ActivityLog: number
  }

  export type ContactCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisations?: boolean | ContactCountOutputTypeCountOrganisationsArgs
    comments?: boolean | ContactCountOutputTypeCountCommentsArgs
    FeedbackContact?: boolean | ContactCountOutputTypeCountFeedbackContactArgs
    notes?: boolean | ContactCountOutputTypeCountNotesArgs
    Devis?: boolean | ContactCountOutputTypeCountDevisArgs
    Favorite?: boolean | ContactCountOutputTypeCountFavoriteArgs
    ActivityLog?: boolean | ContactCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContactCountOutputType
     */
    select?: ContactCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountOrganisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountFeedbackContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeedbackContactWhereInput
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountDevisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisWhereInput
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountFavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * ContactCountOutputType without action
   */
  export type ContactCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type CommentCountOutputType
   */

  export type CommentCountOutputType = {
    ActivityLog: number
  }

  export type CommentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | CommentCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCountOutputType
     */
    select?: CommentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type FeedbackContactCountOutputType
   */

  export type FeedbackContactCountOutputType = {
    ActivityLog: number
  }

  export type FeedbackContactCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | FeedbackContactCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * FeedbackContactCountOutputType without action
   */
  export type FeedbackContactCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContactCountOutputType
     */
    select?: FeedbackContactCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FeedbackContactCountOutputType without action
   */
  export type FeedbackContactCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type FavoriteCountOutputType
   */

  export type FavoriteCountOutputType = {
    ActivityLog: number
  }

  export type FavoriteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | FavoriteCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * FavoriteCountOutputType without action
   */
  export type FavoriteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FavoriteCountOutputType
     */
    select?: FavoriteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FavoriteCountOutputType without action
   */
  export type FavoriteCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    Stock: number
    categories: number
    DevisItem: number
    ActivityLog: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Stock?: boolean | ProductCountOutputTypeCountStockArgs
    categories?: boolean | ProductCountOutputTypeCountCategoriesArgs
    DevisItem?: boolean | ProductCountOutputTypeCountDevisItemArgs
    ActivityLog?: boolean | ProductCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountStockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountDevisItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type StockCountOutputType
   */

  export type StockCountOutputType = {
    ActivityLog: number
  }

  export type StockCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | StockCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * StockCountOutputType without action
   */
  export type StockCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockCountOutputType
     */
    select?: StockCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StockCountOutputType without action
   */
  export type StockCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    children: number
    ActivityLog: number
    Product: number
    Brand: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | CategoryCountOutputTypeCountChildrenArgs
    ActivityLog?: boolean | CategoryCountOutputTypeCountActivityLogArgs
    Product?: boolean | CategoryCountOutputTypeCountProductArgs
    Brand?: boolean | CategoryCountOutputTypeCountBrandArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountBrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }


  /**
   * Count Type BrandCountOutputType
   */

  export type BrandCountOutputType = {
    ActivityLog: number
    Category: number
    Product: number
  }

  export type BrandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | BrandCountOutputTypeCountActivityLogArgs
    Category?: boolean | BrandCountOutputTypeCountCategoryArgs
    Product?: boolean | BrandCountOutputTypeCountProductArgs
  }

  // Custom InputTypes
  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandCountOutputType
     */
    select?: BrandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type NoteCountOutputType
   */

  export type NoteCountOutputType = {
    collaborators: number
    ActivityLog: number
    Organisation: number
  }

  export type NoteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    collaborators?: boolean | NoteCountOutputTypeCountCollaboratorsArgs
    ActivityLog?: boolean | NoteCountOutputTypeCountActivityLogArgs
    Organisation?: boolean | NoteCountOutputTypeCountOrganisationArgs
  }

  // Custom InputTypes
  /**
   * NoteCountOutputType without action
   */
  export type NoteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NoteCountOutputType
     */
    select?: NoteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NoteCountOutputType without action
   */
  export type NoteCountOutputTypeCountCollaboratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * NoteCountOutputType without action
   */
  export type NoteCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }

  /**
   * NoteCountOutputType without action
   */
  export type NoteCountOutputTypeCountOrganisationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
  }


  /**
   * Count Type DevisCountOutputType
   */

  export type DevisCountOutputType = {
    items: number
    ActivityLog: number
  }

  export type DevisCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | DevisCountOutputTypeCountItemsArgs
    ActivityLog?: boolean | DevisCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * DevisCountOutputType without action
   */
  export type DevisCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisCountOutputType
     */
    select?: DevisCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DevisCountOutputType without action
   */
  export type DevisCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisItemWhereInput
  }

  /**
   * DevisCountOutputType without action
   */
  export type DevisCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type DevisItemCountOutputType
   */

  export type DevisItemCountOutputType = {
    ActivityLog: number
  }

  export type DevisItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | DevisItemCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * DevisItemCountOutputType without action
   */
  export type DevisItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItemCountOutputType
     */
    select?: DevisItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DevisItemCountOutputType without action
   */
  export type DevisItemCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Count Type TaskCountOutputType
   */

  export type TaskCountOutputType = {
    ActivityLog: number
  }

  export type TaskCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ActivityLog?: boolean | TaskCountOutputTypeCountActivityLogArgs
  }

  // Custom InputTypes
  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TaskCountOutputType
     */
    select?: TaskCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeCountActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    password: string | null
    role: $Enums.Role | null
    accessType: $Enums.AccessType | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    emailVerified: Date | null
    image: string | null
    password: string | null
    role: $Enums.Role | null
    accessType: $Enums.AccessType | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    emailVerified: number
    image: number
    password: number
    role: number
    accessType: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    password?: true
    role?: true
    accessType?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    password?: true
    role?: true
    accessType?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    emailVerified?: true
    image?: true
    password?: true
    role?: true
    accessType?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string | null
    email: string
    emailVerified: Date | null
    image: string | null
    password: string | null
    role: $Enums.Role
    accessType: $Enums.AccessType
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    accessType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    authenticators?: boolean | User$authenticatorsArgs<ExtArgs>
    organisations?: boolean | User$organisationsArgs<ExtArgs>
    ownedOrganisations?: boolean | User$ownedOrganisationsArgs<ExtArgs>
    invitations?: boolean | User$invitationsArgs<ExtArgs>
    passwordResetTokens?: boolean | User$passwordResetTokensArgs<ExtArgs>
    FeedbackContact?: boolean | User$FeedbackContactArgs<ExtArgs>
    notes?: boolean | User$notesArgs<ExtArgs>
    collaboratedNotes?: boolean | User$collaboratedNotesArgs<ExtArgs>
    TaskAssignee?: boolean | User$TaskAssigneeArgs<ExtArgs>
    TaskCreator?: boolean | User$TaskCreatorArgs<ExtArgs>
    CreatedActivities?: boolean | User$CreatedActivitiesArgs<ExtArgs>
    UpdatedActivities?: boolean | User$UpdatedActivitiesArgs<ExtArgs>
    RelatedActivities?: boolean | User$RelatedActivitiesArgs<ExtArgs>
    AllActivityLogs?: boolean | User$AllActivityLogsArgs<ExtArgs>
    createdByUser?: boolean | User$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | User$updatedByUserArgs<ExtArgs>
    User?: boolean | User$UserArgs<ExtArgs>
    Users?: boolean | User$UsersArgs<ExtArgs>
    Favorite?: boolean | User$FavoriteArgs<ExtArgs>
    Organisation?: boolean | User$OrganisationArgs<ExtArgs>
    Organisations?: boolean | User$OrganisationsArgs<ExtArgs>
    Contact?: boolean | User$ContactArgs<ExtArgs>
    Contacts?: boolean | User$ContactsArgs<ExtArgs>
    Comment?: boolean | User$CommentArgs<ExtArgs>
    Category?: boolean | User$CategoryArgs<ExtArgs>
    Categorys?: boolean | User$CategorysArgs<ExtArgs>
    Product?: boolean | User$ProductArgs<ExtArgs>
    Products?: boolean | User$ProductsArgs<ExtArgs>
    Stock?: boolean | User$StockArgs<ExtArgs>
    Stocks?: boolean | User$StocksArgs<ExtArgs>
    Brand?: boolean | User$BrandArgs<ExtArgs>
    Brands?: boolean | User$BrandsArgs<ExtArgs>
    Note?: boolean | User$NoteArgs<ExtArgs>
    Notes?: boolean | User$NotesArgs<ExtArgs>
    Deviss?: boolean | User$DevissArgs<ExtArgs>
    updatedDeviss?: boolean | User$updatedDevissArgs<ExtArgs>
    FeedbackContacts?: boolean | User$FeedbackContactsArgs<ExtArgs>
    Task?: boolean | User$TaskArgs<ExtArgs>
    Tasks?: boolean | User$TasksArgs<ExtArgs>
    DevisItems?: boolean | User$DevisItemsArgs<ExtArgs>
    Devis?: boolean | User$DevisArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    accessType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    createdByUser?: boolean | User$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | User$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    accessType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    createdByUser?: boolean | User$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | User$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    password?: boolean
    role?: boolean
    accessType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "emailVerified" | "image" | "password" | "role" | "accessType" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    authenticators?: boolean | User$authenticatorsArgs<ExtArgs>
    organisations?: boolean | User$organisationsArgs<ExtArgs>
    ownedOrganisations?: boolean | User$ownedOrganisationsArgs<ExtArgs>
    invitations?: boolean | User$invitationsArgs<ExtArgs>
    passwordResetTokens?: boolean | User$passwordResetTokensArgs<ExtArgs>
    FeedbackContact?: boolean | User$FeedbackContactArgs<ExtArgs>
    notes?: boolean | User$notesArgs<ExtArgs>
    collaboratedNotes?: boolean | User$collaboratedNotesArgs<ExtArgs>
    TaskAssignee?: boolean | User$TaskAssigneeArgs<ExtArgs>
    TaskCreator?: boolean | User$TaskCreatorArgs<ExtArgs>
    CreatedActivities?: boolean | User$CreatedActivitiesArgs<ExtArgs>
    UpdatedActivities?: boolean | User$UpdatedActivitiesArgs<ExtArgs>
    RelatedActivities?: boolean | User$RelatedActivitiesArgs<ExtArgs>
    AllActivityLogs?: boolean | User$AllActivityLogsArgs<ExtArgs>
    createdByUser?: boolean | User$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | User$updatedByUserArgs<ExtArgs>
    User?: boolean | User$UserArgs<ExtArgs>
    Users?: boolean | User$UsersArgs<ExtArgs>
    Favorite?: boolean | User$FavoriteArgs<ExtArgs>
    Organisation?: boolean | User$OrganisationArgs<ExtArgs>
    Organisations?: boolean | User$OrganisationsArgs<ExtArgs>
    Contact?: boolean | User$ContactArgs<ExtArgs>
    Contacts?: boolean | User$ContactsArgs<ExtArgs>
    Comment?: boolean | User$CommentArgs<ExtArgs>
    Category?: boolean | User$CategoryArgs<ExtArgs>
    Categorys?: boolean | User$CategorysArgs<ExtArgs>
    Product?: boolean | User$ProductArgs<ExtArgs>
    Products?: boolean | User$ProductsArgs<ExtArgs>
    Stock?: boolean | User$StockArgs<ExtArgs>
    Stocks?: boolean | User$StocksArgs<ExtArgs>
    Brand?: boolean | User$BrandArgs<ExtArgs>
    Brands?: boolean | User$BrandsArgs<ExtArgs>
    Note?: boolean | User$NoteArgs<ExtArgs>
    Notes?: boolean | User$NotesArgs<ExtArgs>
    Deviss?: boolean | User$DevissArgs<ExtArgs>
    updatedDeviss?: boolean | User$updatedDevissArgs<ExtArgs>
    FeedbackContacts?: boolean | User$FeedbackContactsArgs<ExtArgs>
    Task?: boolean | User$TaskArgs<ExtArgs>
    Tasks?: boolean | User$TasksArgs<ExtArgs>
    DevisItems?: boolean | User$DevisItemsArgs<ExtArgs>
    Devis?: boolean | User$DevisArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | User$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | User$updatedByUserArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | User$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | User$updatedByUserArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      authenticators: Prisma.$AuthenticatorPayload<ExtArgs>[]
      organisations: Prisma.$OrganisationPayload<ExtArgs>[]
      ownedOrganisations: Prisma.$OrganisationPayload<ExtArgs>[]
      invitations: Prisma.$InvitationPayload<ExtArgs>[]
      passwordResetTokens: Prisma.$PasswordResetTokenPayload<ExtArgs>[]
      FeedbackContact: Prisma.$FeedbackContactPayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      collaboratedNotes: Prisma.$NotePayload<ExtArgs>[]
      TaskAssignee: Prisma.$TaskPayload<ExtArgs>[]
      TaskCreator: Prisma.$TaskPayload<ExtArgs>[]
      CreatedActivities: Prisma.$ActivityLogPayload<ExtArgs>[]
      UpdatedActivities: Prisma.$ActivityLogPayload<ExtArgs>[]
      RelatedActivities: Prisma.$ActivityLogPayload<ExtArgs>[]
      AllActivityLogs: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
      User: Prisma.$UserPayload<ExtArgs>[]
      Users: Prisma.$UserPayload<ExtArgs>[]
      Favorite: Prisma.$FavoritePayload<ExtArgs>[]
      Organisation: Prisma.$OrganisationPayload<ExtArgs>[]
      Organisations: Prisma.$OrganisationPayload<ExtArgs>[]
      Contact: Prisma.$ContactPayload<ExtArgs>[]
      Contacts: Prisma.$ContactPayload<ExtArgs>[]
      Comment: Prisma.$CommentPayload<ExtArgs>[]
      Category: Prisma.$CategoryPayload<ExtArgs>[]
      Categorys: Prisma.$CategoryPayload<ExtArgs>[]
      Product: Prisma.$ProductPayload<ExtArgs>[]
      Products: Prisma.$ProductPayload<ExtArgs>[]
      Stock: Prisma.$StockPayload<ExtArgs>[]
      Stocks: Prisma.$StockPayload<ExtArgs>[]
      Brand: Prisma.$BrandPayload<ExtArgs>[]
      Brands: Prisma.$BrandPayload<ExtArgs>[]
      Note: Prisma.$NotePayload<ExtArgs>[]
      Notes: Prisma.$NotePayload<ExtArgs>[]
      Deviss: Prisma.$DevisPayload<ExtArgs>[]
      updatedDeviss: Prisma.$DevisPayload<ExtArgs>[]
      FeedbackContacts: Prisma.$FeedbackContactPayload<ExtArgs>[]
      Task: Prisma.$TaskPayload<ExtArgs>[]
      Tasks: Prisma.$TaskPayload<ExtArgs>[]
      DevisItems: Prisma.$DevisItemPayload<ExtArgs>[]
      Devis: Prisma.$DevisPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string | null
      email: string
      emailVerified: Date | null
      image: string | null
      password: string | null
      role: $Enums.Role
      accessType: $Enums.AccessType
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    authenticators<T extends User$authenticatorsArgs<ExtArgs> = {}>(args?: Subset<T, User$authenticatorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    organisations<T extends User$organisationsArgs<ExtArgs> = {}>(args?: Subset<T, User$organisationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ownedOrganisations<T extends User$ownedOrganisationsArgs<ExtArgs> = {}>(args?: Subset<T, User$ownedOrganisationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invitations<T extends User$invitationsArgs<ExtArgs> = {}>(args?: Subset<T, User$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    passwordResetTokens<T extends User$passwordResetTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$passwordResetTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FeedbackContact<T extends User$FeedbackContactArgs<ExtArgs> = {}>(args?: Subset<T, User$FeedbackContactArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends User$notesArgs<ExtArgs> = {}>(args?: Subset<T, User$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    collaboratedNotes<T extends User$collaboratedNotesArgs<ExtArgs> = {}>(args?: Subset<T, User$collaboratedNotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaskAssignee<T extends User$TaskAssigneeArgs<ExtArgs> = {}>(args?: Subset<T, User$TaskAssigneeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TaskCreator<T extends User$TaskCreatorArgs<ExtArgs> = {}>(args?: Subset<T, User$TaskCreatorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CreatedActivities<T extends User$CreatedActivitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$CreatedActivitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UpdatedActivities<T extends User$UpdatedActivitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$UpdatedActivitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RelatedActivities<T extends User$RelatedActivitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$RelatedActivitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AllActivityLogs<T extends User$AllActivityLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$AllActivityLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends User$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, User$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends User$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    User<T extends User$UserArgs<ExtArgs> = {}>(args?: Subset<T, User$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Users<T extends User$UsersArgs<ExtArgs> = {}>(args?: Subset<T, User$UsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Favorite<T extends User$FavoriteArgs<ExtArgs> = {}>(args?: Subset<T, User$FavoriteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Organisation<T extends User$OrganisationArgs<ExtArgs> = {}>(args?: Subset<T, User$OrganisationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Organisations<T extends User$OrganisationsArgs<ExtArgs> = {}>(args?: Subset<T, User$OrganisationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Contact<T extends User$ContactArgs<ExtArgs> = {}>(args?: Subset<T, User$ContactArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Contacts<T extends User$ContactsArgs<ExtArgs> = {}>(args?: Subset<T, User$ContactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Comment<T extends User$CommentArgs<ExtArgs> = {}>(args?: Subset<T, User$CommentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Category<T extends User$CategoryArgs<ExtArgs> = {}>(args?: Subset<T, User$CategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Categorys<T extends User$CategorysArgs<ExtArgs> = {}>(args?: Subset<T, User$CategorysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product<T extends User$ProductArgs<ExtArgs> = {}>(args?: Subset<T, User$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Products<T extends User$ProductsArgs<ExtArgs> = {}>(args?: Subset<T, User$ProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Stock<T extends User$StockArgs<ExtArgs> = {}>(args?: Subset<T, User$StockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Stocks<T extends User$StocksArgs<ExtArgs> = {}>(args?: Subset<T, User$StocksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Brand<T extends User$BrandArgs<ExtArgs> = {}>(args?: Subset<T, User$BrandArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Brands<T extends User$BrandsArgs<ExtArgs> = {}>(args?: Subset<T, User$BrandsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Note<T extends User$NoteArgs<ExtArgs> = {}>(args?: Subset<T, User$NoteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Notes<T extends User$NotesArgs<ExtArgs> = {}>(args?: Subset<T, User$NotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Deviss<T extends User$DevissArgs<ExtArgs> = {}>(args?: Subset<T, User$DevissArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedDeviss<T extends User$updatedDevissArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedDevissArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FeedbackContacts<T extends User$FeedbackContactsArgs<ExtArgs> = {}>(args?: Subset<T, User$FeedbackContactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Task<T extends User$TaskArgs<ExtArgs> = {}>(args?: Subset<T, User$TaskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Tasks<T extends User$TasksArgs<ExtArgs> = {}>(args?: Subset<T, User$TasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DevisItems<T extends User$DevisItemsArgs<ExtArgs> = {}>(args?: Subset<T, User$DevisItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Devis<T extends User$DevisArgs<ExtArgs> = {}>(args?: Subset<T, User$DevisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly image: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly accessType: FieldRef<"User", 'AccessType'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly isArchived: FieldRef<"User", 'Boolean'>
    readonly archivedAt: FieldRef<"User", 'DateTime'>
    readonly archivedBy: FieldRef<"User", 'String'>
    readonly createdByUserId: FieldRef<"User", 'String'>
    readonly updatedByUserId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.authenticators
   */
  export type User$authenticatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    where?: AuthenticatorWhereInput
    orderBy?: AuthenticatorOrderByWithRelationInput | AuthenticatorOrderByWithRelationInput[]
    cursor?: AuthenticatorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuthenticatorScalarFieldEnum | AuthenticatorScalarFieldEnum[]
  }

  /**
   * User.organisations
   */
  export type User$organisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    cursor?: OrganisationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * User.ownedOrganisations
   */
  export type User$ownedOrganisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    cursor?: OrganisationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * User.invitations
   */
  export type User$invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    cursor?: InvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * User.passwordResetTokens
   */
  export type User$passwordResetTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    where?: PasswordResetTokenWhereInput
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    cursor?: PasswordResetTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * User.FeedbackContact
   */
  export type User$FeedbackContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    where?: FeedbackContactWhereInput
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    cursor?: FeedbackContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FeedbackContactScalarFieldEnum | FeedbackContactScalarFieldEnum[]
  }

  /**
   * User.notes
   */
  export type User$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * User.collaboratedNotes
   */
  export type User$collaboratedNotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * User.TaskAssignee
   */
  export type User$TaskAssigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.TaskCreator
   */
  export type User$TaskCreatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.CreatedActivities
   */
  export type User$CreatedActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * User.UpdatedActivities
   */
  export type User$UpdatedActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * User.RelatedActivities
   */
  export type User$RelatedActivitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * User.AllActivityLogs
   */
  export type User$AllActivityLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * User.createdByUser
   */
  export type User$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.updatedByUser
   */
  export type User$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.User
   */
  export type User$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.Users
   */
  export type User$UsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.Favorite
   */
  export type User$FavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * User.Organisation
   */
  export type User$OrganisationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    cursor?: OrganisationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * User.Organisations
   */
  export type User$OrganisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    cursor?: OrganisationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * User.Contact
   */
  export type User$ContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * User.Contacts
   */
  export type User$ContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * User.Comment
   */
  export type User$CommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * User.Category
   */
  export type User$CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.Categorys
   */
  export type User$CategorysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.Product
   */
  export type User$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.Products
   */
  export type User$ProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.Stock
   */
  export type User$StockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * User.Stocks
   */
  export type User$StocksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * User.Brand
   */
  export type User$BrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * User.Brands
   */
  export type User$BrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * User.Note
   */
  export type User$NoteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * User.Notes
   */
  export type User$NotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * User.Deviss
   */
  export type User$DevissArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    where?: DevisWhereInput
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    cursor?: DevisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * User.updatedDeviss
   */
  export type User$updatedDevissArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    where?: DevisWhereInput
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    cursor?: DevisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * User.FeedbackContacts
   */
  export type User$FeedbackContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    where?: FeedbackContactWhereInput
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    cursor?: FeedbackContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FeedbackContactScalarFieldEnum | FeedbackContactScalarFieldEnum[]
  }

  /**
   * User.Task
   */
  export type User$TaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.Tasks
   */
  export type User$TasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * User.DevisItems
   */
  export type User$DevisItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    where?: DevisItemWhereInput
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    cursor?: DevisItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisItemScalarFieldEnum | DevisItemScalarFieldEnum[]
  }

  /**
   * User.Devis
   */
  export type User$DevisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    where?: DevisWhereInput
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    cursor?: DevisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Organisation
   */

  export type AggregateOrganisation = {
    _count: OrganisationCountAggregateOutputType | null
    _min: OrganisationMinAggregateOutputType | null
    _max: OrganisationMaxAggregateOutputType | null
  }

  export type OrganisationMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    ownerId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    domain: $Enums.Domain | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type OrganisationMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    ownerId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    domain: $Enums.Domain | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type OrganisationCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    logo: number
    ownerId: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    domain: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type OrganisationMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    ownerId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    domain?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type OrganisationMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    ownerId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    domain?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type OrganisationCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    ownerId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    domain?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type OrganisationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organisation to aggregate.
     */
    where?: OrganisationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organisations to fetch.
     */
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganisationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organisations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organisations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Organisations
    **/
    _count?: true | OrganisationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganisationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganisationMaxAggregateInputType
  }

  export type GetOrganisationAggregateType<T extends OrganisationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganisation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganisation[P]>
      : GetScalarType<T[P], AggregateOrganisation[P]>
  }




  export type OrganisationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithAggregationInput | OrganisationOrderByWithAggregationInput[]
    by: OrganisationScalarFieldEnum[] | OrganisationScalarFieldEnum
    having?: OrganisationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganisationCountAggregateInputType | true
    _min?: OrganisationMinAggregateInputType
    _max?: OrganisationMaxAggregateInputType
  }

  export type OrganisationGroupByOutputType = {
    id: string
    name: string
    slug: string
    logo: string | null
    ownerId: string
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    domain: $Enums.Domain
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: OrganisationCountAggregateOutputType | null
    _min: OrganisationMinAggregateOutputType | null
    _max: OrganisationMaxAggregateOutputType | null
  }

  type GetOrganisationGroupByPayload<T extends OrganisationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganisationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganisationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganisationGroupByOutputType[P]>
            : GetScalarType<T[P], OrganisationGroupByOutputType[P]>
        }
      >
    >


  export type OrganisationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    ownerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    domain?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    members?: boolean | Organisation$membersArgs<ExtArgs>
    invitations?: boolean | Organisation$invitationsArgs<ExtArgs>
    Product?: boolean | Organisation$ProductArgs<ExtArgs>
    Stock?: boolean | Organisation$StockArgs<ExtArgs>
    Contact?: boolean | Organisation$ContactArgs<ExtArgs>
    Category?: boolean | Organisation$CategoryArgs<ExtArgs>
    Brand?: boolean | Organisation$BrandArgs<ExtArgs>
    notes?: boolean | Organisation$notesArgs<ExtArgs>
    Devis?: boolean | Organisation$DevisArgs<ExtArgs>
    Task?: boolean | Organisation$TaskArgs<ExtArgs>
    Favorite?: boolean | Organisation$FavoriteArgs<ExtArgs>
    ActivityLogs?: boolean | Organisation$ActivityLogsArgs<ExtArgs>
    createdByUser?: boolean | Organisation$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Organisation$updatedByUserArgs<ExtArgs>
    _count?: boolean | OrganisationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organisation"]>

  export type OrganisationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    ownerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    domain?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Organisation$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Organisation$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["organisation"]>

  export type OrganisationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    ownerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    domain?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Organisation$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Organisation$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["organisation"]>

  export type OrganisationSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    ownerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    domain?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type OrganisationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "logo" | "ownerId" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "domain" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["organisation"]>
  export type OrganisationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    members?: boolean | Organisation$membersArgs<ExtArgs>
    invitations?: boolean | Organisation$invitationsArgs<ExtArgs>
    Product?: boolean | Organisation$ProductArgs<ExtArgs>
    Stock?: boolean | Organisation$StockArgs<ExtArgs>
    Contact?: boolean | Organisation$ContactArgs<ExtArgs>
    Category?: boolean | Organisation$CategoryArgs<ExtArgs>
    Brand?: boolean | Organisation$BrandArgs<ExtArgs>
    notes?: boolean | Organisation$notesArgs<ExtArgs>
    Devis?: boolean | Organisation$DevisArgs<ExtArgs>
    Task?: boolean | Organisation$TaskArgs<ExtArgs>
    Favorite?: boolean | Organisation$FavoriteArgs<ExtArgs>
    ActivityLogs?: boolean | Organisation$ActivityLogsArgs<ExtArgs>
    createdByUser?: boolean | Organisation$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Organisation$updatedByUserArgs<ExtArgs>
    _count?: boolean | OrganisationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrganisationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Organisation$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Organisation$updatedByUserArgs<ExtArgs>
  }
  export type OrganisationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Organisation$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Organisation$updatedByUserArgs<ExtArgs>
  }

  export type $OrganisationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Organisation"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs>
      members: Prisma.$UserPayload<ExtArgs>[]
      invitations: Prisma.$InvitationPayload<ExtArgs>[]
      Product: Prisma.$ProductPayload<ExtArgs>[]
      Stock: Prisma.$StockPayload<ExtArgs>[]
      Contact: Prisma.$ContactPayload<ExtArgs>[]
      Category: Prisma.$CategoryPayload<ExtArgs>[]
      Brand: Prisma.$BrandPayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      Devis: Prisma.$DevisPayload<ExtArgs>[]
      Task: Prisma.$TaskPayload<ExtArgs>[]
      Favorite: Prisma.$FavoritePayload<ExtArgs>[]
      ActivityLogs: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      logo: string | null
      ownerId: string
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      domain: $Enums.Domain
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["organisation"]>
    composites: {}
  }

  type OrganisationGetPayload<S extends boolean | null | undefined | OrganisationDefaultArgs> = $Result.GetResult<Prisma.$OrganisationPayload, S>

  type OrganisationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrganisationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganisationCountAggregateInputType | true
    }

  export interface OrganisationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Organisation'], meta: { name: 'Organisation' } }
    /**
     * Find zero or one Organisation that matches the filter.
     * @param {OrganisationFindUniqueArgs} args - Arguments to find a Organisation
     * @example
     * // Get one Organisation
     * const organisation = await prisma.organisation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganisationFindUniqueArgs>(args: SelectSubset<T, OrganisationFindUniqueArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Organisation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrganisationFindUniqueOrThrowArgs} args - Arguments to find a Organisation
     * @example
     * // Get one Organisation
     * const organisation = await prisma.organisation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganisationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganisationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organisation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationFindFirstArgs} args - Arguments to find a Organisation
     * @example
     * // Get one Organisation
     * const organisation = await prisma.organisation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganisationFindFirstArgs>(args?: SelectSubset<T, OrganisationFindFirstArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organisation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationFindFirstOrThrowArgs} args - Arguments to find a Organisation
     * @example
     * // Get one Organisation
     * const organisation = await prisma.organisation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganisationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganisationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Organisations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organisations
     * const organisations = await prisma.organisation.findMany()
     * 
     * // Get first 10 Organisations
     * const organisations = await prisma.organisation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organisationWithIdOnly = await prisma.organisation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganisationFindManyArgs>(args?: SelectSubset<T, OrganisationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Organisation.
     * @param {OrganisationCreateArgs} args - Arguments to create a Organisation.
     * @example
     * // Create one Organisation
     * const Organisation = await prisma.organisation.create({
     *   data: {
     *     // ... data to create a Organisation
     *   }
     * })
     * 
     */
    create<T extends OrganisationCreateArgs>(args: SelectSubset<T, OrganisationCreateArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Organisations.
     * @param {OrganisationCreateManyArgs} args - Arguments to create many Organisations.
     * @example
     * // Create many Organisations
     * const organisation = await prisma.organisation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganisationCreateManyArgs>(args?: SelectSubset<T, OrganisationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Organisations and returns the data saved in the database.
     * @param {OrganisationCreateManyAndReturnArgs} args - Arguments to create many Organisations.
     * @example
     * // Create many Organisations
     * const organisation = await prisma.organisation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Organisations and only return the `id`
     * const organisationWithIdOnly = await prisma.organisation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganisationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganisationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Organisation.
     * @param {OrganisationDeleteArgs} args - Arguments to delete one Organisation.
     * @example
     * // Delete one Organisation
     * const Organisation = await prisma.organisation.delete({
     *   where: {
     *     // ... filter to delete one Organisation
     *   }
     * })
     * 
     */
    delete<T extends OrganisationDeleteArgs>(args: SelectSubset<T, OrganisationDeleteArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Organisation.
     * @param {OrganisationUpdateArgs} args - Arguments to update one Organisation.
     * @example
     * // Update one Organisation
     * const organisation = await prisma.organisation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganisationUpdateArgs>(args: SelectSubset<T, OrganisationUpdateArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Organisations.
     * @param {OrganisationDeleteManyArgs} args - Arguments to filter Organisations to delete.
     * @example
     * // Delete a few Organisations
     * const { count } = await prisma.organisation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganisationDeleteManyArgs>(args?: SelectSubset<T, OrganisationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organisations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organisations
     * const organisation = await prisma.organisation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganisationUpdateManyArgs>(args: SelectSubset<T, OrganisationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organisations and returns the data updated in the database.
     * @param {OrganisationUpdateManyAndReturnArgs} args - Arguments to update many Organisations.
     * @example
     * // Update many Organisations
     * const organisation = await prisma.organisation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Organisations and only return the `id`
     * const organisationWithIdOnly = await prisma.organisation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrganisationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrganisationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Organisation.
     * @param {OrganisationUpsertArgs} args - Arguments to update or create a Organisation.
     * @example
     * // Update or create a Organisation
     * const organisation = await prisma.organisation.upsert({
     *   create: {
     *     // ... data to create a Organisation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organisation we want to update
     *   }
     * })
     */
    upsert<T extends OrganisationUpsertArgs>(args: SelectSubset<T, OrganisationUpsertArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Organisations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationCountArgs} args - Arguments to filter Organisations to count.
     * @example
     * // Count the number of Organisations
     * const count = await prisma.organisation.count({
     *   where: {
     *     // ... the filter for the Organisations we want to count
     *   }
     * })
    **/
    count<T extends OrganisationCountArgs>(
      args?: Subset<T, OrganisationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganisationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organisation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganisationAggregateArgs>(args: Subset<T, OrganisationAggregateArgs>): Prisma.PrismaPromise<GetOrganisationAggregateType<T>>

    /**
     * Group by Organisation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganisationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganisationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganisationGroupByArgs['orderBy'] }
        : { orderBy?: OrganisationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganisationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganisationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Organisation model
   */
  readonly fields: OrganisationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Organisation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganisationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    members<T extends Organisation$membersArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invitations<T extends Organisation$invitationsArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product<T extends Organisation$ProductArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Stock<T extends Organisation$StockArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$StockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Contact<T extends Organisation$ContactArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$ContactArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Category<T extends Organisation$CategoryArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$CategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Brand<T extends Organisation$BrandArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$BrandArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Organisation$notesArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Devis<T extends Organisation$DevisArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$DevisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Task<T extends Organisation$TaskArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$TaskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Favorite<T extends Organisation$FavoriteArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$FavoriteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ActivityLogs<T extends Organisation$ActivityLogsArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$ActivityLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Organisation$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Organisation$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Organisation$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Organisation model
   */
  interface OrganisationFieldRefs {
    readonly id: FieldRef<"Organisation", 'String'>
    readonly name: FieldRef<"Organisation", 'String'>
    readonly slug: FieldRef<"Organisation", 'String'>
    readonly logo: FieldRef<"Organisation", 'String'>
    readonly ownerId: FieldRef<"Organisation", 'String'>
    readonly createdAt: FieldRef<"Organisation", 'DateTime'>
    readonly updatedAt: FieldRef<"Organisation", 'DateTime'>
    readonly isArchived: FieldRef<"Organisation", 'Boolean'>
    readonly archivedAt: FieldRef<"Organisation", 'DateTime'>
    readonly archivedBy: FieldRef<"Organisation", 'String'>
    readonly domain: FieldRef<"Organisation", 'Domain'>
    readonly createdByUserId: FieldRef<"Organisation", 'String'>
    readonly updatedByUserId: FieldRef<"Organisation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Organisation findUnique
   */
  export type OrganisationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * Filter, which Organisation to fetch.
     */
    where: OrganisationWhereUniqueInput
  }

  /**
   * Organisation findUniqueOrThrow
   */
  export type OrganisationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * Filter, which Organisation to fetch.
     */
    where: OrganisationWhereUniqueInput
  }

  /**
   * Organisation findFirst
   */
  export type OrganisationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * Filter, which Organisation to fetch.
     */
    where?: OrganisationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organisations to fetch.
     */
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organisations.
     */
    cursor?: OrganisationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organisations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organisations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organisations.
     */
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * Organisation findFirstOrThrow
   */
  export type OrganisationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * Filter, which Organisation to fetch.
     */
    where?: OrganisationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organisations to fetch.
     */
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organisations.
     */
    cursor?: OrganisationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organisations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organisations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organisations.
     */
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * Organisation findMany
   */
  export type OrganisationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * Filter, which Organisations to fetch.
     */
    where?: OrganisationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organisations to fetch.
     */
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Organisations.
     */
    cursor?: OrganisationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organisations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organisations.
     */
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * Organisation create
   */
  export type OrganisationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * The data needed to create a Organisation.
     */
    data: XOR<OrganisationCreateInput, OrganisationUncheckedCreateInput>
  }

  /**
   * Organisation createMany
   */
  export type OrganisationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Organisations.
     */
    data: OrganisationCreateManyInput | OrganisationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organisation createManyAndReturn
   */
  export type OrganisationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * The data used to create many Organisations.
     */
    data: OrganisationCreateManyInput | OrganisationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Organisation update
   */
  export type OrganisationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * The data needed to update a Organisation.
     */
    data: XOR<OrganisationUpdateInput, OrganisationUncheckedUpdateInput>
    /**
     * Choose, which Organisation to update.
     */
    where: OrganisationWhereUniqueInput
  }

  /**
   * Organisation updateMany
   */
  export type OrganisationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Organisations.
     */
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyInput>
    /**
     * Filter which Organisations to update
     */
    where?: OrganisationWhereInput
    /**
     * Limit how many Organisations to update.
     */
    limit?: number
  }

  /**
   * Organisation updateManyAndReturn
   */
  export type OrganisationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * The data used to update Organisations.
     */
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyInput>
    /**
     * Filter which Organisations to update
     */
    where?: OrganisationWhereInput
    /**
     * Limit how many Organisations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Organisation upsert
   */
  export type OrganisationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * The filter to search for the Organisation to update in case it exists.
     */
    where: OrganisationWhereUniqueInput
    /**
     * In case the Organisation found by the `where` argument doesn't exist, create a new Organisation with this data.
     */
    create: XOR<OrganisationCreateInput, OrganisationUncheckedCreateInput>
    /**
     * In case the Organisation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganisationUpdateInput, OrganisationUncheckedUpdateInput>
  }

  /**
   * Organisation delete
   */
  export type OrganisationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    /**
     * Filter which Organisation to delete.
     */
    where: OrganisationWhereUniqueInput
  }

  /**
   * Organisation deleteMany
   */
  export type OrganisationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organisations to delete
     */
    where?: OrganisationWhereInput
    /**
     * Limit how many Organisations to delete.
     */
    limit?: number
  }

  /**
   * Organisation.members
   */
  export type Organisation$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Organisation.invitations
   */
  export type Organisation$invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    cursor?: InvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Organisation.Product
   */
  export type Organisation$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Organisation.Stock
   */
  export type Organisation$StockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Organisation.Contact
   */
  export type Organisation$ContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    cursor?: ContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Organisation.Category
   */
  export type Organisation$CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Organisation.Brand
   */
  export type Organisation$BrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Organisation.notes
   */
  export type Organisation$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Organisation.Devis
   */
  export type Organisation$DevisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    where?: DevisWhereInput
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    cursor?: DevisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * Organisation.Task
   */
  export type Organisation$TaskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Organisation.Favorite
   */
  export type Organisation$FavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Organisation.ActivityLogs
   */
  export type Organisation$ActivityLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Organisation.createdByUser
   */
  export type Organisation$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Organisation.updatedByUser
   */
  export type Organisation$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Organisation without action
   */
  export type OrganisationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Account$ActivityLogArgs<ExtArgs>
    _count?: boolean | AccountCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "provider" | "providerAccountId" | "refresh_token" | "access_token" | "expires_at" | "token_type" | "scope" | "id_token" | "session_state", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Account$ActivityLogArgs<ExtArgs>
    _count?: boolean | AccountCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Account$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Account$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account.ActivityLog
   */
  export type Account$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expires: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: string
    expires: Date
    createdAt: Date
    updatedAt: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Session$ActivityLogArgs<ExtArgs>
    _count?: boolean | SessionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "userId" | "expires" | "createdAt" | "updatedAt", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Session$ActivityLogArgs<ExtArgs>
    _count?: boolean | SessionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: string
      expires: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Session$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Session$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session.ActivityLog
   */
  export type Session$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    id: string | null
    identifier: string | null
    token: string | null
    expires: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    id: string | null
    identifier: string | null
    token: string | null
    expires: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    id: number
    identifier: number
    token: number
    expires: number
    isArchived: number
    archivedAt: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    id?: true
    identifier?: true
    token?: true
    expires?: true
    isArchived?: true
    archivedAt?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    id?: true
    identifier?: true
    token?: true
    expires?: true
    isArchived?: true
    archivedAt?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    id?: true
    identifier?: true
    token?: true
    expires?: true
    isArchived?: true
    archivedAt?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    id: string
    identifier: string
    token: string
    expires: Date
    isArchived: boolean
    archivedAt: Date | null
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
    isArchived?: boolean
    archivedAt?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
    isArchived?: boolean
    archivedAt?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
    isArchived?: boolean
    archivedAt?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectScalar = {
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
    isArchived?: boolean
    archivedAt?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "identifier" | "token" | "expires" | "isArchived" | "archivedAt", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      identifier: string
      token: string
      expires: Date
      isArchived: boolean
      archivedAt: Date | null
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationTokenWithIdOnly = await prisma.verificationToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationTokens and returns the data saved in the database.
     * @param {VerificationTokenCreateManyAndReturnArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationTokens and only return the `id`
     * const verificationTokenWithIdOnly = await prisma.verificationToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens and returns the data updated in the database.
     * @param {VerificationTokenUpdateManyAndReturnArgs} args - Arguments to update many VerificationTokens.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationTokens and only return the `id`
     * const verificationTokenWithIdOnly = await prisma.verificationToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */
  interface VerificationTokenFieldRefs {
    readonly id: FieldRef<"VerificationToken", 'String'>
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
    readonly isArchived: FieldRef<"VerificationToken", 'Boolean'>
    readonly archivedAt: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken createManyAndReturn
   */
  export type VerificationTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken updateManyAndReturn
   */
  export type VerificationTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to delete.
     */
    limit?: number
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model Authenticator
   */

  export type AggregateAuthenticator = {
    _count: AuthenticatorCountAggregateOutputType | null
    _avg: AuthenticatorAvgAggregateOutputType | null
    _sum: AuthenticatorSumAggregateOutputType | null
    _min: AuthenticatorMinAggregateOutputType | null
    _max: AuthenticatorMaxAggregateOutputType | null
  }

  export type AuthenticatorAvgAggregateOutputType = {
    counter: number | null
  }

  export type AuthenticatorSumAggregateOutputType = {
    counter: number | null
  }

  export type AuthenticatorMinAggregateOutputType = {
    id: string | null
    credentialID: string | null
    userId: string | null
    providerAccountId: string | null
    credentialPublicKey: string | null
    counter: number | null
    credentialDeviceType: string | null
    credentialBackedUp: boolean | null
    transports: string | null
  }

  export type AuthenticatorMaxAggregateOutputType = {
    id: string | null
    credentialID: string | null
    userId: string | null
    providerAccountId: string | null
    credentialPublicKey: string | null
    counter: number | null
    credentialDeviceType: string | null
    credentialBackedUp: boolean | null
    transports: string | null
  }

  export type AuthenticatorCountAggregateOutputType = {
    id: number
    credentialID: number
    userId: number
    providerAccountId: number
    credentialPublicKey: number
    counter: number
    credentialDeviceType: number
    credentialBackedUp: number
    transports: number
    _all: number
  }


  export type AuthenticatorAvgAggregateInputType = {
    counter?: true
  }

  export type AuthenticatorSumAggregateInputType = {
    counter?: true
  }

  export type AuthenticatorMinAggregateInputType = {
    id?: true
    credentialID?: true
    userId?: true
    providerAccountId?: true
    credentialPublicKey?: true
    counter?: true
    credentialDeviceType?: true
    credentialBackedUp?: true
    transports?: true
  }

  export type AuthenticatorMaxAggregateInputType = {
    id?: true
    credentialID?: true
    userId?: true
    providerAccountId?: true
    credentialPublicKey?: true
    counter?: true
    credentialDeviceType?: true
    credentialBackedUp?: true
    transports?: true
  }

  export type AuthenticatorCountAggregateInputType = {
    id?: true
    credentialID?: true
    userId?: true
    providerAccountId?: true
    credentialPublicKey?: true
    counter?: true
    credentialDeviceType?: true
    credentialBackedUp?: true
    transports?: true
    _all?: true
  }

  export type AuthenticatorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Authenticator to aggregate.
     */
    where?: AuthenticatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Authenticators to fetch.
     */
    orderBy?: AuthenticatorOrderByWithRelationInput | AuthenticatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuthenticatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Authenticators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Authenticators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Authenticators
    **/
    _count?: true | AuthenticatorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AuthenticatorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AuthenticatorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuthenticatorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuthenticatorMaxAggregateInputType
  }

  export type GetAuthenticatorAggregateType<T extends AuthenticatorAggregateArgs> = {
        [P in keyof T & keyof AggregateAuthenticator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuthenticator[P]>
      : GetScalarType<T[P], AggregateAuthenticator[P]>
  }




  export type AuthenticatorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuthenticatorWhereInput
    orderBy?: AuthenticatorOrderByWithAggregationInput | AuthenticatorOrderByWithAggregationInput[]
    by: AuthenticatorScalarFieldEnum[] | AuthenticatorScalarFieldEnum
    having?: AuthenticatorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuthenticatorCountAggregateInputType | true
    _avg?: AuthenticatorAvgAggregateInputType
    _sum?: AuthenticatorSumAggregateInputType
    _min?: AuthenticatorMinAggregateInputType
    _max?: AuthenticatorMaxAggregateInputType
  }

  export type AuthenticatorGroupByOutputType = {
    id: string
    credentialID: string
    userId: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports: string | null
    _count: AuthenticatorCountAggregateOutputType | null
    _avg: AuthenticatorAvgAggregateOutputType | null
    _sum: AuthenticatorSumAggregateOutputType | null
    _min: AuthenticatorMinAggregateOutputType | null
    _max: AuthenticatorMaxAggregateOutputType | null
  }

  type GetAuthenticatorGroupByPayload<T extends AuthenticatorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuthenticatorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuthenticatorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuthenticatorGroupByOutputType[P]>
            : GetScalarType<T[P], AuthenticatorGroupByOutputType[P]>
        }
      >
    >


  export type AuthenticatorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    credentialID?: boolean
    userId?: boolean
    providerAccountId?: boolean
    credentialPublicKey?: boolean
    counter?: boolean
    credentialDeviceType?: boolean
    credentialBackedUp?: boolean
    transports?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Authenticator$ActivityLogArgs<ExtArgs>
    _count?: boolean | AuthenticatorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["authenticator"]>

  export type AuthenticatorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    credentialID?: boolean
    userId?: boolean
    providerAccountId?: boolean
    credentialPublicKey?: boolean
    counter?: boolean
    credentialDeviceType?: boolean
    credentialBackedUp?: boolean
    transports?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["authenticator"]>

  export type AuthenticatorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    credentialID?: boolean
    userId?: boolean
    providerAccountId?: boolean
    credentialPublicKey?: boolean
    counter?: boolean
    credentialDeviceType?: boolean
    credentialBackedUp?: boolean
    transports?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["authenticator"]>

  export type AuthenticatorSelectScalar = {
    id?: boolean
    credentialID?: boolean
    userId?: boolean
    providerAccountId?: boolean
    credentialPublicKey?: boolean
    counter?: boolean
    credentialDeviceType?: boolean
    credentialBackedUp?: boolean
    transports?: boolean
  }

  export type AuthenticatorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "credentialID" | "userId" | "providerAccountId" | "credentialPublicKey" | "counter" | "credentialDeviceType" | "credentialBackedUp" | "transports", ExtArgs["result"]["authenticator"]>
  export type AuthenticatorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Authenticator$ActivityLogArgs<ExtArgs>
    _count?: boolean | AuthenticatorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AuthenticatorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuthenticatorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuthenticatorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Authenticator"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      credentialID: string
      userId: string
      providerAccountId: string
      credentialPublicKey: string
      counter: number
      credentialDeviceType: string
      credentialBackedUp: boolean
      transports: string | null
    }, ExtArgs["result"]["authenticator"]>
    composites: {}
  }

  type AuthenticatorGetPayload<S extends boolean | null | undefined | AuthenticatorDefaultArgs> = $Result.GetResult<Prisma.$AuthenticatorPayload, S>

  type AuthenticatorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AuthenticatorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AuthenticatorCountAggregateInputType | true
    }

  export interface AuthenticatorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Authenticator'], meta: { name: 'Authenticator' } }
    /**
     * Find zero or one Authenticator that matches the filter.
     * @param {AuthenticatorFindUniqueArgs} args - Arguments to find a Authenticator
     * @example
     * // Get one Authenticator
     * const authenticator = await prisma.authenticator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuthenticatorFindUniqueArgs>(args: SelectSubset<T, AuthenticatorFindUniqueArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Authenticator that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AuthenticatorFindUniqueOrThrowArgs} args - Arguments to find a Authenticator
     * @example
     * // Get one Authenticator
     * const authenticator = await prisma.authenticator.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuthenticatorFindUniqueOrThrowArgs>(args: SelectSubset<T, AuthenticatorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Authenticator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorFindFirstArgs} args - Arguments to find a Authenticator
     * @example
     * // Get one Authenticator
     * const authenticator = await prisma.authenticator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuthenticatorFindFirstArgs>(args?: SelectSubset<T, AuthenticatorFindFirstArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Authenticator that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorFindFirstOrThrowArgs} args - Arguments to find a Authenticator
     * @example
     * // Get one Authenticator
     * const authenticator = await prisma.authenticator.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuthenticatorFindFirstOrThrowArgs>(args?: SelectSubset<T, AuthenticatorFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Authenticators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Authenticators
     * const authenticators = await prisma.authenticator.findMany()
     * 
     * // Get first 10 Authenticators
     * const authenticators = await prisma.authenticator.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const authenticatorWithIdOnly = await prisma.authenticator.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuthenticatorFindManyArgs>(args?: SelectSubset<T, AuthenticatorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Authenticator.
     * @param {AuthenticatorCreateArgs} args - Arguments to create a Authenticator.
     * @example
     * // Create one Authenticator
     * const Authenticator = await prisma.authenticator.create({
     *   data: {
     *     // ... data to create a Authenticator
     *   }
     * })
     * 
     */
    create<T extends AuthenticatorCreateArgs>(args: SelectSubset<T, AuthenticatorCreateArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Authenticators.
     * @param {AuthenticatorCreateManyArgs} args - Arguments to create many Authenticators.
     * @example
     * // Create many Authenticators
     * const authenticator = await prisma.authenticator.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuthenticatorCreateManyArgs>(args?: SelectSubset<T, AuthenticatorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Authenticators and returns the data saved in the database.
     * @param {AuthenticatorCreateManyAndReturnArgs} args - Arguments to create many Authenticators.
     * @example
     * // Create many Authenticators
     * const authenticator = await prisma.authenticator.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Authenticators and only return the `id`
     * const authenticatorWithIdOnly = await prisma.authenticator.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuthenticatorCreateManyAndReturnArgs>(args?: SelectSubset<T, AuthenticatorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Authenticator.
     * @param {AuthenticatorDeleteArgs} args - Arguments to delete one Authenticator.
     * @example
     * // Delete one Authenticator
     * const Authenticator = await prisma.authenticator.delete({
     *   where: {
     *     // ... filter to delete one Authenticator
     *   }
     * })
     * 
     */
    delete<T extends AuthenticatorDeleteArgs>(args: SelectSubset<T, AuthenticatorDeleteArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Authenticator.
     * @param {AuthenticatorUpdateArgs} args - Arguments to update one Authenticator.
     * @example
     * // Update one Authenticator
     * const authenticator = await prisma.authenticator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuthenticatorUpdateArgs>(args: SelectSubset<T, AuthenticatorUpdateArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Authenticators.
     * @param {AuthenticatorDeleteManyArgs} args - Arguments to filter Authenticators to delete.
     * @example
     * // Delete a few Authenticators
     * const { count } = await prisma.authenticator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuthenticatorDeleteManyArgs>(args?: SelectSubset<T, AuthenticatorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Authenticators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Authenticators
     * const authenticator = await prisma.authenticator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuthenticatorUpdateManyArgs>(args: SelectSubset<T, AuthenticatorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Authenticators and returns the data updated in the database.
     * @param {AuthenticatorUpdateManyAndReturnArgs} args - Arguments to update many Authenticators.
     * @example
     * // Update many Authenticators
     * const authenticator = await prisma.authenticator.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Authenticators and only return the `id`
     * const authenticatorWithIdOnly = await prisma.authenticator.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AuthenticatorUpdateManyAndReturnArgs>(args: SelectSubset<T, AuthenticatorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Authenticator.
     * @param {AuthenticatorUpsertArgs} args - Arguments to update or create a Authenticator.
     * @example
     * // Update or create a Authenticator
     * const authenticator = await prisma.authenticator.upsert({
     *   create: {
     *     // ... data to create a Authenticator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Authenticator we want to update
     *   }
     * })
     */
    upsert<T extends AuthenticatorUpsertArgs>(args: SelectSubset<T, AuthenticatorUpsertArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Authenticators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorCountArgs} args - Arguments to filter Authenticators to count.
     * @example
     * // Count the number of Authenticators
     * const count = await prisma.authenticator.count({
     *   where: {
     *     // ... the filter for the Authenticators we want to count
     *   }
     * })
    **/
    count<T extends AuthenticatorCountArgs>(
      args?: Subset<T, AuthenticatorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuthenticatorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Authenticator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuthenticatorAggregateArgs>(args: Subset<T, AuthenticatorAggregateArgs>): Prisma.PrismaPromise<GetAuthenticatorAggregateType<T>>

    /**
     * Group by Authenticator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuthenticatorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuthenticatorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuthenticatorGroupByArgs['orderBy'] }
        : { orderBy?: AuthenticatorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuthenticatorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuthenticatorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Authenticator model
   */
  readonly fields: AuthenticatorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Authenticator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuthenticatorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Authenticator$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Authenticator$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Authenticator model
   */
  interface AuthenticatorFieldRefs {
    readonly id: FieldRef<"Authenticator", 'String'>
    readonly credentialID: FieldRef<"Authenticator", 'String'>
    readonly userId: FieldRef<"Authenticator", 'String'>
    readonly providerAccountId: FieldRef<"Authenticator", 'String'>
    readonly credentialPublicKey: FieldRef<"Authenticator", 'String'>
    readonly counter: FieldRef<"Authenticator", 'Int'>
    readonly credentialDeviceType: FieldRef<"Authenticator", 'String'>
    readonly credentialBackedUp: FieldRef<"Authenticator", 'Boolean'>
    readonly transports: FieldRef<"Authenticator", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Authenticator findUnique
   */
  export type AuthenticatorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * Filter, which Authenticator to fetch.
     */
    where: AuthenticatorWhereUniqueInput
  }

  /**
   * Authenticator findUniqueOrThrow
   */
  export type AuthenticatorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * Filter, which Authenticator to fetch.
     */
    where: AuthenticatorWhereUniqueInput
  }

  /**
   * Authenticator findFirst
   */
  export type AuthenticatorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * Filter, which Authenticator to fetch.
     */
    where?: AuthenticatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Authenticators to fetch.
     */
    orderBy?: AuthenticatorOrderByWithRelationInput | AuthenticatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Authenticators.
     */
    cursor?: AuthenticatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Authenticators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Authenticators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Authenticators.
     */
    distinct?: AuthenticatorScalarFieldEnum | AuthenticatorScalarFieldEnum[]
  }

  /**
   * Authenticator findFirstOrThrow
   */
  export type AuthenticatorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * Filter, which Authenticator to fetch.
     */
    where?: AuthenticatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Authenticators to fetch.
     */
    orderBy?: AuthenticatorOrderByWithRelationInput | AuthenticatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Authenticators.
     */
    cursor?: AuthenticatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Authenticators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Authenticators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Authenticators.
     */
    distinct?: AuthenticatorScalarFieldEnum | AuthenticatorScalarFieldEnum[]
  }

  /**
   * Authenticator findMany
   */
  export type AuthenticatorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * Filter, which Authenticators to fetch.
     */
    where?: AuthenticatorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Authenticators to fetch.
     */
    orderBy?: AuthenticatorOrderByWithRelationInput | AuthenticatorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Authenticators.
     */
    cursor?: AuthenticatorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Authenticators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Authenticators.
     */
    skip?: number
    distinct?: AuthenticatorScalarFieldEnum | AuthenticatorScalarFieldEnum[]
  }

  /**
   * Authenticator create
   */
  export type AuthenticatorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * The data needed to create a Authenticator.
     */
    data: XOR<AuthenticatorCreateInput, AuthenticatorUncheckedCreateInput>
  }

  /**
   * Authenticator createMany
   */
  export type AuthenticatorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Authenticators.
     */
    data: AuthenticatorCreateManyInput | AuthenticatorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Authenticator createManyAndReturn
   */
  export type AuthenticatorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * The data used to create many Authenticators.
     */
    data: AuthenticatorCreateManyInput | AuthenticatorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Authenticator update
   */
  export type AuthenticatorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * The data needed to update a Authenticator.
     */
    data: XOR<AuthenticatorUpdateInput, AuthenticatorUncheckedUpdateInput>
    /**
     * Choose, which Authenticator to update.
     */
    where: AuthenticatorWhereUniqueInput
  }

  /**
   * Authenticator updateMany
   */
  export type AuthenticatorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Authenticators.
     */
    data: XOR<AuthenticatorUpdateManyMutationInput, AuthenticatorUncheckedUpdateManyInput>
    /**
     * Filter which Authenticators to update
     */
    where?: AuthenticatorWhereInput
    /**
     * Limit how many Authenticators to update.
     */
    limit?: number
  }

  /**
   * Authenticator updateManyAndReturn
   */
  export type AuthenticatorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * The data used to update Authenticators.
     */
    data: XOR<AuthenticatorUpdateManyMutationInput, AuthenticatorUncheckedUpdateManyInput>
    /**
     * Filter which Authenticators to update
     */
    where?: AuthenticatorWhereInput
    /**
     * Limit how many Authenticators to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Authenticator upsert
   */
  export type AuthenticatorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * The filter to search for the Authenticator to update in case it exists.
     */
    where: AuthenticatorWhereUniqueInput
    /**
     * In case the Authenticator found by the `where` argument doesn't exist, create a new Authenticator with this data.
     */
    create: XOR<AuthenticatorCreateInput, AuthenticatorUncheckedCreateInput>
    /**
     * In case the Authenticator was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuthenticatorUpdateInput, AuthenticatorUncheckedUpdateInput>
  }

  /**
   * Authenticator delete
   */
  export type AuthenticatorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    /**
     * Filter which Authenticator to delete.
     */
    where: AuthenticatorWhereUniqueInput
  }

  /**
   * Authenticator deleteMany
   */
  export type AuthenticatorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Authenticators to delete
     */
    where?: AuthenticatorWhereInput
    /**
     * Limit how many Authenticators to delete.
     */
    limit?: number
  }

  /**
   * Authenticator.ActivityLog
   */
  export type Authenticator$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Authenticator without action
   */
  export type AuthenticatorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
  }


  /**
   * Model Invitation
   */

  export type AggregateInvitation = {
    _count: InvitationCountAggregateOutputType | null
    _min: InvitationMinAggregateOutputType | null
    _max: InvitationMaxAggregateOutputType | null
  }

  export type InvitationMinAggregateOutputType = {
    id: string | null
    email: string | null
    organisationId: string | null
    role: $Enums.Role | null
    accessType: $Enums.AccessType | null
    invitedById: string | null
    invitedAt: Date | null
    acceptedAt: Date | null
    token: string | null
    tokenExpiresAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
  }

  export type InvitationMaxAggregateOutputType = {
    id: string | null
    email: string | null
    organisationId: string | null
    role: $Enums.Role | null
    accessType: $Enums.AccessType | null
    invitedById: string | null
    invitedAt: Date | null
    acceptedAt: Date | null
    token: string | null
    tokenExpiresAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
  }

  export type InvitationCountAggregateOutputType = {
    id: number
    email: number
    organisationId: number
    role: number
    accessType: number
    invitedById: number
    invitedAt: number
    acceptedAt: number
    token: number
    tokenExpiresAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    _all: number
  }


  export type InvitationMinAggregateInputType = {
    id?: true
    email?: true
    organisationId?: true
    role?: true
    accessType?: true
    invitedById?: true
    invitedAt?: true
    acceptedAt?: true
    token?: true
    tokenExpiresAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
  }

  export type InvitationMaxAggregateInputType = {
    id?: true
    email?: true
    organisationId?: true
    role?: true
    accessType?: true
    invitedById?: true
    invitedAt?: true
    acceptedAt?: true
    token?: true
    tokenExpiresAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
  }

  export type InvitationCountAggregateInputType = {
    id?: true
    email?: true
    organisationId?: true
    role?: true
    accessType?: true
    invitedById?: true
    invitedAt?: true
    acceptedAt?: true
    token?: true
    tokenExpiresAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    _all?: true
  }

  export type InvitationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invitation to aggregate.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invitations
    **/
    _count?: true | InvitationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvitationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvitationMaxAggregateInputType
  }

  export type GetInvitationAggregateType<T extends InvitationAggregateArgs> = {
        [P in keyof T & keyof AggregateInvitation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvitation[P]>
      : GetScalarType<T[P], AggregateInvitation[P]>
  }




  export type InvitationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithAggregationInput | InvitationOrderByWithAggregationInput[]
    by: InvitationScalarFieldEnum[] | InvitationScalarFieldEnum
    having?: InvitationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvitationCountAggregateInputType | true
    _min?: InvitationMinAggregateInputType
    _max?: InvitationMaxAggregateInputType
  }

  export type InvitationGroupByOutputType = {
    id: string
    email: string
    organisationId: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedById: string
    invitedAt: Date
    acceptedAt: Date | null
    token: string
    tokenExpiresAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    _count: InvitationCountAggregateOutputType | null
    _min: InvitationMinAggregateOutputType | null
    _max: InvitationMaxAggregateOutputType | null
  }

  type GetInvitationGroupByPayload<T extends InvitationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvitationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvitationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvitationGroupByOutputType[P]>
            : GetScalarType<T[P], InvitationGroupByOutputType[P]>
        }
      >
    >


  export type InvitationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    organisationId?: boolean
    role?: boolean
    accessType?: boolean
    invitedById?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    token?: boolean
    tokenExpiresAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    invitedBy?: boolean | UserDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Invitation$ActivityLogArgs<ExtArgs>
    _count?: boolean | InvitationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    organisationId?: boolean
    role?: boolean
    accessType?: boolean
    invitedById?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    token?: boolean
    tokenExpiresAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    invitedBy?: boolean | UserDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    organisationId?: boolean
    role?: boolean
    accessType?: boolean
    invitedById?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    token?: boolean
    tokenExpiresAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    invitedBy?: boolean | UserDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectScalar = {
    id?: boolean
    email?: boolean
    organisationId?: boolean
    role?: boolean
    accessType?: boolean
    invitedById?: boolean
    invitedAt?: boolean
    acceptedAt?: boolean
    token?: boolean
    tokenExpiresAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
  }

  export type InvitationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "organisationId" | "role" | "accessType" | "invitedById" | "invitedAt" | "acceptedAt" | "token" | "tokenExpiresAt" | "isArchived" | "archivedAt" | "archivedBy", ExtArgs["result"]["invitation"]>
  export type InvitationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invitedBy?: boolean | UserDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Invitation$ActivityLogArgs<ExtArgs>
    _count?: boolean | InvitationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InvitationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invitedBy?: boolean | UserDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
  }
  export type InvitationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invitedBy?: boolean | UserDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
  }

  export type $InvitationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invitation"
    objects: {
      invitedBy: Prisma.$UserPayload<ExtArgs>
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      organisationId: string
      role: $Enums.Role
      accessType: $Enums.AccessType
      invitedById: string
      invitedAt: Date
      acceptedAt: Date | null
      token: string
      tokenExpiresAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
    }, ExtArgs["result"]["invitation"]>
    composites: {}
  }

  type InvitationGetPayload<S extends boolean | null | undefined | InvitationDefaultArgs> = $Result.GetResult<Prisma.$InvitationPayload, S>

  type InvitationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvitationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvitationCountAggregateInputType | true
    }

  export interface InvitationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invitation'], meta: { name: 'Invitation' } }
    /**
     * Find zero or one Invitation that matches the filter.
     * @param {InvitationFindUniqueArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvitationFindUniqueArgs>(args: SelectSubset<T, InvitationFindUniqueArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invitation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvitationFindUniqueOrThrowArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvitationFindUniqueOrThrowArgs>(args: SelectSubset<T, InvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invitation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindFirstArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvitationFindFirstArgs>(args?: SelectSubset<T, InvitationFindFirstArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invitation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindFirstOrThrowArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvitationFindFirstOrThrowArgs>(args?: SelectSubset<T, InvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invitations
     * const invitations = await prisma.invitation.findMany()
     * 
     * // Get first 10 Invitations
     * const invitations = await prisma.invitation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invitationWithIdOnly = await prisma.invitation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvitationFindManyArgs>(args?: SelectSubset<T, InvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invitation.
     * @param {InvitationCreateArgs} args - Arguments to create a Invitation.
     * @example
     * // Create one Invitation
     * const Invitation = await prisma.invitation.create({
     *   data: {
     *     // ... data to create a Invitation
     *   }
     * })
     * 
     */
    create<T extends InvitationCreateArgs>(args: SelectSubset<T, InvitationCreateArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invitations.
     * @param {InvitationCreateManyArgs} args - Arguments to create many Invitations.
     * @example
     * // Create many Invitations
     * const invitation = await prisma.invitation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvitationCreateManyArgs>(args?: SelectSubset<T, InvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invitations and returns the data saved in the database.
     * @param {InvitationCreateManyAndReturnArgs} args - Arguments to create many Invitations.
     * @example
     * // Create many Invitations
     * const invitation = await prisma.invitation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invitations and only return the `id`
     * const invitationWithIdOnly = await prisma.invitation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvitationCreateManyAndReturnArgs>(args?: SelectSubset<T, InvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Invitation.
     * @param {InvitationDeleteArgs} args - Arguments to delete one Invitation.
     * @example
     * // Delete one Invitation
     * const Invitation = await prisma.invitation.delete({
     *   where: {
     *     // ... filter to delete one Invitation
     *   }
     * })
     * 
     */
    delete<T extends InvitationDeleteArgs>(args: SelectSubset<T, InvitationDeleteArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invitation.
     * @param {InvitationUpdateArgs} args - Arguments to update one Invitation.
     * @example
     * // Update one Invitation
     * const invitation = await prisma.invitation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvitationUpdateArgs>(args: SelectSubset<T, InvitationUpdateArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invitations.
     * @param {InvitationDeleteManyArgs} args - Arguments to filter Invitations to delete.
     * @example
     * // Delete a few Invitations
     * const { count } = await prisma.invitation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvitationDeleteManyArgs>(args?: SelectSubset<T, InvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invitations
     * const invitation = await prisma.invitation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvitationUpdateManyArgs>(args: SelectSubset<T, InvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invitations and returns the data updated in the database.
     * @param {InvitationUpdateManyAndReturnArgs} args - Arguments to update many Invitations.
     * @example
     * // Update many Invitations
     * const invitation = await prisma.invitation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invitations and only return the `id`
     * const invitationWithIdOnly = await prisma.invitation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvitationUpdateManyAndReturnArgs>(args: SelectSubset<T, InvitationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Invitation.
     * @param {InvitationUpsertArgs} args - Arguments to update or create a Invitation.
     * @example
     * // Update or create a Invitation
     * const invitation = await prisma.invitation.upsert({
     *   create: {
     *     // ... data to create a Invitation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invitation we want to update
     *   }
     * })
     */
    upsert<T extends InvitationUpsertArgs>(args: SelectSubset<T, InvitationUpsertArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationCountArgs} args - Arguments to filter Invitations to count.
     * @example
     * // Count the number of Invitations
     * const count = await prisma.invitation.count({
     *   where: {
     *     // ... the filter for the Invitations we want to count
     *   }
     * })
    **/
    count<T extends InvitationCountArgs>(
      args?: Subset<T, InvitationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvitationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvitationAggregateArgs>(args: Subset<T, InvitationAggregateArgs>): Prisma.PrismaPromise<GetInvitationAggregateType<T>>

    /**
     * Group by Invitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvitationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvitationGroupByArgs['orderBy'] }
        : { orderBy?: InvitationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invitation model
   */
  readonly fields: InvitationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invitation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvitationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    invitedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Invitation$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Invitation$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invitation model
   */
  interface InvitationFieldRefs {
    readonly id: FieldRef<"Invitation", 'String'>
    readonly email: FieldRef<"Invitation", 'String'>
    readonly organisationId: FieldRef<"Invitation", 'String'>
    readonly role: FieldRef<"Invitation", 'Role'>
    readonly accessType: FieldRef<"Invitation", 'AccessType'>
    readonly invitedById: FieldRef<"Invitation", 'String'>
    readonly invitedAt: FieldRef<"Invitation", 'DateTime'>
    readonly acceptedAt: FieldRef<"Invitation", 'DateTime'>
    readonly token: FieldRef<"Invitation", 'String'>
    readonly tokenExpiresAt: FieldRef<"Invitation", 'DateTime'>
    readonly isArchived: FieldRef<"Invitation", 'Boolean'>
    readonly archivedAt: FieldRef<"Invitation", 'DateTime'>
    readonly archivedBy: FieldRef<"Invitation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Invitation findUnique
   */
  export type InvitationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation findUniqueOrThrow
   */
  export type InvitationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation findFirst
   */
  export type InvitationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invitations.
     */
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation findFirstOrThrow
   */
  export type InvitationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invitations.
     */
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation findMany
   */
  export type InvitationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitations to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation create
   */
  export type InvitationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The data needed to create a Invitation.
     */
    data: XOR<InvitationCreateInput, InvitationUncheckedCreateInput>
  }

  /**
   * Invitation createMany
   */
  export type InvitationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invitations.
     */
    data: InvitationCreateManyInput | InvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invitation createManyAndReturn
   */
  export type InvitationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * The data used to create many Invitations.
     */
    data: InvitationCreateManyInput | InvitationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invitation update
   */
  export type InvitationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The data needed to update a Invitation.
     */
    data: XOR<InvitationUpdateInput, InvitationUncheckedUpdateInput>
    /**
     * Choose, which Invitation to update.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation updateMany
   */
  export type InvitationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invitations.
     */
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyInput>
    /**
     * Filter which Invitations to update
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to update.
     */
    limit?: number
  }

  /**
   * Invitation updateManyAndReturn
   */
  export type InvitationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * The data used to update Invitations.
     */
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyInput>
    /**
     * Filter which Invitations to update
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invitation upsert
   */
  export type InvitationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The filter to search for the Invitation to update in case it exists.
     */
    where: InvitationWhereUniqueInput
    /**
     * In case the Invitation found by the `where` argument doesn't exist, create a new Invitation with this data.
     */
    create: XOR<InvitationCreateInput, InvitationUncheckedCreateInput>
    /**
     * In case the Invitation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvitationUpdateInput, InvitationUncheckedUpdateInput>
  }

  /**
   * Invitation delete
   */
  export type InvitationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter which Invitation to delete.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation deleteMany
   */
  export type InvitationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invitations to delete
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to delete.
     */
    limit?: number
  }

  /**
   * Invitation.ActivityLog
   */
  export type Invitation$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Invitation without action
   */
  export type InvitationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
  }


  /**
   * Model PasswordResetToken
   */

  export type AggregatePasswordResetToken = {
    _count: PasswordResetTokenCountAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  export type PasswordResetTokenMinAggregateOutputType = {
    id: string | null
    userId: string | null
    token: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type PasswordResetTokenMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    token: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type PasswordResetTokenCountAggregateOutputType = {
    id: number
    userId: number
    token: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type PasswordResetTokenMinAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    expiresAt?: true
    createdAt?: true
  }

  export type PasswordResetTokenMaxAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    expiresAt?: true
    createdAt?: true
  }

  export type PasswordResetTokenCountAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type PasswordResetTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetToken to aggregate.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PasswordResetTokens
    **/
    _count?: true | PasswordResetTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PasswordResetTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type GetPasswordResetTokenAggregateType<T extends PasswordResetTokenAggregateArgs> = {
        [P in keyof T & keyof AggregatePasswordResetToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePasswordResetToken[P]>
      : GetScalarType<T[P], AggregatePasswordResetToken[P]>
  }




  export type PasswordResetTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokenWhereInput
    orderBy?: PasswordResetTokenOrderByWithAggregationInput | PasswordResetTokenOrderByWithAggregationInput[]
    by: PasswordResetTokenScalarFieldEnum[] | PasswordResetTokenScalarFieldEnum
    having?: PasswordResetTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PasswordResetTokenCountAggregateInputType | true
    _min?: PasswordResetTokenMinAggregateInputType
    _max?: PasswordResetTokenMaxAggregateInputType
  }

  export type PasswordResetTokenGroupByOutputType = {
    id: string
    userId: string
    token: string
    expiresAt: Date
    createdAt: Date
    _count: PasswordResetTokenCountAggregateOutputType | null
    _min: PasswordResetTokenMinAggregateOutputType | null
    _max: PasswordResetTokenMaxAggregateOutputType | null
  }

  type GetPasswordResetTokenGroupByPayload<T extends PasswordResetTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PasswordResetTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PasswordResetTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
            : GetScalarType<T[P], PasswordResetTokenGroupByOutputType[P]>
        }
      >
    >


  export type PasswordResetTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | PasswordResetToken$ActivityLogArgs<ExtArgs>
    _count?: boolean | PasswordResetTokenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["passwordResetToken"]>

  export type PasswordResetTokenSelectScalar = {
    id?: boolean
    userId?: boolean
    token?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type PasswordResetTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "token" | "expiresAt" | "createdAt", ExtArgs["result"]["passwordResetToken"]>
  export type PasswordResetTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | PasswordResetToken$ActivityLogArgs<ExtArgs>
    _count?: boolean | PasswordResetTokenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PasswordResetTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PasswordResetTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PasswordResetTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PasswordResetToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      token: string
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["passwordResetToken"]>
    composites: {}
  }

  type PasswordResetTokenGetPayload<S extends boolean | null | undefined | PasswordResetTokenDefaultArgs> = $Result.GetResult<Prisma.$PasswordResetTokenPayload, S>

  type PasswordResetTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PasswordResetTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PasswordResetTokenCountAggregateInputType | true
    }

  export interface PasswordResetTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PasswordResetToken'], meta: { name: 'PasswordResetToken' } }
    /**
     * Find zero or one PasswordResetToken that matches the filter.
     * @param {PasswordResetTokenFindUniqueArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PasswordResetTokenFindUniqueArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PasswordResetToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PasswordResetTokenFindUniqueOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PasswordResetTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PasswordResetTokenFindFirstArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindFirstOrThrowArgs} args - Arguments to find a PasswordResetToken
     * @example
     * // Get one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PasswordResetTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, PasswordResetTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PasswordResetTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany()
     * 
     * // Get first 10 PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PasswordResetTokenFindManyArgs>(args?: SelectSubset<T, PasswordResetTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PasswordResetToken.
     * @param {PasswordResetTokenCreateArgs} args - Arguments to create a PasswordResetToken.
     * @example
     * // Create one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.create({
     *   data: {
     *     // ... data to create a PasswordResetToken
     *   }
     * })
     * 
     */
    create<T extends PasswordResetTokenCreateArgs>(args: SelectSubset<T, PasswordResetTokenCreateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PasswordResetTokens.
     * @param {PasswordResetTokenCreateManyArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PasswordResetTokenCreateManyArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PasswordResetTokens and returns the data saved in the database.
     * @param {PasswordResetTokenCreateManyAndReturnArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PasswordResetTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, PasswordResetTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PasswordResetToken.
     * @param {PasswordResetTokenDeleteArgs} args - Arguments to delete one PasswordResetToken.
     * @example
     * // Delete one PasswordResetToken
     * const PasswordResetToken = await prisma.passwordResetToken.delete({
     *   where: {
     *     // ... filter to delete one PasswordResetToken
     *   }
     * })
     * 
     */
    delete<T extends PasswordResetTokenDeleteArgs>(args: SelectSubset<T, PasswordResetTokenDeleteArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PasswordResetToken.
     * @param {PasswordResetTokenUpdateArgs} args - Arguments to update one PasswordResetToken.
     * @example
     * // Update one PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PasswordResetTokenUpdateArgs>(args: SelectSubset<T, PasswordResetTokenUpdateArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PasswordResetTokens.
     * @param {PasswordResetTokenDeleteManyArgs} args - Arguments to filter PasswordResetTokens to delete.
     * @example
     * // Delete a few PasswordResetTokens
     * const { count } = await prisma.passwordResetToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PasswordResetTokenDeleteManyArgs>(args?: SelectSubset<T, PasswordResetTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PasswordResetTokenUpdateManyArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens and returns the data updated in the database.
     * @param {PasswordResetTokenUpdateManyAndReturnArgs} args - Arguments to update many PasswordResetTokens.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetToken = await prisma.passwordResetToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PasswordResetTokens and only return the `id`
     * const passwordResetTokenWithIdOnly = await prisma.passwordResetToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PasswordResetTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PasswordResetToken.
     * @param {PasswordResetTokenUpsertArgs} args - Arguments to update or create a PasswordResetToken.
     * @example
     * // Update or create a PasswordResetToken
     * const passwordResetToken = await prisma.passwordResetToken.upsert({
     *   create: {
     *     // ... data to create a PasswordResetToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PasswordResetToken we want to update
     *   }
     * })
     */
    upsert<T extends PasswordResetTokenUpsertArgs>(args: SelectSubset<T, PasswordResetTokenUpsertArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenCountArgs} args - Arguments to filter PasswordResetTokens to count.
     * @example
     * // Count the number of PasswordResetTokens
     * const count = await prisma.passwordResetToken.count({
     *   where: {
     *     // ... the filter for the PasswordResetTokens we want to count
     *   }
     * })
    **/
    count<T extends PasswordResetTokenCountArgs>(
      args?: Subset<T, PasswordResetTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PasswordResetTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PasswordResetTokenAggregateArgs>(args: Subset<T, PasswordResetTokenAggregateArgs>): Prisma.PrismaPromise<GetPasswordResetTokenAggregateType<T>>

    /**
     * Group by PasswordResetToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PasswordResetTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PasswordResetTokenGroupByArgs['orderBy'] }
        : { orderBy?: PasswordResetTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PasswordResetTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPasswordResetTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PasswordResetToken model
   */
  readonly fields: PasswordResetTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PasswordResetToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PasswordResetTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends PasswordResetToken$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, PasswordResetToken$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PasswordResetToken model
   */
  interface PasswordResetTokenFieldRefs {
    readonly id: FieldRef<"PasswordResetToken", 'String'>
    readonly userId: FieldRef<"PasswordResetToken", 'String'>
    readonly token: FieldRef<"PasswordResetToken", 'String'>
    readonly expiresAt: FieldRef<"PasswordResetToken", 'DateTime'>
    readonly createdAt: FieldRef<"PasswordResetToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PasswordResetToken findUnique
   */
  export type PasswordResetTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findUniqueOrThrow
   */
  export type PasswordResetTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken findFirst
   */
  export type PasswordResetTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findFirstOrThrow
   */
  export type PasswordResetTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetToken to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken findMany
   */
  export type PasswordResetTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokenOrderByWithRelationInput | PasswordResetTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PasswordResetTokens.
     */
    cursor?: PasswordResetTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    distinct?: PasswordResetTokenScalarFieldEnum | PasswordResetTokenScalarFieldEnum[]
  }

  /**
   * PasswordResetToken create
   */
  export type PasswordResetTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
  }

  /**
   * PasswordResetToken createMany
   */
  export type PasswordResetTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetToken createManyAndReturn
   */
  export type PasswordResetTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokenCreateManyInput | PasswordResetTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PasswordResetToken update
   */
  export type PasswordResetTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a PasswordResetToken.
     */
    data: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
    /**
     * Choose, which PasswordResetToken to update.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken updateMany
   */
  export type PasswordResetTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetToken updateManyAndReturn
   */
  export type PasswordResetTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PasswordResetToken upsert
   */
  export type PasswordResetTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the PasswordResetToken to update in case it exists.
     */
    where: PasswordResetTokenWhereUniqueInput
    /**
     * In case the PasswordResetToken found by the `where` argument doesn't exist, create a new PasswordResetToken with this data.
     */
    create: XOR<PasswordResetTokenCreateInput, PasswordResetTokenUncheckedCreateInput>
    /**
     * In case the PasswordResetToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PasswordResetTokenUpdateInput, PasswordResetTokenUncheckedUpdateInput>
  }

  /**
   * PasswordResetToken delete
   */
  export type PasswordResetTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    /**
     * Filter which PasswordResetToken to delete.
     */
    where: PasswordResetTokenWhereUniqueInput
  }

  /**
   * PasswordResetToken deleteMany
   */
  export type PasswordResetTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetTokens to delete
     */
    where?: PasswordResetTokenWhereInput
    /**
     * Limit how many PasswordResetTokens to delete.
     */
    limit?: number
  }

  /**
   * PasswordResetToken.ActivityLog
   */
  export type PasswordResetToken$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * PasswordResetToken without action
   */
  export type PasswordResetTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
  }


  /**
   * Model Contact
   */

  export type AggregateContact = {
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  export type ContactMinAggregateOutputType = {
    id: string | null
    name: string | null
    logo: string | null
    adresse: string | null
    status_contact: $Enums.Status_Contact | null
    email: string | null
    phone: string | null
    niveau: $Enums.Niveau | null
    tags: string | null
    sector: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type ContactMaxAggregateOutputType = {
    id: string | null
    name: string | null
    logo: string | null
    adresse: string | null
    status_contact: $Enums.Status_Contact | null
    email: string | null
    phone: string | null
    niveau: $Enums.Niveau | null
    tags: string | null
    sector: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type ContactCountAggregateOutputType = {
    id: number
    name: number
    logo: number
    adresse: number
    status_contact: number
    email: number
    phone: number
    niveau: number
    tags: number
    sector: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type ContactMinAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    adresse?: true
    status_contact?: true
    email?: true
    phone?: true
    niveau?: true
    tags?: true
    sector?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type ContactMaxAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    adresse?: true
    status_contact?: true
    email?: true
    phone?: true
    niveau?: true
    tags?: true
    sector?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type ContactCountAggregateInputType = {
    id?: true
    name?: true
    logo?: true
    adresse?: true
    status_contact?: true
    email?: true
    phone?: true
    niveau?: true
    tags?: true
    sector?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type ContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contact to aggregate.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contacts
    **/
    _count?: true | ContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContactMaxAggregateInputType
  }

  export type GetContactAggregateType<T extends ContactAggregateArgs> = {
        [P in keyof T & keyof AggregateContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateContact[P]>
      : GetScalarType<T[P], AggregateContact[P]>
  }




  export type ContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContactWhereInput
    orderBy?: ContactOrderByWithAggregationInput | ContactOrderByWithAggregationInput[]
    by: ContactScalarFieldEnum[] | ContactScalarFieldEnum
    having?: ContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContactCountAggregateInputType | true
    _min?: ContactMinAggregateInputType
    _max?: ContactMaxAggregateInputType
  }

  export type ContactGroupByOutputType = {
    id: string
    name: string
    logo: string | null
    adresse: string | null
    status_contact: $Enums.Status_Contact
    email: string | null
    phone: string | null
    niveau: $Enums.Niveau
    tags: string | null
    sector: string | null
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: ContactCountAggregateOutputType | null
    _min: ContactMinAggregateOutputType | null
    _max: ContactMaxAggregateOutputType | null
  }

  type GetContactGroupByPayload<T extends ContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContactGroupByOutputType[P]>
            : GetScalarType<T[P], ContactGroupByOutputType[P]>
        }
      >
    >


  export type ContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    adresse?: boolean
    status_contact?: boolean
    email?: boolean
    phone?: boolean
    niveau?: boolean
    tags?: boolean
    sector?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisations?: boolean | Contact$organisationsArgs<ExtArgs>
    comments?: boolean | Contact$commentsArgs<ExtArgs>
    FeedbackContact?: boolean | Contact$FeedbackContactArgs<ExtArgs>
    notes?: boolean | Contact$notesArgs<ExtArgs>
    Devis?: boolean | Contact$DevisArgs<ExtArgs>
    Favorite?: boolean | Contact$FavoriteArgs<ExtArgs>
    ActivityLog?: boolean | Contact$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Contact$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Contact$updatedByUserArgs<ExtArgs>
    _count?: boolean | ContactCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    adresse?: boolean
    status_contact?: boolean
    email?: boolean
    phone?: boolean
    niveau?: boolean
    tags?: boolean
    sector?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    createdByUser?: boolean | Contact$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Contact$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logo?: boolean
    adresse?: boolean
    status_contact?: boolean
    email?: boolean
    phone?: boolean
    niveau?: boolean
    tags?: boolean
    sector?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    createdByUser?: boolean | Contact$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Contact$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["contact"]>

  export type ContactSelectScalar = {
    id?: boolean
    name?: boolean
    logo?: boolean
    adresse?: boolean
    status_contact?: boolean
    email?: boolean
    phone?: boolean
    niveau?: boolean
    tags?: boolean
    sector?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type ContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "logo" | "adresse" | "status_contact" | "email" | "phone" | "niveau" | "tags" | "sector" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["contact"]>
  export type ContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisations?: boolean | Contact$organisationsArgs<ExtArgs>
    comments?: boolean | Contact$commentsArgs<ExtArgs>
    FeedbackContact?: boolean | Contact$FeedbackContactArgs<ExtArgs>
    notes?: boolean | Contact$notesArgs<ExtArgs>
    Devis?: boolean | Contact$DevisArgs<ExtArgs>
    Favorite?: boolean | Contact$FavoriteArgs<ExtArgs>
    ActivityLog?: boolean | Contact$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Contact$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Contact$updatedByUserArgs<ExtArgs>
    _count?: boolean | ContactCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Contact$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Contact$updatedByUserArgs<ExtArgs>
  }
  export type ContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | Contact$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Contact$updatedByUserArgs<ExtArgs>
  }

  export type $ContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Contact"
    objects: {
      organisations: Prisma.$OrganisationPayload<ExtArgs>[]
      comments: Prisma.$CommentPayload<ExtArgs>[]
      FeedbackContact: Prisma.$FeedbackContactPayload<ExtArgs>[]
      notes: Prisma.$NotePayload<ExtArgs>[]
      Devis: Prisma.$DevisPayload<ExtArgs>[]
      Favorite: Prisma.$FavoritePayload<ExtArgs>[]
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      logo: string | null
      adresse: string | null
      status_contact: $Enums.Status_Contact
      email: string | null
      phone: string | null
      niveau: $Enums.Niveau
      tags: string | null
      sector: string | null
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["contact"]>
    composites: {}
  }

  type ContactGetPayload<S extends boolean | null | undefined | ContactDefaultArgs> = $Result.GetResult<Prisma.$ContactPayload, S>

  type ContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContactCountAggregateInputType | true
    }

  export interface ContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Contact'], meta: { name: 'Contact' } }
    /**
     * Find zero or one Contact that matches the filter.
     * @param {ContactFindUniqueArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContactFindUniqueArgs>(args: SelectSubset<T, ContactFindUniqueArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Contact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContactFindUniqueOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContactFindUniqueOrThrowArgs>(args: SelectSubset<T, ContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContactFindFirstArgs>(args?: SelectSubset<T, ContactFindFirstArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Contact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindFirstOrThrowArgs} args - Arguments to find a Contact
     * @example
     * // Get one Contact
     * const contact = await prisma.contact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContactFindFirstOrThrowArgs>(args?: SelectSubset<T, ContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contacts
     * const contacts = await prisma.contact.findMany()
     * 
     * // Get first 10 Contacts
     * const contacts = await prisma.contact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contactWithIdOnly = await prisma.contact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContactFindManyArgs>(args?: SelectSubset<T, ContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Contact.
     * @param {ContactCreateArgs} args - Arguments to create a Contact.
     * @example
     * // Create one Contact
     * const Contact = await prisma.contact.create({
     *   data: {
     *     // ... data to create a Contact
     *   }
     * })
     * 
     */
    create<T extends ContactCreateArgs>(args: SelectSubset<T, ContactCreateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contacts.
     * @param {ContactCreateManyArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContactCreateManyArgs>(args?: SelectSubset<T, ContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contacts and returns the data saved in the database.
     * @param {ContactCreateManyAndReturnArgs} args - Arguments to create many Contacts.
     * @example
     * // Create many Contacts
     * const contact = await prisma.contact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contacts and only return the `id`
     * const contactWithIdOnly = await prisma.contact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContactCreateManyAndReturnArgs>(args?: SelectSubset<T, ContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Contact.
     * @param {ContactDeleteArgs} args - Arguments to delete one Contact.
     * @example
     * // Delete one Contact
     * const Contact = await prisma.contact.delete({
     *   where: {
     *     // ... filter to delete one Contact
     *   }
     * })
     * 
     */
    delete<T extends ContactDeleteArgs>(args: SelectSubset<T, ContactDeleteArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Contact.
     * @param {ContactUpdateArgs} args - Arguments to update one Contact.
     * @example
     * // Update one Contact
     * const contact = await prisma.contact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContactUpdateArgs>(args: SelectSubset<T, ContactUpdateArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contacts.
     * @param {ContactDeleteManyArgs} args - Arguments to filter Contacts to delete.
     * @example
     * // Delete a few Contacts
     * const { count } = await prisma.contact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContactDeleteManyArgs>(args?: SelectSubset<T, ContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContactUpdateManyArgs>(args: SelectSubset<T, ContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contacts and returns the data updated in the database.
     * @param {ContactUpdateManyAndReturnArgs} args - Arguments to update many Contacts.
     * @example
     * // Update many Contacts
     * const contact = await prisma.contact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Contacts and only return the `id`
     * const contactWithIdOnly = await prisma.contact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ContactUpdateManyAndReturnArgs>(args: SelectSubset<T, ContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Contact.
     * @param {ContactUpsertArgs} args - Arguments to update or create a Contact.
     * @example
     * // Update or create a Contact
     * const contact = await prisma.contact.upsert({
     *   create: {
     *     // ... data to create a Contact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Contact we want to update
     *   }
     * })
     */
    upsert<T extends ContactUpsertArgs>(args: SelectSubset<T, ContactUpsertArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactCountArgs} args - Arguments to filter Contacts to count.
     * @example
     * // Count the number of Contacts
     * const count = await prisma.contact.count({
     *   where: {
     *     // ... the filter for the Contacts we want to count
     *   }
     * })
    **/
    count<T extends ContactCountArgs>(
      args?: Subset<T, ContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContactAggregateArgs>(args: Subset<T, ContactAggregateArgs>): Prisma.PrismaPromise<GetContactAggregateType<T>>

    /**
     * Group by Contact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContactGroupByArgs['orderBy'] }
        : { orderBy?: ContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Contact model
   */
  readonly fields: ContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Contact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organisations<T extends Contact$organisationsArgs<ExtArgs> = {}>(args?: Subset<T, Contact$organisationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends Contact$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Contact$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    FeedbackContact<T extends Contact$FeedbackContactArgs<ExtArgs> = {}>(args?: Subset<T, Contact$FeedbackContactArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notes<T extends Contact$notesArgs<ExtArgs> = {}>(args?: Subset<T, Contact$notesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Devis<T extends Contact$DevisArgs<ExtArgs> = {}>(args?: Subset<T, Contact$DevisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Favorite<T extends Contact$FavoriteArgs<ExtArgs> = {}>(args?: Subset<T, Contact$FavoriteArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ActivityLog<T extends Contact$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Contact$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Contact$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Contact$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Contact$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Contact$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Contact model
   */
  interface ContactFieldRefs {
    readonly id: FieldRef<"Contact", 'String'>
    readonly name: FieldRef<"Contact", 'String'>
    readonly logo: FieldRef<"Contact", 'String'>
    readonly adresse: FieldRef<"Contact", 'String'>
    readonly status_contact: FieldRef<"Contact", 'Status_Contact'>
    readonly email: FieldRef<"Contact", 'String'>
    readonly phone: FieldRef<"Contact", 'String'>
    readonly niveau: FieldRef<"Contact", 'Niveau'>
    readonly tags: FieldRef<"Contact", 'String'>
    readonly sector: FieldRef<"Contact", 'String'>
    readonly createdAt: FieldRef<"Contact", 'DateTime'>
    readonly updatedAt: FieldRef<"Contact", 'DateTime'>
    readonly isArchived: FieldRef<"Contact", 'Boolean'>
    readonly archivedAt: FieldRef<"Contact", 'DateTime'>
    readonly archivedBy: FieldRef<"Contact", 'String'>
    readonly createdByUserId: FieldRef<"Contact", 'String'>
    readonly updatedByUserId: FieldRef<"Contact", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Contact findUnique
   */
  export type ContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findUniqueOrThrow
   */
  export type ContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact findFirst
   */
  export type ContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findFirstOrThrow
   */
  export type ContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contact to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contacts.
     */
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact findMany
   */
  export type ContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter, which Contacts to fetch.
     */
    where?: ContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contacts to fetch.
     */
    orderBy?: ContactOrderByWithRelationInput | ContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contacts.
     */
    cursor?: ContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contacts.
     */
    skip?: number
    distinct?: ContactScalarFieldEnum | ContactScalarFieldEnum[]
  }

  /**
   * Contact create
   */
  export type ContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to create a Contact.
     */
    data: XOR<ContactCreateInput, ContactUncheckedCreateInput>
  }

  /**
   * Contact createMany
   */
  export type ContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Contact createManyAndReturn
   */
  export type ContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The data used to create many Contacts.
     */
    data: ContactCreateManyInput | ContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contact update
   */
  export type ContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The data needed to update a Contact.
     */
    data: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
    /**
     * Choose, which Contact to update.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact updateMany
   */
  export type ContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to update.
     */
    limit?: number
  }

  /**
   * Contact updateManyAndReturn
   */
  export type ContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * The data used to update Contacts.
     */
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyInput>
    /**
     * Filter which Contacts to update
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Contact upsert
   */
  export type ContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * The filter to search for the Contact to update in case it exists.
     */
    where: ContactWhereUniqueInput
    /**
     * In case the Contact found by the `where` argument doesn't exist, create a new Contact with this data.
     */
    create: XOR<ContactCreateInput, ContactUncheckedCreateInput>
    /**
     * In case the Contact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContactUpdateInput, ContactUncheckedUpdateInput>
  }

  /**
   * Contact delete
   */
  export type ContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    /**
     * Filter which Contact to delete.
     */
    where: ContactWhereUniqueInput
  }

  /**
   * Contact deleteMany
   */
  export type ContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contacts to delete
     */
    where?: ContactWhereInput
    /**
     * Limit how many Contacts to delete.
     */
    limit?: number
  }

  /**
   * Contact.organisations
   */
  export type Contact$organisationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    cursor?: OrganisationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * Contact.comments
   */
  export type Contact$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Contact.FeedbackContact
   */
  export type Contact$FeedbackContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    where?: FeedbackContactWhereInput
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    cursor?: FeedbackContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FeedbackContactScalarFieldEnum | FeedbackContactScalarFieldEnum[]
  }

  /**
   * Contact.notes
   */
  export type Contact$notesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    cursor?: NoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Contact.Devis
   */
  export type Contact$DevisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    where?: DevisWhereInput
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    cursor?: DevisWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * Contact.Favorite
   */
  export type Contact$FavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Contact.ActivityLog
   */
  export type Contact$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Contact.createdByUser
   */
  export type Contact$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Contact.updatedByUser
   */
  export type Contact$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Contact without action
   */
  export type ContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
  }


  /**
   * Model Comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentMinAggregateOutputType = {
    id: string | null
    content: string | null
    createdAt: Date | null
    contactId: string | null
    updatedAt: Date | null
    createdByUserId: string | null
  }

  export type CommentMaxAggregateOutputType = {
    id: string | null
    content: string | null
    createdAt: Date | null
    contactId: string | null
    updatedAt: Date | null
    createdByUserId: string | null
  }

  export type CommentCountAggregateOutputType = {
    id: number
    content: number
    createdAt: number
    contactId: number
    updatedAt: number
    createdByUserId: number
    _all: number
  }


  export type CommentMinAggregateInputType = {
    id?: true
    content?: true
    createdAt?: true
    contactId?: true
    updatedAt?: true
    createdByUserId?: true
  }

  export type CommentMaxAggregateInputType = {
    id?: true
    content?: true
    createdAt?: true
    contactId?: true
    updatedAt?: true
    createdByUserId?: true
  }

  export type CommentCountAggregateInputType = {
    id?: true
    content?: true
    createdAt?: true
    contactId?: true
    updatedAt?: true
    createdByUserId?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comment to aggregate.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type CommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithAggregationInput | CommentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: CommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    id: string
    content: string
    createdAt: Date
    contactId: string
    updatedAt: Date
    createdByUserId: string | null
    _count: CommentCountAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends CommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type CommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    createdAt?: boolean
    contactId?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Comment$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Comment$createdByUserArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    createdAt?: boolean
    contactId?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Comment$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    createdAt?: boolean
    contactId?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Comment$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectScalar = {
    id?: boolean
    content?: boolean
    createdAt?: boolean
    contactId?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
  }

  export type CommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "createdAt" | "contactId" | "updatedAt" | "createdByUserId", ExtArgs["result"]["comment"]>
  export type CommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Comment$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Comment$createdByUserArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Comment$createdByUserArgs<ExtArgs>
  }
  export type CommentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Comment$createdByUserArgs<ExtArgs>
  }

  export type $CommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comment"
    objects: {
      contact: Prisma.$ContactPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string
      createdAt: Date
      contactId: string
      updatedAt: Date
      createdByUserId: string | null
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type CommentGetPayload<S extends boolean | null | undefined | CommentDefaultArgs> = $Result.GetResult<Prisma.$CommentPayload, S>

  type CommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface CommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comment'], meta: { name: 'Comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {CommentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentFindUniqueArgs>(args: SelectSubset<T, CommentFindUniqueArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentFindFirstArgs>(args?: SelectSubset<T, CommentFindFirstArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentWithIdOnly = await prisma.comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentFindManyArgs>(args?: SelectSubset<T, CommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment.
     * @param {CommentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends CommentCreateArgs>(args: SelectSubset<T, CommentCreateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {CommentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCreateManyArgs>(args?: SelectSubset<T, CommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments and returns the data saved in the database.
     * @param {CommentCreateManyAndReturnArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommentCreateManyAndReturnArgs>(args?: SelectSubset<T, CommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comment.
     * @param {CommentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends CommentDeleteArgs>(args: SelectSubset<T, CommentDeleteArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment.
     * @param {CommentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentUpdateArgs>(args: SelectSubset<T, CommentUpdateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {CommentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentDeleteManyArgs>(args?: SelectSubset<T, CommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentUpdateManyArgs>(args: SelectSubset<T, CommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments and returns the data updated in the database.
     * @param {CommentUpdateManyAndReturnArgs} args - Arguments to update many Comments.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommentUpdateManyAndReturnArgs>(args: SelectSubset<T, CommentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comment.
     * @param {CommentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends CommentUpsertArgs>(args: SelectSubset<T, CommentUpsertArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentCountArgs>(
      args?: Subset<T, CommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentGroupByArgs['orderBy'] }
        : { orderBy?: CommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comment model
   */
  readonly fields: CommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contact<T extends ContactDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContactDefaultArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Comment$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Comment$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Comment$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Comment$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comment model
   */
  interface CommentFieldRefs {
    readonly id: FieldRef<"Comment", 'String'>
    readonly content: FieldRef<"Comment", 'String'>
    readonly createdAt: FieldRef<"Comment", 'DateTime'>
    readonly contactId: FieldRef<"Comment", 'String'>
    readonly updatedAt: FieldRef<"Comment", 'DateTime'>
    readonly createdByUserId: FieldRef<"Comment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Comment findUnique
   */
  export type CommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findUniqueOrThrow
   */
  export type CommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findFirst
   */
  export type CommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findFirstOrThrow
   */
  export type CommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findMany
   */
  export type CommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment create
   */
  export type CommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to create a Comment.
     */
    data: XOR<CommentCreateInput, CommentUncheckedCreateInput>
  }

  /**
   * Comment createMany
   */
  export type CommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comment createManyAndReturn
   */
  export type CommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment update
   */
  export type CommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to update a Comment.
     */
    data: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
    /**
     * Choose, which Comment to update.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment updateMany
   */
  export type CommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
  }

  /**
   * Comment updateManyAndReturn
   */
  export type CommentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment upsert
   */
  export type CommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The filter to search for the Comment to update in case it exists.
     */
    where: CommentWhereUniqueInput
    /**
     * In case the Comment found by the `where` argument doesn't exist, create a new Comment with this data.
     */
    create: XOR<CommentCreateInput, CommentUncheckedCreateInput>
    /**
     * In case the Comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
  }

  /**
   * Comment delete
   */
  export type CommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter which Comment to delete.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment deleteMany
   */
  export type CommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to delete.
     */
    limit?: number
  }

  /**
   * Comment.ActivityLog
   */
  export type Comment$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Comment.createdByUser
   */
  export type Comment$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Comment without action
   */
  export type CommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
  }


  /**
   * Model FeedbackContact
   */

  export type AggregateFeedbackContact = {
    _count: FeedbackContactCountAggregateOutputType | null
    _min: FeedbackContactMinAggregateOutputType | null
    _max: FeedbackContactMaxAggregateOutputType | null
  }

  export type FeedbackContactMinAggregateOutputType = {
    id: string | null
    message: string | null
    contactId: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdByUserId: string | null
  }

  export type FeedbackContactMaxAggregateOutputType = {
    id: string | null
    message: string | null
    contactId: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    createdByUserId: string | null
  }

  export type FeedbackContactCountAggregateOutputType = {
    id: number
    message: number
    contactId: number
    userId: number
    createdAt: number
    updatedAt: number
    createdByUserId: number
    _all: number
  }


  export type FeedbackContactMinAggregateInputType = {
    id?: true
    message?: true
    contactId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    createdByUserId?: true
  }

  export type FeedbackContactMaxAggregateInputType = {
    id?: true
    message?: true
    contactId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    createdByUserId?: true
  }

  export type FeedbackContactCountAggregateInputType = {
    id?: true
    message?: true
    contactId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    createdByUserId?: true
    _all?: true
  }

  export type FeedbackContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FeedbackContact to aggregate.
     */
    where?: FeedbackContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeedbackContacts to fetch.
     */
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FeedbackContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeedbackContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeedbackContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FeedbackContacts
    **/
    _count?: true | FeedbackContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FeedbackContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FeedbackContactMaxAggregateInputType
  }

  export type GetFeedbackContactAggregateType<T extends FeedbackContactAggregateArgs> = {
        [P in keyof T & keyof AggregateFeedbackContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFeedbackContact[P]>
      : GetScalarType<T[P], AggregateFeedbackContact[P]>
  }




  export type FeedbackContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeedbackContactWhereInput
    orderBy?: FeedbackContactOrderByWithAggregationInput | FeedbackContactOrderByWithAggregationInput[]
    by: FeedbackContactScalarFieldEnum[] | FeedbackContactScalarFieldEnum
    having?: FeedbackContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FeedbackContactCountAggregateInputType | true
    _min?: FeedbackContactMinAggregateInputType
    _max?: FeedbackContactMaxAggregateInputType
  }

  export type FeedbackContactGroupByOutputType = {
    id: string
    message: string
    contactId: string
    userId: string
    createdAt: Date
    updatedAt: Date
    createdByUserId: string | null
    _count: FeedbackContactCountAggregateOutputType | null
    _min: FeedbackContactMinAggregateOutputType | null
    _max: FeedbackContactMaxAggregateOutputType | null
  }

  type GetFeedbackContactGroupByPayload<T extends FeedbackContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FeedbackContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FeedbackContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FeedbackContactGroupByOutputType[P]>
            : GetScalarType<T[P], FeedbackContactGroupByOutputType[P]>
        }
      >
    >


  export type FeedbackContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    contactId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | FeedbackContact$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | FeedbackContact$createdByUserArgs<ExtArgs>
    _count?: boolean | FeedbackContactCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["feedbackContact"]>

  export type FeedbackContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    contactId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | FeedbackContact$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["feedbackContact"]>

  export type FeedbackContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message?: boolean
    contactId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | FeedbackContact$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["feedbackContact"]>

  export type FeedbackContactSelectScalar = {
    id?: boolean
    message?: boolean
    contactId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdByUserId?: boolean
  }

  export type FeedbackContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "message" | "contactId" | "userId" | "createdAt" | "updatedAt" | "createdByUserId", ExtArgs["result"]["feedbackContact"]>
  export type FeedbackContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | FeedbackContact$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | FeedbackContact$createdByUserArgs<ExtArgs>
    _count?: boolean | FeedbackContactCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FeedbackContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | FeedbackContact$createdByUserArgs<ExtArgs>
  }
  export type FeedbackContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | FeedbackContact$createdByUserArgs<ExtArgs>
  }

  export type $FeedbackContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FeedbackContact"
    objects: {
      contact: Prisma.$ContactPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      message: string
      contactId: string
      userId: string
      createdAt: Date
      updatedAt: Date
      createdByUserId: string | null
    }, ExtArgs["result"]["feedbackContact"]>
    composites: {}
  }

  type FeedbackContactGetPayload<S extends boolean | null | undefined | FeedbackContactDefaultArgs> = $Result.GetResult<Prisma.$FeedbackContactPayload, S>

  type FeedbackContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FeedbackContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FeedbackContactCountAggregateInputType | true
    }

  export interface FeedbackContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FeedbackContact'], meta: { name: 'FeedbackContact' } }
    /**
     * Find zero or one FeedbackContact that matches the filter.
     * @param {FeedbackContactFindUniqueArgs} args - Arguments to find a FeedbackContact
     * @example
     * // Get one FeedbackContact
     * const feedbackContact = await prisma.feedbackContact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FeedbackContactFindUniqueArgs>(args: SelectSubset<T, FeedbackContactFindUniqueArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FeedbackContact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FeedbackContactFindUniqueOrThrowArgs} args - Arguments to find a FeedbackContact
     * @example
     * // Get one FeedbackContact
     * const feedbackContact = await prisma.feedbackContact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FeedbackContactFindUniqueOrThrowArgs>(args: SelectSubset<T, FeedbackContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FeedbackContact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactFindFirstArgs} args - Arguments to find a FeedbackContact
     * @example
     * // Get one FeedbackContact
     * const feedbackContact = await prisma.feedbackContact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FeedbackContactFindFirstArgs>(args?: SelectSubset<T, FeedbackContactFindFirstArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FeedbackContact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactFindFirstOrThrowArgs} args - Arguments to find a FeedbackContact
     * @example
     * // Get one FeedbackContact
     * const feedbackContact = await prisma.feedbackContact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FeedbackContactFindFirstOrThrowArgs>(args?: SelectSubset<T, FeedbackContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FeedbackContacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FeedbackContacts
     * const feedbackContacts = await prisma.feedbackContact.findMany()
     * 
     * // Get first 10 FeedbackContacts
     * const feedbackContacts = await prisma.feedbackContact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const feedbackContactWithIdOnly = await prisma.feedbackContact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FeedbackContactFindManyArgs>(args?: SelectSubset<T, FeedbackContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FeedbackContact.
     * @param {FeedbackContactCreateArgs} args - Arguments to create a FeedbackContact.
     * @example
     * // Create one FeedbackContact
     * const FeedbackContact = await prisma.feedbackContact.create({
     *   data: {
     *     // ... data to create a FeedbackContact
     *   }
     * })
     * 
     */
    create<T extends FeedbackContactCreateArgs>(args: SelectSubset<T, FeedbackContactCreateArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FeedbackContacts.
     * @param {FeedbackContactCreateManyArgs} args - Arguments to create many FeedbackContacts.
     * @example
     * // Create many FeedbackContacts
     * const feedbackContact = await prisma.feedbackContact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FeedbackContactCreateManyArgs>(args?: SelectSubset<T, FeedbackContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FeedbackContacts and returns the data saved in the database.
     * @param {FeedbackContactCreateManyAndReturnArgs} args - Arguments to create many FeedbackContacts.
     * @example
     * // Create many FeedbackContacts
     * const feedbackContact = await prisma.feedbackContact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FeedbackContacts and only return the `id`
     * const feedbackContactWithIdOnly = await prisma.feedbackContact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FeedbackContactCreateManyAndReturnArgs>(args?: SelectSubset<T, FeedbackContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FeedbackContact.
     * @param {FeedbackContactDeleteArgs} args - Arguments to delete one FeedbackContact.
     * @example
     * // Delete one FeedbackContact
     * const FeedbackContact = await prisma.feedbackContact.delete({
     *   where: {
     *     // ... filter to delete one FeedbackContact
     *   }
     * })
     * 
     */
    delete<T extends FeedbackContactDeleteArgs>(args: SelectSubset<T, FeedbackContactDeleteArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FeedbackContact.
     * @param {FeedbackContactUpdateArgs} args - Arguments to update one FeedbackContact.
     * @example
     * // Update one FeedbackContact
     * const feedbackContact = await prisma.feedbackContact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FeedbackContactUpdateArgs>(args: SelectSubset<T, FeedbackContactUpdateArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FeedbackContacts.
     * @param {FeedbackContactDeleteManyArgs} args - Arguments to filter FeedbackContacts to delete.
     * @example
     * // Delete a few FeedbackContacts
     * const { count } = await prisma.feedbackContact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FeedbackContactDeleteManyArgs>(args?: SelectSubset<T, FeedbackContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FeedbackContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FeedbackContacts
     * const feedbackContact = await prisma.feedbackContact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FeedbackContactUpdateManyArgs>(args: SelectSubset<T, FeedbackContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FeedbackContacts and returns the data updated in the database.
     * @param {FeedbackContactUpdateManyAndReturnArgs} args - Arguments to update many FeedbackContacts.
     * @example
     * // Update many FeedbackContacts
     * const feedbackContact = await prisma.feedbackContact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FeedbackContacts and only return the `id`
     * const feedbackContactWithIdOnly = await prisma.feedbackContact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FeedbackContactUpdateManyAndReturnArgs>(args: SelectSubset<T, FeedbackContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FeedbackContact.
     * @param {FeedbackContactUpsertArgs} args - Arguments to update or create a FeedbackContact.
     * @example
     * // Update or create a FeedbackContact
     * const feedbackContact = await prisma.feedbackContact.upsert({
     *   create: {
     *     // ... data to create a FeedbackContact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FeedbackContact we want to update
     *   }
     * })
     */
    upsert<T extends FeedbackContactUpsertArgs>(args: SelectSubset<T, FeedbackContactUpsertArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FeedbackContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactCountArgs} args - Arguments to filter FeedbackContacts to count.
     * @example
     * // Count the number of FeedbackContacts
     * const count = await prisma.feedbackContact.count({
     *   where: {
     *     // ... the filter for the FeedbackContacts we want to count
     *   }
     * })
    **/
    count<T extends FeedbackContactCountArgs>(
      args?: Subset<T, FeedbackContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FeedbackContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FeedbackContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FeedbackContactAggregateArgs>(args: Subset<T, FeedbackContactAggregateArgs>): Prisma.PrismaPromise<GetFeedbackContactAggregateType<T>>

    /**
     * Group by FeedbackContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FeedbackContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FeedbackContactGroupByArgs['orderBy'] }
        : { orderBy?: FeedbackContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FeedbackContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFeedbackContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FeedbackContact model
   */
  readonly fields: FeedbackContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FeedbackContact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FeedbackContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contact<T extends ContactDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContactDefaultArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends FeedbackContact$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, FeedbackContact$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends FeedbackContact$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, FeedbackContact$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FeedbackContact model
   */
  interface FeedbackContactFieldRefs {
    readonly id: FieldRef<"FeedbackContact", 'String'>
    readonly message: FieldRef<"FeedbackContact", 'String'>
    readonly contactId: FieldRef<"FeedbackContact", 'String'>
    readonly userId: FieldRef<"FeedbackContact", 'String'>
    readonly createdAt: FieldRef<"FeedbackContact", 'DateTime'>
    readonly updatedAt: FieldRef<"FeedbackContact", 'DateTime'>
    readonly createdByUserId: FieldRef<"FeedbackContact", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FeedbackContact findUnique
   */
  export type FeedbackContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * Filter, which FeedbackContact to fetch.
     */
    where: FeedbackContactWhereUniqueInput
  }

  /**
   * FeedbackContact findUniqueOrThrow
   */
  export type FeedbackContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * Filter, which FeedbackContact to fetch.
     */
    where: FeedbackContactWhereUniqueInput
  }

  /**
   * FeedbackContact findFirst
   */
  export type FeedbackContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * Filter, which FeedbackContact to fetch.
     */
    where?: FeedbackContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeedbackContacts to fetch.
     */
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FeedbackContacts.
     */
    cursor?: FeedbackContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeedbackContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeedbackContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FeedbackContacts.
     */
    distinct?: FeedbackContactScalarFieldEnum | FeedbackContactScalarFieldEnum[]
  }

  /**
   * FeedbackContact findFirstOrThrow
   */
  export type FeedbackContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * Filter, which FeedbackContact to fetch.
     */
    where?: FeedbackContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeedbackContacts to fetch.
     */
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FeedbackContacts.
     */
    cursor?: FeedbackContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeedbackContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeedbackContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FeedbackContacts.
     */
    distinct?: FeedbackContactScalarFieldEnum | FeedbackContactScalarFieldEnum[]
  }

  /**
   * FeedbackContact findMany
   */
  export type FeedbackContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * Filter, which FeedbackContacts to fetch.
     */
    where?: FeedbackContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeedbackContacts to fetch.
     */
    orderBy?: FeedbackContactOrderByWithRelationInput | FeedbackContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FeedbackContacts.
     */
    cursor?: FeedbackContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeedbackContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeedbackContacts.
     */
    skip?: number
    distinct?: FeedbackContactScalarFieldEnum | FeedbackContactScalarFieldEnum[]
  }

  /**
   * FeedbackContact create
   */
  export type FeedbackContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * The data needed to create a FeedbackContact.
     */
    data: XOR<FeedbackContactCreateInput, FeedbackContactUncheckedCreateInput>
  }

  /**
   * FeedbackContact createMany
   */
  export type FeedbackContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FeedbackContacts.
     */
    data: FeedbackContactCreateManyInput | FeedbackContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FeedbackContact createManyAndReturn
   */
  export type FeedbackContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * The data used to create many FeedbackContacts.
     */
    data: FeedbackContactCreateManyInput | FeedbackContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FeedbackContact update
   */
  export type FeedbackContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * The data needed to update a FeedbackContact.
     */
    data: XOR<FeedbackContactUpdateInput, FeedbackContactUncheckedUpdateInput>
    /**
     * Choose, which FeedbackContact to update.
     */
    where: FeedbackContactWhereUniqueInput
  }

  /**
   * FeedbackContact updateMany
   */
  export type FeedbackContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FeedbackContacts.
     */
    data: XOR<FeedbackContactUpdateManyMutationInput, FeedbackContactUncheckedUpdateManyInput>
    /**
     * Filter which FeedbackContacts to update
     */
    where?: FeedbackContactWhereInput
    /**
     * Limit how many FeedbackContacts to update.
     */
    limit?: number
  }

  /**
   * FeedbackContact updateManyAndReturn
   */
  export type FeedbackContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * The data used to update FeedbackContacts.
     */
    data: XOR<FeedbackContactUpdateManyMutationInput, FeedbackContactUncheckedUpdateManyInput>
    /**
     * Filter which FeedbackContacts to update
     */
    where?: FeedbackContactWhereInput
    /**
     * Limit how many FeedbackContacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FeedbackContact upsert
   */
  export type FeedbackContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * The filter to search for the FeedbackContact to update in case it exists.
     */
    where: FeedbackContactWhereUniqueInput
    /**
     * In case the FeedbackContact found by the `where` argument doesn't exist, create a new FeedbackContact with this data.
     */
    create: XOR<FeedbackContactCreateInput, FeedbackContactUncheckedCreateInput>
    /**
     * In case the FeedbackContact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FeedbackContactUpdateInput, FeedbackContactUncheckedUpdateInput>
  }

  /**
   * FeedbackContact delete
   */
  export type FeedbackContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    /**
     * Filter which FeedbackContact to delete.
     */
    where: FeedbackContactWhereUniqueInput
  }

  /**
   * FeedbackContact deleteMany
   */
  export type FeedbackContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FeedbackContacts to delete
     */
    where?: FeedbackContactWhereInput
    /**
     * Limit how many FeedbackContacts to delete.
     */
    limit?: number
  }

  /**
   * FeedbackContact.ActivityLog
   */
  export type FeedbackContact$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * FeedbackContact.createdByUser
   */
  export type FeedbackContact$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FeedbackContact without action
   */
  export type FeedbackContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
  }


  /**
   * Model Favorite
   */

  export type AggregateFavorite = {
    _count: FavoriteCountAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  export type FavoriteMinAggregateOutputType = {
    id: string | null
    contactId: string | null
    organisationId: string | null
    createdByUserId: string | null
  }

  export type FavoriteMaxAggregateOutputType = {
    id: string | null
    contactId: string | null
    organisationId: string | null
    createdByUserId: string | null
  }

  export type FavoriteCountAggregateOutputType = {
    id: number
    contactId: number
    organisationId: number
    createdByUserId: number
    _all: number
  }


  export type FavoriteMinAggregateInputType = {
    id?: true
    contactId?: true
    organisationId?: true
    createdByUserId?: true
  }

  export type FavoriteMaxAggregateInputType = {
    id?: true
    contactId?: true
    organisationId?: true
    createdByUserId?: true
  }

  export type FavoriteCountAggregateInputType = {
    id?: true
    contactId?: true
    organisationId?: true
    createdByUserId?: true
    _all?: true
  }

  export type FavoriteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorite to aggregate.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favorites
    **/
    _count?: true | FavoriteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteMaxAggregateInputType
  }

  export type GetFavoriteAggregateType<T extends FavoriteAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorite[P]>
      : GetScalarType<T[P], AggregateFavorite[P]>
  }




  export type FavoriteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithAggregationInput | FavoriteOrderByWithAggregationInput[]
    by: FavoriteScalarFieldEnum[] | FavoriteScalarFieldEnum
    having?: FavoriteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteCountAggregateInputType | true
    _min?: FavoriteMinAggregateInputType
    _max?: FavoriteMaxAggregateInputType
  }

  export type FavoriteGroupByOutputType = {
    id: string
    contactId: string
    organisationId: string
    createdByUserId: string | null
    _count: FavoriteCountAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  type GetFavoriteGroupByPayload<T extends FavoriteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contactId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Favorite$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Favorite$createdByUserArgs<ExtArgs>
    _count?: boolean | FavoriteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contactId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Favorite$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contactId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Favorite$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectScalar = {
    id?: boolean
    contactId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
  }

  export type FavoriteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "contactId" | "organisationId" | "createdByUserId", ExtArgs["result"]["favorite"]>
  export type FavoriteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Favorite$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Favorite$createdByUserArgs<ExtArgs>
    _count?: boolean | FavoriteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FavoriteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Favorite$createdByUserArgs<ExtArgs>
  }
  export type FavoriteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Favorite$createdByUserArgs<ExtArgs>
  }

  export type $FavoritePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorite"
    objects: {
      contact: Prisma.$ContactPayload<ExtArgs>
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      contactId: string
      organisationId: string
      createdByUserId: string | null
    }, ExtArgs["result"]["favorite"]>
    composites: {}
  }

  type FavoriteGetPayload<S extends boolean | null | undefined | FavoriteDefaultArgs> = $Result.GetResult<Prisma.$FavoritePayload, S>

  type FavoriteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoriteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoriteCountAggregateInputType | true
    }

  export interface FavoriteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorite'], meta: { name: 'Favorite' } }
    /**
     * Find zero or one Favorite that matches the filter.
     * @param {FavoriteFindUniqueArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteFindUniqueArgs>(args: SelectSubset<T, FavoriteFindUniqueArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favorite that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoriteFindUniqueOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteFindFirstArgs>(args?: SelectSubset<T, FavoriteFindFirstArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favorite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favorites
     * const favorites = await prisma.favorite.findMany()
     * 
     * // Get first 10 Favorites
     * const favorites = await prisma.favorite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteWithIdOnly = await prisma.favorite.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteFindManyArgs>(args?: SelectSubset<T, FavoriteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favorite.
     * @param {FavoriteCreateArgs} args - Arguments to create a Favorite.
     * @example
     * // Create one Favorite
     * const Favorite = await prisma.favorite.create({
     *   data: {
     *     // ... data to create a Favorite
     *   }
     * })
     * 
     */
    create<T extends FavoriteCreateArgs>(args: SelectSubset<T, FavoriteCreateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favorites.
     * @param {FavoriteCreateManyArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteCreateManyArgs>(args?: SelectSubset<T, FavoriteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favorites and returns the data saved in the database.
     * @param {FavoriteCreateManyAndReturnArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favorites and only return the `id`
     * const favoriteWithIdOnly = await prisma.favorite.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoriteCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoriteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favorite.
     * @param {FavoriteDeleteArgs} args - Arguments to delete one Favorite.
     * @example
     * // Delete one Favorite
     * const Favorite = await prisma.favorite.delete({
     *   where: {
     *     // ... filter to delete one Favorite
     *   }
     * })
     * 
     */
    delete<T extends FavoriteDeleteArgs>(args: SelectSubset<T, FavoriteDeleteArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favorite.
     * @param {FavoriteUpdateArgs} args - Arguments to update one Favorite.
     * @example
     * // Update one Favorite
     * const favorite = await prisma.favorite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteUpdateArgs>(args: SelectSubset<T, FavoriteUpdateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favorites.
     * @param {FavoriteDeleteManyArgs} args - Arguments to filter Favorites to delete.
     * @example
     * // Delete a few Favorites
     * const { count } = await prisma.favorite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteDeleteManyArgs>(args?: SelectSubset<T, FavoriteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteUpdateManyArgs>(args: SelectSubset<T, FavoriteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites and returns the data updated in the database.
     * @param {FavoriteUpdateManyAndReturnArgs} args - Arguments to update many Favorites.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favorites and only return the `id`
     * const favoriteWithIdOnly = await prisma.favorite.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavoriteUpdateManyAndReturnArgs>(args: SelectSubset<T, FavoriteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favorite.
     * @param {FavoriteUpsertArgs} args - Arguments to update or create a Favorite.
     * @example
     * // Update or create a Favorite
     * const favorite = await prisma.favorite.upsert({
     *   create: {
     *     // ... data to create a Favorite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorite we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteUpsertArgs>(args: SelectSubset<T, FavoriteUpsertArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCountArgs} args - Arguments to filter Favorites to count.
     * @example
     * // Count the number of Favorites
     * const count = await prisma.favorite.count({
     *   where: {
     *     // ... the filter for the Favorites we want to count
     *   }
     * })
    **/
    count<T extends FavoriteCountArgs>(
      args?: Subset<T, FavoriteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteAggregateArgs>(args: Subset<T, FavoriteAggregateArgs>): Prisma.PrismaPromise<GetFavoriteAggregateType<T>>

    /**
     * Group by Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorite model
   */
  readonly fields: FavoriteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    contact<T extends ContactDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContactDefaultArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Favorite$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Favorite$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Favorite$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Favorite$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorite model
   */
  interface FavoriteFieldRefs {
    readonly id: FieldRef<"Favorite", 'String'>
    readonly contactId: FieldRef<"Favorite", 'String'>
    readonly organisationId: FieldRef<"Favorite", 'String'>
    readonly createdByUserId: FieldRef<"Favorite", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Favorite findUnique
   */
  export type FavoriteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findUniqueOrThrow
   */
  export type FavoriteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findFirst
   */
  export type FavoriteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findFirstOrThrow
   */
  export type FavoriteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findMany
   */
  export type FavoriteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorites to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite create
   */
  export type FavoriteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorite.
     */
    data: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
  }

  /**
   * Favorite createMany
   */
  export type FavoriteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorite createManyAndReturn
   */
  export type FavoriteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite update
   */
  export type FavoriteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorite.
     */
    data: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
    /**
     * Choose, which Favorite to update.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite updateMany
   */
  export type FavoriteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to update.
     */
    limit?: number
  }

  /**
   * Favorite updateManyAndReturn
   */
  export type FavoriteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite upsert
   */
  export type FavoriteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorite to update in case it exists.
     */
    where: FavoriteWhereUniqueInput
    /**
     * In case the Favorite found by the `where` argument doesn't exist, create a new Favorite with this data.
     */
    create: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
    /**
     * In case the Favorite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
  }

  /**
   * Favorite delete
   */
  export type FavoriteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter which Favorite to delete.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite deleteMany
   */
  export type FavoriteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorites to delete
     */
    where?: FavoriteWhereInput
    /**
     * Limit how many Favorites to delete.
     */
    limit?: number
  }

  /**
   * Favorite.ActivityLog
   */
  export type Favorite$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Favorite.createdByUser
   */
  export type Favorite$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Favorite without action
   */
  export type FavoriteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    price: number | null
  }

  export type ProductSumAggregateOutputType = {
    price: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    actions: string | null
    organisationId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    brandId: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    actions: string | null
    organisationId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    brandId: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    description: number
    price: number
    images: number
    actions: number
    organisationId: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    brandId: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    price?: true
  }

  export type ProductSumAggregateInputType = {
    price?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    actions?: true
    organisationId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    brandId?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    actions?: true
    organisationId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    brandId?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    images?: true
    actions?: true
    organisationId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    brandId?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    name: string
    description: string
    price: number
    images: string[]
    actions: string | null
    organisationId: string
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    brandId: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    images?: boolean
    actions?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    brandId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    Stock?: boolean | Product$StockArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    DevisItem?: boolean | Product$DevisItemArgs<ExtArgs>
    ActivityLog?: boolean | Product$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Product$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Product$updatedByUserArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    images?: boolean
    actions?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    brandId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    createdByUser?: boolean | Product$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Product$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    images?: boolean
    actions?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    brandId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    createdByUser?: boolean | Product$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Product$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    images?: boolean
    actions?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    brandId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "price" | "images" | "actions" | "organisationId" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "brandId" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    Stock?: boolean | Product$StockArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    DevisItem?: boolean | Product$DevisItemArgs<ExtArgs>
    ActivityLog?: boolean | Product$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Product$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Product$updatedByUserArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    createdByUser?: boolean | Product$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Product$updatedByUserArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    brand?: boolean | Product$brandArgs<ExtArgs>
    createdByUser?: boolean | Product$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Product$updatedByUserArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      brand: Prisma.$BrandPayload<ExtArgs> | null
      Stock: Prisma.$StockPayload<ExtArgs>[]
      categories: Prisma.$CategoryPayload<ExtArgs>[]
      DevisItem: Prisma.$DevisItemPayload<ExtArgs>[]
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      price: number
      images: string[]
      actions: string | null
      organisationId: string
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      brandId: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    brand<T extends Product$brandArgs<ExtArgs> = {}>(args?: Subset<T, Product$brandArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Stock<T extends Product$StockArgs<ExtArgs> = {}>(args?: Subset<T, Product$StockArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categories<T extends Product$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, Product$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DevisItem<T extends Product$DevisItemArgs<ExtArgs> = {}>(args?: Subset<T, Product$DevisItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ActivityLog<T extends Product$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Product$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Product$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Product$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Product$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Product$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly price: FieldRef<"Product", 'Float'>
    readonly images: FieldRef<"Product", 'String[]'>
    readonly actions: FieldRef<"Product", 'String'>
    readonly organisationId: FieldRef<"Product", 'String'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly isArchived: FieldRef<"Product", 'Boolean'>
    readonly archivedAt: FieldRef<"Product", 'DateTime'>
    readonly archivedBy: FieldRef<"Product", 'String'>
    readonly brandId: FieldRef<"Product", 'String'>
    readonly createdByUserId: FieldRef<"Product", 'String'>
    readonly updatedByUserId: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.brand
   */
  export type Product$brandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
  }

  /**
   * Product.Stock
   */
  export type Product$StockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    cursor?: StockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Product.categories
   */
  export type Product$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Product.DevisItem
   */
  export type Product$DevisItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    where?: DevisItemWhereInput
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    cursor?: DevisItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisItemScalarFieldEnum | DevisItemScalarFieldEnum[]
  }

  /**
   * Product.ActivityLog
   */
  export type Product$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Product.createdByUser
   */
  export type Product$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product.updatedByUser
   */
  export type Product$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Stock
   */

  export type AggregateStock = {
    _count: StockCountAggregateOutputType | null
    _avg: StockAvgAggregateOutputType | null
    _sum: StockSumAggregateOutputType | null
    _min: StockMinAggregateOutputType | null
    _max: StockMaxAggregateOutputType | null
  }

  export type StockAvgAggregateOutputType = {
    quantity: number | null
  }

  export type StockSumAggregateOutputType = {
    quantity: number | null
  }

  export type StockMinAggregateOutputType = {
    id: string | null
    quantity: number | null
    productId: string | null
    organisationId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type StockMaxAggregateOutputType = {
    id: string | null
    quantity: number | null
    productId: string | null
    organisationId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type StockCountAggregateOutputType = {
    id: number
    quantity: number
    productId: number
    organisationId: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type StockAvgAggregateInputType = {
    quantity?: true
  }

  export type StockSumAggregateInputType = {
    quantity?: true
  }

  export type StockMinAggregateInputType = {
    id?: true
    quantity?: true
    productId?: true
    organisationId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type StockMaxAggregateInputType = {
    id?: true
    quantity?: true
    productId?: true
    organisationId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type StockCountAggregateInputType = {
    id?: true
    quantity?: true
    productId?: true
    organisationId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type StockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stock to aggregate.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stocks
    **/
    _count?: true | StockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockMaxAggregateInputType
  }

  export type GetStockAggregateType<T extends StockAggregateArgs> = {
        [P in keyof T & keyof AggregateStock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStock[P]>
      : GetScalarType<T[P], AggregateStock[P]>
  }




  export type StockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockWhereInput
    orderBy?: StockOrderByWithAggregationInput | StockOrderByWithAggregationInput[]
    by: StockScalarFieldEnum[] | StockScalarFieldEnum
    having?: StockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockCountAggregateInputType | true
    _avg?: StockAvgAggregateInputType
    _sum?: StockSumAggregateInputType
    _min?: StockMinAggregateInputType
    _max?: StockMaxAggregateInputType
  }

  export type StockGroupByOutputType = {
    id: string
    quantity: number
    productId: string
    organisationId: string
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: StockCountAggregateOutputType | null
    _avg: StockAvgAggregateOutputType | null
    _sum: StockSumAggregateOutputType | null
    _min: StockMinAggregateOutputType | null
    _max: StockMaxAggregateOutputType | null
  }

  type GetStockGroupByPayload<T extends StockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockGroupByOutputType[P]>
            : GetScalarType<T[P], StockGroupByOutputType[P]>
        }
      >
    >


  export type StockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    productId?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Stock$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Stock$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Stock$updatedByUserArgs<ExtArgs>
    _count?: boolean | StockCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stock"]>

  export type StockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    productId?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Stock$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Stock$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["stock"]>

  export type StockSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    productId?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Stock$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Stock$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["stock"]>

  export type StockSelectScalar = {
    id?: boolean
    quantity?: boolean
    productId?: boolean
    organisationId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type StockOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "quantity" | "productId" | "organisationId" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["stock"]>
  export type StockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Stock$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Stock$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Stock$updatedByUserArgs<ExtArgs>
    _count?: boolean | StockCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Stock$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Stock$updatedByUserArgs<ExtArgs>
  }
  export type StockIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Stock$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Stock$updatedByUserArgs<ExtArgs>
  }

  export type $StockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Stock"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      quantity: number
      productId: string
      organisationId: string
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["stock"]>
    composites: {}
  }

  type StockGetPayload<S extends boolean | null | undefined | StockDefaultArgs> = $Result.GetResult<Prisma.$StockPayload, S>

  type StockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockCountAggregateInputType | true
    }

  export interface StockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Stock'], meta: { name: 'Stock' } }
    /**
     * Find zero or one Stock that matches the filter.
     * @param {StockFindUniqueArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockFindUniqueArgs>(args: SelectSubset<T, StockFindUniqueArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Stock that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockFindUniqueOrThrowArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockFindUniqueOrThrowArgs>(args: SelectSubset<T, StockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockFindFirstArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockFindFirstArgs>(args?: SelectSubset<T, StockFindFirstArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Stock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockFindFirstOrThrowArgs} args - Arguments to find a Stock
     * @example
     * // Get one Stock
     * const stock = await prisma.stock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockFindFirstOrThrowArgs>(args?: SelectSubset<T, StockFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stocks
     * const stocks = await prisma.stock.findMany()
     * 
     * // Get first 10 Stocks
     * const stocks = await prisma.stock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockWithIdOnly = await prisma.stock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockFindManyArgs>(args?: SelectSubset<T, StockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Stock.
     * @param {StockCreateArgs} args - Arguments to create a Stock.
     * @example
     * // Create one Stock
     * const Stock = await prisma.stock.create({
     *   data: {
     *     // ... data to create a Stock
     *   }
     * })
     * 
     */
    create<T extends StockCreateArgs>(args: SelectSubset<T, StockCreateArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stocks.
     * @param {StockCreateManyArgs} args - Arguments to create many Stocks.
     * @example
     * // Create many Stocks
     * const stock = await prisma.stock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockCreateManyArgs>(args?: SelectSubset<T, StockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stocks and returns the data saved in the database.
     * @param {StockCreateManyAndReturnArgs} args - Arguments to create many Stocks.
     * @example
     * // Create many Stocks
     * const stock = await prisma.stock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stocks and only return the `id`
     * const stockWithIdOnly = await prisma.stock.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StockCreateManyAndReturnArgs>(args?: SelectSubset<T, StockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Stock.
     * @param {StockDeleteArgs} args - Arguments to delete one Stock.
     * @example
     * // Delete one Stock
     * const Stock = await prisma.stock.delete({
     *   where: {
     *     // ... filter to delete one Stock
     *   }
     * })
     * 
     */
    delete<T extends StockDeleteArgs>(args: SelectSubset<T, StockDeleteArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Stock.
     * @param {StockUpdateArgs} args - Arguments to update one Stock.
     * @example
     * // Update one Stock
     * const stock = await prisma.stock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockUpdateArgs>(args: SelectSubset<T, StockUpdateArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stocks.
     * @param {StockDeleteManyArgs} args - Arguments to filter Stocks to delete.
     * @example
     * // Delete a few Stocks
     * const { count } = await prisma.stock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockDeleteManyArgs>(args?: SelectSubset<T, StockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stocks
     * const stock = await prisma.stock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockUpdateManyArgs>(args: SelectSubset<T, StockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stocks and returns the data updated in the database.
     * @param {StockUpdateManyAndReturnArgs} args - Arguments to update many Stocks.
     * @example
     * // Update many Stocks
     * const stock = await prisma.stock.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Stocks and only return the `id`
     * const stockWithIdOnly = await prisma.stock.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StockUpdateManyAndReturnArgs>(args: SelectSubset<T, StockUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Stock.
     * @param {StockUpsertArgs} args - Arguments to update or create a Stock.
     * @example
     * // Update or create a Stock
     * const stock = await prisma.stock.upsert({
     *   create: {
     *     // ... data to create a Stock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Stock we want to update
     *   }
     * })
     */
    upsert<T extends StockUpsertArgs>(args: SelectSubset<T, StockUpsertArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockCountArgs} args - Arguments to filter Stocks to count.
     * @example
     * // Count the number of Stocks
     * const count = await prisma.stock.count({
     *   where: {
     *     // ... the filter for the Stocks we want to count
     *   }
     * })
    **/
    count<T extends StockCountArgs>(
      args?: Subset<T, StockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Stock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockAggregateArgs>(args: Subset<T, StockAggregateArgs>): Prisma.PrismaPromise<GetStockAggregateType<T>>

    /**
     * Group by Stock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockGroupByArgs['orderBy'] }
        : { orderBy?: StockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Stock model
   */
  readonly fields: StockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Stock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Stock$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Stock$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Stock$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Stock$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Stock$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Stock$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Stock model
   */
  interface StockFieldRefs {
    readonly id: FieldRef<"Stock", 'String'>
    readonly quantity: FieldRef<"Stock", 'Int'>
    readonly productId: FieldRef<"Stock", 'String'>
    readonly organisationId: FieldRef<"Stock", 'String'>
    readonly createdAt: FieldRef<"Stock", 'DateTime'>
    readonly updatedAt: FieldRef<"Stock", 'DateTime'>
    readonly isArchived: FieldRef<"Stock", 'Boolean'>
    readonly archivedAt: FieldRef<"Stock", 'DateTime'>
    readonly archivedBy: FieldRef<"Stock", 'String'>
    readonly createdByUserId: FieldRef<"Stock", 'String'>
    readonly updatedByUserId: FieldRef<"Stock", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Stock findUnique
   */
  export type StockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock findUniqueOrThrow
   */
  export type StockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock findFirst
   */
  export type StockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stocks.
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stocks.
     */
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Stock findFirstOrThrow
   */
  export type StockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stock to fetch.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stocks.
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stocks.
     */
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Stock findMany
   */
  export type StockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter, which Stocks to fetch.
     */
    where?: StockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stocks to fetch.
     */
    orderBy?: StockOrderByWithRelationInput | StockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stocks.
     */
    cursor?: StockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stocks.
     */
    skip?: number
    distinct?: StockScalarFieldEnum | StockScalarFieldEnum[]
  }

  /**
   * Stock create
   */
  export type StockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * The data needed to create a Stock.
     */
    data: XOR<StockCreateInput, StockUncheckedCreateInput>
  }

  /**
   * Stock createMany
   */
  export type StockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stocks.
     */
    data: StockCreateManyInput | StockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Stock createManyAndReturn
   */
  export type StockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * The data used to create many Stocks.
     */
    data: StockCreateManyInput | StockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Stock update
   */
  export type StockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * The data needed to update a Stock.
     */
    data: XOR<StockUpdateInput, StockUncheckedUpdateInput>
    /**
     * Choose, which Stock to update.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock updateMany
   */
  export type StockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stocks.
     */
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyInput>
    /**
     * Filter which Stocks to update
     */
    where?: StockWhereInput
    /**
     * Limit how many Stocks to update.
     */
    limit?: number
  }

  /**
   * Stock updateManyAndReturn
   */
  export type StockUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * The data used to update Stocks.
     */
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyInput>
    /**
     * Filter which Stocks to update
     */
    where?: StockWhereInput
    /**
     * Limit how many Stocks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Stock upsert
   */
  export type StockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * The filter to search for the Stock to update in case it exists.
     */
    where: StockWhereUniqueInput
    /**
     * In case the Stock found by the `where` argument doesn't exist, create a new Stock with this data.
     */
    create: XOR<StockCreateInput, StockUncheckedCreateInput>
    /**
     * In case the Stock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockUpdateInput, StockUncheckedUpdateInput>
  }

  /**
   * Stock delete
   */
  export type StockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    /**
     * Filter which Stock to delete.
     */
    where: StockWhereUniqueInput
  }

  /**
   * Stock deleteMany
   */
  export type StockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stocks to delete
     */
    where?: StockWhereInput
    /**
     * Limit how many Stocks to delete.
     */
    limit?: number
  }

  /**
   * Stock.ActivityLog
   */
  export type Stock$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Stock.createdByUser
   */
  export type Stock$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Stock.updatedByUser
   */
  export type Stock$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Stock without action
   */
  export type StockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    organisationId: string | null
    logo: string | null
    parentId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    organisationId: string | null
    logo: string | null
    parentId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    organisationId: number
    logo: number
    parentId: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    organisationId?: true
    logo?: true
    parentId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    organisationId?: true
    logo?: true
    parentId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    organisationId?: true
    logo?: true
    parentId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    description: string | null
    organisationId: string
    logo: string | null
    parentId: string | null
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: CategoryCountAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    ActivityLog?: boolean | Category$ActivityLogArgs<ExtArgs>
    Product?: boolean | Category$ProductArgs<ExtArgs>
    Brand?: boolean | Category$BrandArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    parentId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "organisationId" | "logo" | "parentId" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    children?: boolean | Category$childrenArgs<ExtArgs>
    ActivityLog?: boolean | Category$ActivityLogArgs<ExtArgs>
    Product?: boolean | Category$ProductArgs<ExtArgs>
    Brand?: boolean | Category$BrandArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    parent?: boolean | Category$parentArgs<ExtArgs>
    createdByUser?: boolean | Category$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Category$updatedByUserArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      parent: Prisma.$CategoryPayload<ExtArgs> | null
      children: Prisma.$CategoryPayload<ExtArgs>[]
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      Product: Prisma.$ProductPayload<ExtArgs>[]
      Brand: Prisma.$BrandPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      organisationId: string
      logo: string | null
      parentId: string | null
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    parent<T extends Category$parentArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    children<T extends Category$childrenArgs<ExtArgs> = {}>(args?: Subset<T, Category$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ActivityLog<T extends Category$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Category$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product<T extends Category$ProductArgs<ExtArgs> = {}>(args?: Subset<T, Category$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Brand<T extends Category$BrandArgs<ExtArgs> = {}>(args?: Subset<T, Category$BrandArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Category$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Category$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Category$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly organisationId: FieldRef<"Category", 'String'>
    readonly logo: FieldRef<"Category", 'String'>
    readonly parentId: FieldRef<"Category", 'String'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
    readonly isArchived: FieldRef<"Category", 'Boolean'>
    readonly archivedAt: FieldRef<"Category", 'DateTime'>
    readonly archivedBy: FieldRef<"Category", 'String'>
    readonly createdByUserId: FieldRef<"Category", 'String'>
    readonly updatedByUserId: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.parent
   */
  export type Category$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.children
   */
  export type Category$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.ActivityLog
   */
  export type Category$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Category.Product
   */
  export type Category$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Category.Brand
   */
  export type Category$BrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Category.createdByUser
   */
  export type Category$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.updatedByUser
   */
  export type Category$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Brand
   */

  export type AggregateBrand = {
    _count: BrandCountAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  export type BrandMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    organisationId: string | null
    logo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type BrandMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    organisationId: string | null
    logo: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type BrandCountAggregateOutputType = {
    id: number
    name: number
    description: number
    organisationId: number
    logo: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type BrandMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    organisationId?: true
    logo?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type BrandMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    organisationId?: true
    logo?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type BrandCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    organisationId?: true
    logo?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type BrandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brand to aggregate.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Brands
    **/
    _count?: true | BrandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandMaxAggregateInputType
  }

  export type GetBrandAggregateType<T extends BrandAggregateArgs> = {
        [P in keyof T & keyof AggregateBrand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrand[P]>
      : GetScalarType<T[P], AggregateBrand[P]>
  }




  export type BrandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithAggregationInput | BrandOrderByWithAggregationInput[]
    by: BrandScalarFieldEnum[] | BrandScalarFieldEnum
    having?: BrandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandCountAggregateInputType | true
    _min?: BrandMinAggregateInputType
    _max?: BrandMaxAggregateInputType
  }

  export type BrandGroupByOutputType = {
    id: string
    name: string
    description: string | null
    organisationId: string
    logo: string | null
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: BrandCountAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  type GetBrandGroupByPayload<T extends BrandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandGroupByOutputType[P]>
            : GetScalarType<T[P], BrandGroupByOutputType[P]>
        }
      >
    >


  export type BrandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Brand$ActivityLogArgs<ExtArgs>
    Category?: boolean | Brand$CategoryArgs<ExtArgs>
    createdByUser?: boolean | Brand$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Brand$updatedByUserArgs<ExtArgs>
    Product?: boolean | Brand$ProductArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Brand$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Brand$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Brand$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Brand$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    organisationId?: boolean
    logo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type BrandOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "organisationId" | "logo" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["brand"]>
  export type BrandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Brand$ActivityLogArgs<ExtArgs>
    Category?: boolean | Brand$CategoryArgs<ExtArgs>
    createdByUser?: boolean | Brand$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Brand$updatedByUserArgs<ExtArgs>
    Product?: boolean | Brand$ProductArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BrandIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Brand$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Brand$updatedByUserArgs<ExtArgs>
  }
  export type BrandIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdByUser?: boolean | Brand$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Brand$updatedByUserArgs<ExtArgs>
  }

  export type $BrandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Brand"
    objects: {
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      Category: Prisma.$CategoryPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
      Product: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      organisationId: string
      logo: string | null
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["brand"]>
    composites: {}
  }

  type BrandGetPayload<S extends boolean | null | undefined | BrandDefaultArgs> = $Result.GetResult<Prisma.$BrandPayload, S>

  type BrandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BrandFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandCountAggregateInputType | true
    }

  export interface BrandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Brand'], meta: { name: 'Brand' } }
    /**
     * Find zero or one Brand that matches the filter.
     * @param {BrandFindUniqueArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BrandFindUniqueArgs>(args: SelectSubset<T, BrandFindUniqueArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Brand that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BrandFindUniqueOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BrandFindUniqueOrThrowArgs>(args: SelectSubset<T, BrandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BrandFindFirstArgs>(args?: SelectSubset<T, BrandFindFirstArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BrandFindFirstOrThrowArgs>(args?: SelectSubset<T, BrandFindFirstOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brand.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandWithIdOnly = await prisma.brand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BrandFindManyArgs>(args?: SelectSubset<T, BrandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Brand.
     * @param {BrandCreateArgs} args - Arguments to create a Brand.
     * @example
     * // Create one Brand
     * const Brand = await prisma.brand.create({
     *   data: {
     *     // ... data to create a Brand
     *   }
     * })
     * 
     */
    create<T extends BrandCreateArgs>(args: SelectSubset<T, BrandCreateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Brands.
     * @param {BrandCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BrandCreateManyArgs>(args?: SelectSubset<T, BrandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Brands and returns the data saved in the database.
     * @param {BrandCreateManyAndReturnArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BrandCreateManyAndReturnArgs>(args?: SelectSubset<T, BrandCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Brand.
     * @param {BrandDeleteArgs} args - Arguments to delete one Brand.
     * @example
     * // Delete one Brand
     * const Brand = await prisma.brand.delete({
     *   where: {
     *     // ... filter to delete one Brand
     *   }
     * })
     * 
     */
    delete<T extends BrandDeleteArgs>(args: SelectSubset<T, BrandDeleteArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Brand.
     * @param {BrandUpdateArgs} args - Arguments to update one Brand.
     * @example
     * // Update one Brand
     * const brand = await prisma.brand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BrandUpdateArgs>(args: SelectSubset<T, BrandUpdateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Brands.
     * @param {BrandDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BrandDeleteManyArgs>(args?: SelectSubset<T, BrandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BrandUpdateManyArgs>(args: SelectSubset<T, BrandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands and returns the data updated in the database.
     * @param {BrandUpdateManyAndReturnArgs} args - Arguments to update many Brands.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BrandUpdateManyAndReturnArgs>(args: SelectSubset<T, BrandUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Brand.
     * @param {BrandUpsertArgs} args - Arguments to update or create a Brand.
     * @example
     * // Update or create a Brand
     * const brand = await prisma.brand.upsert({
     *   create: {
     *     // ... data to create a Brand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brand we want to update
     *   }
     * })
     */
    upsert<T extends BrandUpsertArgs>(args: SelectSubset<T, BrandUpsertArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brand.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends BrandCountArgs>(
      args?: Subset<T, BrandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandAggregateArgs>(args: Subset<T, BrandAggregateArgs>): Prisma.PrismaPromise<GetBrandAggregateType<T>>

    /**
     * Group by Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BrandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BrandGroupByArgs['orderBy'] }
        : { orderBy?: BrandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BrandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Brand model
   */
  readonly fields: BrandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Brand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BrandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Brand$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Brand$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Category<T extends Brand$CategoryArgs<ExtArgs> = {}>(args?: Subset<T, Brand$CategoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Brand$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Brand$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Brand$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Brand$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Product<T extends Brand$ProductArgs<ExtArgs> = {}>(args?: Subset<T, Brand$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Brand model
   */
  interface BrandFieldRefs {
    readonly id: FieldRef<"Brand", 'String'>
    readonly name: FieldRef<"Brand", 'String'>
    readonly description: FieldRef<"Brand", 'String'>
    readonly organisationId: FieldRef<"Brand", 'String'>
    readonly logo: FieldRef<"Brand", 'String'>
    readonly createdAt: FieldRef<"Brand", 'DateTime'>
    readonly updatedAt: FieldRef<"Brand", 'DateTime'>
    readonly isArchived: FieldRef<"Brand", 'Boolean'>
    readonly archivedAt: FieldRef<"Brand", 'DateTime'>
    readonly archivedBy: FieldRef<"Brand", 'String'>
    readonly createdByUserId: FieldRef<"Brand", 'String'>
    readonly updatedByUserId: FieldRef<"Brand", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Brand findUnique
   */
  export type BrandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findUniqueOrThrow
   */
  export type BrandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findFirst
   */
  export type BrandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findFirstOrThrow
   */
  export type BrandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findMany
   */
  export type BrandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brands to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand create
   */
  export type BrandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to create a Brand.
     */
    data: XOR<BrandCreateInput, BrandUncheckedCreateInput>
  }

  /**
   * Brand createMany
   */
  export type BrandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand createManyAndReturn
   */
  export type BrandCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Brand update
   */
  export type BrandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to update a Brand.
     */
    data: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
    /**
     * Choose, which Brand to update.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand updateMany
   */
  export type BrandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
  }

  /**
   * Brand updateManyAndReturn
   */
  export type BrandUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Brand upsert
   */
  export type BrandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The filter to search for the Brand to update in case it exists.
     */
    where: BrandWhereUniqueInput
    /**
     * In case the Brand found by the `where` argument doesn't exist, create a new Brand with this data.
     */
    create: XOR<BrandCreateInput, BrandUncheckedCreateInput>
    /**
     * In case the Brand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
  }

  /**
   * Brand delete
   */
  export type BrandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter which Brand to delete.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand deleteMany
   */
  export type BrandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brands to delete
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to delete.
     */
    limit?: number
  }

  /**
   * Brand.ActivityLog
   */
  export type Brand$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Brand.Category
   */
  export type Brand$CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Brand.createdByUser
   */
  export type Brand$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Brand.updatedByUser
   */
  export type Brand$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Brand.Product
   */
  export type Brand$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Brand without action
   */
  export type BrandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
  }


  /**
   * Model Note
   */

  export type AggregateNote = {
    _count: NoteCountAggregateOutputType | null
    _min: NoteMinAggregateOutputType | null
    _max: NoteMaxAggregateOutputType | null
  }

  export type NoteMinAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    color: string | null
    isPinned: boolean | null
    lastModified: Date | null
    userId: string | null
    contactId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type NoteMaxAggregateOutputType = {
    id: string | null
    title: string | null
    content: string | null
    color: string | null
    isPinned: boolean | null
    lastModified: Date | null
    userId: string | null
    contactId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type NoteCountAggregateOutputType = {
    id: number
    title: number
    content: number
    color: number
    isPinned: number
    lastModified: number
    userId: number
    contactId: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type NoteMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    color?: true
    isPinned?: true
    lastModified?: true
    userId?: true
    contactId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type NoteMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    color?: true
    isPinned?: true
    lastModified?: true
    userId?: true
    contactId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type NoteCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    color?: true
    isPinned?: true
    lastModified?: true
    userId?: true
    contactId?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type NoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Note to aggregate.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notes
    **/
    _count?: true | NoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NoteMaxAggregateInputType
  }

  export type GetNoteAggregateType<T extends NoteAggregateArgs> = {
        [P in keyof T & keyof AggregateNote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNote[P]>
      : GetScalarType<T[P], AggregateNote[P]>
  }




  export type NoteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NoteWhereInput
    orderBy?: NoteOrderByWithAggregationInput | NoteOrderByWithAggregationInput[]
    by: NoteScalarFieldEnum[] | NoteScalarFieldEnum
    having?: NoteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NoteCountAggregateInputType | true
    _min?: NoteMinAggregateInputType
    _max?: NoteMaxAggregateInputType
  }

  export type NoteGroupByOutputType = {
    id: string
    title: string
    content: string
    color: string
    isPinned: boolean
    lastModified: Date
    userId: string
    contactId: string
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: NoteCountAggregateOutputType | null
    _min: NoteMinAggregateOutputType | null
    _max: NoteMaxAggregateOutputType | null
  }

  type GetNoteGroupByPayload<T extends NoteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NoteGroupByOutputType[P]>
            : GetScalarType<T[P], NoteGroupByOutputType[P]>
        }
      >
    >


  export type NoteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    color?: boolean
    isPinned?: boolean
    lastModified?: boolean
    userId?: boolean
    contactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    collaborators?: boolean | Note$collaboratorsArgs<ExtArgs>
    ActivityLog?: boolean | Note$ActivityLogArgs<ExtArgs>
    Organisation?: boolean | Note$OrganisationArgs<ExtArgs>
    createdByUser?: boolean | Note$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Note$updatedByUserArgs<ExtArgs>
    _count?: boolean | NoteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["note"]>

  export type NoteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    color?: boolean
    isPinned?: boolean
    lastModified?: boolean
    userId?: boolean
    contactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Note$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Note$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["note"]>

  export type NoteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    color?: boolean
    isPinned?: boolean
    lastModified?: boolean
    userId?: boolean
    contactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Note$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Note$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["note"]>

  export type NoteSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    color?: boolean
    isPinned?: boolean
    lastModified?: boolean
    userId?: boolean
    contactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type NoteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "content" | "color" | "isPinned" | "lastModified" | "userId" | "contactId" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["note"]>
  export type NoteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    collaborators?: boolean | Note$collaboratorsArgs<ExtArgs>
    ActivityLog?: boolean | Note$ActivityLogArgs<ExtArgs>
    Organisation?: boolean | Note$OrganisationArgs<ExtArgs>
    createdByUser?: boolean | Note$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Note$updatedByUserArgs<ExtArgs>
    _count?: boolean | NoteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type NoteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Note$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Note$updatedByUserArgs<ExtArgs>
  }
  export type NoteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdByUser?: boolean | Note$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Note$updatedByUserArgs<ExtArgs>
  }

  export type $NotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Note"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      contact: Prisma.$ContactPayload<ExtArgs>
      collaborators: Prisma.$UserPayload<ExtArgs>[]
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      Organisation: Prisma.$OrganisationPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      content: string
      color: string
      isPinned: boolean
      lastModified: Date
      userId: string
      contactId: string
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["note"]>
    composites: {}
  }

  type NoteGetPayload<S extends boolean | null | undefined | NoteDefaultArgs> = $Result.GetResult<Prisma.$NotePayload, S>

  type NoteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NoteCountAggregateInputType | true
    }

  export interface NoteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Note'], meta: { name: 'Note' } }
    /**
     * Find zero or one Note that matches the filter.
     * @param {NoteFindUniqueArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NoteFindUniqueArgs>(args: SelectSubset<T, NoteFindUniqueArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Note that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NoteFindUniqueOrThrowArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NoteFindUniqueOrThrowArgs>(args: SelectSubset<T, NoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Note that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteFindFirstArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NoteFindFirstArgs>(args?: SelectSubset<T, NoteFindFirstArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Note that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteFindFirstOrThrowArgs} args - Arguments to find a Note
     * @example
     * // Get one Note
     * const note = await prisma.note.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NoteFindFirstOrThrowArgs>(args?: SelectSubset<T, NoteFindFirstOrThrowArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notes
     * const notes = await prisma.note.findMany()
     * 
     * // Get first 10 Notes
     * const notes = await prisma.note.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const noteWithIdOnly = await prisma.note.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NoteFindManyArgs>(args?: SelectSubset<T, NoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Note.
     * @param {NoteCreateArgs} args - Arguments to create a Note.
     * @example
     * // Create one Note
     * const Note = await prisma.note.create({
     *   data: {
     *     // ... data to create a Note
     *   }
     * })
     * 
     */
    create<T extends NoteCreateArgs>(args: SelectSubset<T, NoteCreateArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notes.
     * @param {NoteCreateManyArgs} args - Arguments to create many Notes.
     * @example
     * // Create many Notes
     * const note = await prisma.note.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NoteCreateManyArgs>(args?: SelectSubset<T, NoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notes and returns the data saved in the database.
     * @param {NoteCreateManyAndReturnArgs} args - Arguments to create many Notes.
     * @example
     * // Create many Notes
     * const note = await prisma.note.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notes and only return the `id`
     * const noteWithIdOnly = await prisma.note.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NoteCreateManyAndReturnArgs>(args?: SelectSubset<T, NoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Note.
     * @param {NoteDeleteArgs} args - Arguments to delete one Note.
     * @example
     * // Delete one Note
     * const Note = await prisma.note.delete({
     *   where: {
     *     // ... filter to delete one Note
     *   }
     * })
     * 
     */
    delete<T extends NoteDeleteArgs>(args: SelectSubset<T, NoteDeleteArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Note.
     * @param {NoteUpdateArgs} args - Arguments to update one Note.
     * @example
     * // Update one Note
     * const note = await prisma.note.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NoteUpdateArgs>(args: SelectSubset<T, NoteUpdateArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notes.
     * @param {NoteDeleteManyArgs} args - Arguments to filter Notes to delete.
     * @example
     * // Delete a few Notes
     * const { count } = await prisma.note.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NoteDeleteManyArgs>(args?: SelectSubset<T, NoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notes
     * const note = await prisma.note.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NoteUpdateManyArgs>(args: SelectSubset<T, NoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notes and returns the data updated in the database.
     * @param {NoteUpdateManyAndReturnArgs} args - Arguments to update many Notes.
     * @example
     * // Update many Notes
     * const note = await prisma.note.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notes and only return the `id`
     * const noteWithIdOnly = await prisma.note.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NoteUpdateManyAndReturnArgs>(args: SelectSubset<T, NoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Note.
     * @param {NoteUpsertArgs} args - Arguments to update or create a Note.
     * @example
     * // Update or create a Note
     * const note = await prisma.note.upsert({
     *   create: {
     *     // ... data to create a Note
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Note we want to update
     *   }
     * })
     */
    upsert<T extends NoteUpsertArgs>(args: SelectSubset<T, NoteUpsertArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteCountArgs} args - Arguments to filter Notes to count.
     * @example
     * // Count the number of Notes
     * const count = await prisma.note.count({
     *   where: {
     *     // ... the filter for the Notes we want to count
     *   }
     * })
    **/
    count<T extends NoteCountArgs>(
      args?: Subset<T, NoteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Note.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NoteAggregateArgs>(args: Subset<T, NoteAggregateArgs>): Prisma.PrismaPromise<GetNoteAggregateType<T>>

    /**
     * Group by Note.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NoteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NoteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NoteGroupByArgs['orderBy'] }
        : { orderBy?: NoteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Note model
   */
  readonly fields: NoteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Note.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NoteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contact<T extends ContactDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContactDefaultArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    collaborators<T extends Note$collaboratorsArgs<ExtArgs> = {}>(args?: Subset<T, Note$collaboratorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ActivityLog<T extends Note$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Note$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Organisation<T extends Note$OrganisationArgs<ExtArgs> = {}>(args?: Subset<T, Note$OrganisationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Note$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Note$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Note$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Note$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Note model
   */
  interface NoteFieldRefs {
    readonly id: FieldRef<"Note", 'String'>
    readonly title: FieldRef<"Note", 'String'>
    readonly content: FieldRef<"Note", 'String'>
    readonly color: FieldRef<"Note", 'String'>
    readonly isPinned: FieldRef<"Note", 'Boolean'>
    readonly lastModified: FieldRef<"Note", 'DateTime'>
    readonly userId: FieldRef<"Note", 'String'>
    readonly contactId: FieldRef<"Note", 'String'>
    readonly createdAt: FieldRef<"Note", 'DateTime'>
    readonly updatedAt: FieldRef<"Note", 'DateTime'>
    readonly isArchived: FieldRef<"Note", 'Boolean'>
    readonly archivedAt: FieldRef<"Note", 'DateTime'>
    readonly archivedBy: FieldRef<"Note", 'String'>
    readonly createdByUserId: FieldRef<"Note", 'String'>
    readonly updatedByUserId: FieldRef<"Note", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Note findUnique
   */
  export type NoteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note findUniqueOrThrow
   */
  export type NoteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note findFirst
   */
  export type NoteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notes.
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notes.
     */
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Note findFirstOrThrow
   */
  export type NoteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Note to fetch.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notes.
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notes.
     */
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Note findMany
   */
  export type NoteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter, which Notes to fetch.
     */
    where?: NoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notes to fetch.
     */
    orderBy?: NoteOrderByWithRelationInput | NoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notes.
     */
    cursor?: NoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notes.
     */
    skip?: number
    distinct?: NoteScalarFieldEnum | NoteScalarFieldEnum[]
  }

  /**
   * Note create
   */
  export type NoteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * The data needed to create a Note.
     */
    data: XOR<NoteCreateInput, NoteUncheckedCreateInput>
  }

  /**
   * Note createMany
   */
  export type NoteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notes.
     */
    data: NoteCreateManyInput | NoteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Note createManyAndReturn
   */
  export type NoteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * The data used to create many Notes.
     */
    data: NoteCreateManyInput | NoteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Note update
   */
  export type NoteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * The data needed to update a Note.
     */
    data: XOR<NoteUpdateInput, NoteUncheckedUpdateInput>
    /**
     * Choose, which Note to update.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note updateMany
   */
  export type NoteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notes.
     */
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyInput>
    /**
     * Filter which Notes to update
     */
    where?: NoteWhereInput
    /**
     * Limit how many Notes to update.
     */
    limit?: number
  }

  /**
   * Note updateManyAndReturn
   */
  export type NoteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * The data used to update Notes.
     */
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyInput>
    /**
     * Filter which Notes to update
     */
    where?: NoteWhereInput
    /**
     * Limit how many Notes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Note upsert
   */
  export type NoteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * The filter to search for the Note to update in case it exists.
     */
    where: NoteWhereUniqueInput
    /**
     * In case the Note found by the `where` argument doesn't exist, create a new Note with this data.
     */
    create: XOR<NoteCreateInput, NoteUncheckedCreateInput>
    /**
     * In case the Note was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NoteUpdateInput, NoteUncheckedUpdateInput>
  }

  /**
   * Note delete
   */
  export type NoteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    /**
     * Filter which Note to delete.
     */
    where: NoteWhereUniqueInput
  }

  /**
   * Note deleteMany
   */
  export type NoteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notes to delete
     */
    where?: NoteWhereInput
    /**
     * Limit how many Notes to delete.
     */
    limit?: number
  }

  /**
   * Note.collaborators
   */
  export type Note$collaboratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Note.ActivityLog
   */
  export type Note$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Note.Organisation
   */
  export type Note$OrganisationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
    orderBy?: OrganisationOrderByWithRelationInput | OrganisationOrderByWithRelationInput[]
    cursor?: OrganisationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganisationScalarFieldEnum | OrganisationScalarFieldEnum[]
  }

  /**
   * Note.createdByUser
   */
  export type Note$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Note.updatedByUser
   */
  export type Note$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Note without action
   */
  export type NoteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
  }


  /**
   * Model Devis
   */

  export type AggregateDevis = {
    _count: DevisCountAggregateOutputType | null
    _avg: DevisAvgAggregateOutputType | null
    _sum: DevisSumAggregateOutputType | null
    _min: DevisMinAggregateOutputType | null
    _max: DevisMaxAggregateOutputType | null
  }

  export type DevisAvgAggregateOutputType = {
    totalAmount: number | null
    taxAmount: number | null
    totalWithTax: number | null
  }

  export type DevisSumAggregateOutputType = {
    totalAmount: number | null
    taxAmount: number | null
    totalWithTax: number | null
  }

  export type DevisMinAggregateOutputType = {
    id: string | null
    devisNumber: string | null
    taxType: $Enums.TaxType | null
    status: $Enums.DevisStatus | null
    totalAmount: number | null
    taxAmount: number | null
    totalWithTax: number | null
    notes: string | null
    pdfUrl: string | null
    creationDate: Date | null
    lastModified: Date | null
    archivedDate: Date | null
    dueDate: Date | null
    organisationId: string | null
    contactId: string | null
    createdById: string | null
    isArchived: boolean | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type DevisMaxAggregateOutputType = {
    id: string | null
    devisNumber: string | null
    taxType: $Enums.TaxType | null
    status: $Enums.DevisStatus | null
    totalAmount: number | null
    taxAmount: number | null
    totalWithTax: number | null
    notes: string | null
    pdfUrl: string | null
    creationDate: Date | null
    lastModified: Date | null
    archivedDate: Date | null
    dueDate: Date | null
    organisationId: string | null
    contactId: string | null
    createdById: string | null
    isArchived: boolean | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type DevisCountAggregateOutputType = {
    id: number
    devisNumber: number
    taxType: number
    status: number
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes: number
    pdfUrl: number
    creationDate: number
    lastModified: number
    archivedDate: number
    dueDate: number
    organisationId: number
    contactId: number
    createdById: number
    isArchived: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type DevisAvgAggregateInputType = {
    totalAmount?: true
    taxAmount?: true
    totalWithTax?: true
  }

  export type DevisSumAggregateInputType = {
    totalAmount?: true
    taxAmount?: true
    totalWithTax?: true
  }

  export type DevisMinAggregateInputType = {
    id?: true
    devisNumber?: true
    taxType?: true
    status?: true
    totalAmount?: true
    taxAmount?: true
    totalWithTax?: true
    notes?: true
    pdfUrl?: true
    creationDate?: true
    lastModified?: true
    archivedDate?: true
    dueDate?: true
    organisationId?: true
    contactId?: true
    createdById?: true
    isArchived?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type DevisMaxAggregateInputType = {
    id?: true
    devisNumber?: true
    taxType?: true
    status?: true
    totalAmount?: true
    taxAmount?: true
    totalWithTax?: true
    notes?: true
    pdfUrl?: true
    creationDate?: true
    lastModified?: true
    archivedDate?: true
    dueDate?: true
    organisationId?: true
    contactId?: true
    createdById?: true
    isArchived?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type DevisCountAggregateInputType = {
    id?: true
    devisNumber?: true
    taxType?: true
    status?: true
    totalAmount?: true
    taxAmount?: true
    totalWithTax?: true
    notes?: true
    pdfUrl?: true
    creationDate?: true
    lastModified?: true
    archivedDate?: true
    dueDate?: true
    organisationId?: true
    contactId?: true
    createdById?: true
    isArchived?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type DevisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devis to aggregate.
     */
    where?: DevisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devis to fetch.
     */
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DevisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Devis
    **/
    _count?: true | DevisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DevisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DevisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DevisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DevisMaxAggregateInputType
  }

  export type GetDevisAggregateType<T extends DevisAggregateArgs> = {
        [P in keyof T & keyof AggregateDevis]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevis[P]>
      : GetScalarType<T[P], AggregateDevis[P]>
  }




  export type DevisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisWhereInput
    orderBy?: DevisOrderByWithAggregationInput | DevisOrderByWithAggregationInput[]
    by: DevisScalarFieldEnum[] | DevisScalarFieldEnum
    having?: DevisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevisCountAggregateInputType | true
    _avg?: DevisAvgAggregateInputType
    _sum?: DevisSumAggregateInputType
    _min?: DevisMinAggregateInputType
    _max?: DevisMaxAggregateInputType
  }

  export type DevisGroupByOutputType = {
    id: string
    devisNumber: string
    taxType: $Enums.TaxType
    status: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes: string | null
    pdfUrl: string | null
    creationDate: Date
    lastModified: Date
    archivedDate: Date | null
    dueDate: Date | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived: boolean
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: DevisCountAggregateOutputType | null
    _avg: DevisAvgAggregateOutputType | null
    _sum: DevisSumAggregateOutputType | null
    _min: DevisMinAggregateOutputType | null
    _max: DevisMaxAggregateOutputType | null
  }

  type GetDevisGroupByPayload<T extends DevisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DevisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DevisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DevisGroupByOutputType[P]>
            : GetScalarType<T[P], DevisGroupByOutputType[P]>
        }
      >
    >


  export type DevisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devisNumber?: boolean
    taxType?: boolean
    status?: boolean
    totalAmount?: boolean
    taxAmount?: boolean
    totalWithTax?: boolean
    notes?: boolean
    pdfUrl?: boolean
    creationDate?: boolean
    lastModified?: boolean
    archivedDate?: boolean
    dueDate?: boolean
    organisationId?: boolean
    contactId?: boolean
    createdById?: boolean
    isArchived?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    items?: boolean | Devis$itemsArgs<ExtArgs>
    ActivityLog?: boolean | Devis$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Devis$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Devis$updatedByUserArgs<ExtArgs>
    _count?: boolean | DevisCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devis"]>

  export type DevisSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devisNumber?: boolean
    taxType?: boolean
    status?: boolean
    totalAmount?: boolean
    taxAmount?: boolean
    totalWithTax?: boolean
    notes?: boolean
    pdfUrl?: boolean
    creationDate?: boolean
    lastModified?: boolean
    archivedDate?: boolean
    dueDate?: boolean
    organisationId?: boolean
    contactId?: boolean
    createdById?: boolean
    isArchived?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Devis$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Devis$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["devis"]>

  export type DevisSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    devisNumber?: boolean
    taxType?: boolean
    status?: boolean
    totalAmount?: boolean
    taxAmount?: boolean
    totalWithTax?: boolean
    notes?: boolean
    pdfUrl?: boolean
    creationDate?: boolean
    lastModified?: boolean
    archivedDate?: boolean
    dueDate?: boolean
    organisationId?: boolean
    contactId?: boolean
    createdById?: boolean
    isArchived?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Devis$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Devis$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["devis"]>

  export type DevisSelectScalar = {
    id?: boolean
    devisNumber?: boolean
    taxType?: boolean
    status?: boolean
    totalAmount?: boolean
    taxAmount?: boolean
    totalWithTax?: boolean
    notes?: boolean
    pdfUrl?: boolean
    creationDate?: boolean
    lastModified?: boolean
    archivedDate?: boolean
    dueDate?: boolean
    organisationId?: boolean
    contactId?: boolean
    createdById?: boolean
    isArchived?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type DevisOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "devisNumber" | "taxType" | "status" | "totalAmount" | "taxAmount" | "totalWithTax" | "notes" | "pdfUrl" | "creationDate" | "lastModified" | "archivedDate" | "dueDate" | "organisationId" | "contactId" | "createdById" | "isArchived" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["devis"]>
  export type DevisInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    items?: boolean | Devis$itemsArgs<ExtArgs>
    ActivityLog?: boolean | Devis$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Devis$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Devis$updatedByUserArgs<ExtArgs>
    _count?: boolean | DevisCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DevisIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Devis$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Devis$updatedByUserArgs<ExtArgs>
  }
  export type DevisIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    contact?: boolean | ContactDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Devis$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Devis$updatedByUserArgs<ExtArgs>
  }

  export type $DevisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Devis"
    objects: {
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      contact: Prisma.$ContactPayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs>
      items: Prisma.$DevisItemPayload<ExtArgs>[]
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      devisNumber: string
      taxType: $Enums.TaxType
      status: $Enums.DevisStatus
      totalAmount: number
      taxAmount: number
      totalWithTax: number
      notes: string | null
      pdfUrl: string | null
      creationDate: Date
      lastModified: Date
      archivedDate: Date | null
      dueDate: Date | null
      organisationId: string
      contactId: string
      createdById: string
      isArchived: boolean
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["devis"]>
    composites: {}
  }

  type DevisGetPayload<S extends boolean | null | undefined | DevisDefaultArgs> = $Result.GetResult<Prisma.$DevisPayload, S>

  type DevisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DevisFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DevisCountAggregateInputType | true
    }

  export interface DevisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Devis'], meta: { name: 'Devis' } }
    /**
     * Find zero or one Devis that matches the filter.
     * @param {DevisFindUniqueArgs} args - Arguments to find a Devis
     * @example
     * // Get one Devis
     * const devis = await prisma.devis.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DevisFindUniqueArgs>(args: SelectSubset<T, DevisFindUniqueArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Devis that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DevisFindUniqueOrThrowArgs} args - Arguments to find a Devis
     * @example
     * // Get one Devis
     * const devis = await prisma.devis.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DevisFindUniqueOrThrowArgs>(args: SelectSubset<T, DevisFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Devis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisFindFirstArgs} args - Arguments to find a Devis
     * @example
     * // Get one Devis
     * const devis = await prisma.devis.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DevisFindFirstArgs>(args?: SelectSubset<T, DevisFindFirstArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Devis that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisFindFirstOrThrowArgs} args - Arguments to find a Devis
     * @example
     * // Get one Devis
     * const devis = await prisma.devis.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DevisFindFirstOrThrowArgs>(args?: SelectSubset<T, DevisFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Devis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Devis
     * const devis = await prisma.devis.findMany()
     * 
     * // Get first 10 Devis
     * const devis = await prisma.devis.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const devisWithIdOnly = await prisma.devis.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DevisFindManyArgs>(args?: SelectSubset<T, DevisFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Devis.
     * @param {DevisCreateArgs} args - Arguments to create a Devis.
     * @example
     * // Create one Devis
     * const Devis = await prisma.devis.create({
     *   data: {
     *     // ... data to create a Devis
     *   }
     * })
     * 
     */
    create<T extends DevisCreateArgs>(args: SelectSubset<T, DevisCreateArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Devis.
     * @param {DevisCreateManyArgs} args - Arguments to create many Devis.
     * @example
     * // Create many Devis
     * const devis = await prisma.devis.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DevisCreateManyArgs>(args?: SelectSubset<T, DevisCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Devis and returns the data saved in the database.
     * @param {DevisCreateManyAndReturnArgs} args - Arguments to create many Devis.
     * @example
     * // Create many Devis
     * const devis = await prisma.devis.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Devis and only return the `id`
     * const devisWithIdOnly = await prisma.devis.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DevisCreateManyAndReturnArgs>(args?: SelectSubset<T, DevisCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Devis.
     * @param {DevisDeleteArgs} args - Arguments to delete one Devis.
     * @example
     * // Delete one Devis
     * const Devis = await prisma.devis.delete({
     *   where: {
     *     // ... filter to delete one Devis
     *   }
     * })
     * 
     */
    delete<T extends DevisDeleteArgs>(args: SelectSubset<T, DevisDeleteArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Devis.
     * @param {DevisUpdateArgs} args - Arguments to update one Devis.
     * @example
     * // Update one Devis
     * const devis = await prisma.devis.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DevisUpdateArgs>(args: SelectSubset<T, DevisUpdateArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Devis.
     * @param {DevisDeleteManyArgs} args - Arguments to filter Devis to delete.
     * @example
     * // Delete a few Devis
     * const { count } = await prisma.devis.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DevisDeleteManyArgs>(args?: SelectSubset<T, DevisDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Devis
     * const devis = await prisma.devis.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DevisUpdateManyArgs>(args: SelectSubset<T, DevisUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devis and returns the data updated in the database.
     * @param {DevisUpdateManyAndReturnArgs} args - Arguments to update many Devis.
     * @example
     * // Update many Devis
     * const devis = await prisma.devis.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Devis and only return the `id`
     * const devisWithIdOnly = await prisma.devis.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DevisUpdateManyAndReturnArgs>(args: SelectSubset<T, DevisUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Devis.
     * @param {DevisUpsertArgs} args - Arguments to update or create a Devis.
     * @example
     * // Update or create a Devis
     * const devis = await prisma.devis.upsert({
     *   create: {
     *     // ... data to create a Devis
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Devis we want to update
     *   }
     * })
     */
    upsert<T extends DevisUpsertArgs>(args: SelectSubset<T, DevisUpsertArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Devis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisCountArgs} args - Arguments to filter Devis to count.
     * @example
     * // Count the number of Devis
     * const count = await prisma.devis.count({
     *   where: {
     *     // ... the filter for the Devis we want to count
     *   }
     * })
    **/
    count<T extends DevisCountArgs>(
      args?: Subset<T, DevisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DevisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Devis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DevisAggregateArgs>(args: Subset<T, DevisAggregateArgs>): Prisma.PrismaPromise<GetDevisAggregateType<T>>

    /**
     * Group by Devis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DevisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DevisGroupByArgs['orderBy'] }
        : { orderBy?: DevisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DevisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Devis model
   */
  readonly fields: DevisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Devis.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DevisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    contact<T extends ContactDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContactDefaultArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends Devis$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Devis$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ActivityLog<T extends Devis$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Devis$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Devis$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Devis$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Devis$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Devis$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Devis model
   */
  interface DevisFieldRefs {
    readonly id: FieldRef<"Devis", 'String'>
    readonly devisNumber: FieldRef<"Devis", 'String'>
    readonly taxType: FieldRef<"Devis", 'TaxType'>
    readonly status: FieldRef<"Devis", 'DevisStatus'>
    readonly totalAmount: FieldRef<"Devis", 'Float'>
    readonly taxAmount: FieldRef<"Devis", 'Float'>
    readonly totalWithTax: FieldRef<"Devis", 'Float'>
    readonly notes: FieldRef<"Devis", 'String'>
    readonly pdfUrl: FieldRef<"Devis", 'String'>
    readonly creationDate: FieldRef<"Devis", 'DateTime'>
    readonly lastModified: FieldRef<"Devis", 'DateTime'>
    readonly archivedDate: FieldRef<"Devis", 'DateTime'>
    readonly dueDate: FieldRef<"Devis", 'DateTime'>
    readonly organisationId: FieldRef<"Devis", 'String'>
    readonly contactId: FieldRef<"Devis", 'String'>
    readonly createdById: FieldRef<"Devis", 'String'>
    readonly isArchived: FieldRef<"Devis", 'Boolean'>
    readonly archivedBy: FieldRef<"Devis", 'String'>
    readonly createdByUserId: FieldRef<"Devis", 'String'>
    readonly updatedByUserId: FieldRef<"Devis", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Devis findUnique
   */
  export type DevisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * Filter, which Devis to fetch.
     */
    where: DevisWhereUniqueInput
  }

  /**
   * Devis findUniqueOrThrow
   */
  export type DevisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * Filter, which Devis to fetch.
     */
    where: DevisWhereUniqueInput
  }

  /**
   * Devis findFirst
   */
  export type DevisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * Filter, which Devis to fetch.
     */
    where?: DevisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devis to fetch.
     */
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devis.
     */
    cursor?: DevisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devis.
     */
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * Devis findFirstOrThrow
   */
  export type DevisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * Filter, which Devis to fetch.
     */
    where?: DevisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devis to fetch.
     */
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devis.
     */
    cursor?: DevisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devis.
     */
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * Devis findMany
   */
  export type DevisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * Filter, which Devis to fetch.
     */
    where?: DevisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devis to fetch.
     */
    orderBy?: DevisOrderByWithRelationInput | DevisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Devis.
     */
    cursor?: DevisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devis.
     */
    skip?: number
    distinct?: DevisScalarFieldEnum | DevisScalarFieldEnum[]
  }

  /**
   * Devis create
   */
  export type DevisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * The data needed to create a Devis.
     */
    data: XOR<DevisCreateInput, DevisUncheckedCreateInput>
  }

  /**
   * Devis createMany
   */
  export type DevisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Devis.
     */
    data: DevisCreateManyInput | DevisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Devis createManyAndReturn
   */
  export type DevisCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * The data used to create many Devis.
     */
    data: DevisCreateManyInput | DevisCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Devis update
   */
  export type DevisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * The data needed to update a Devis.
     */
    data: XOR<DevisUpdateInput, DevisUncheckedUpdateInput>
    /**
     * Choose, which Devis to update.
     */
    where: DevisWhereUniqueInput
  }

  /**
   * Devis updateMany
   */
  export type DevisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Devis.
     */
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyInput>
    /**
     * Filter which Devis to update
     */
    where?: DevisWhereInput
    /**
     * Limit how many Devis to update.
     */
    limit?: number
  }

  /**
   * Devis updateManyAndReturn
   */
  export type DevisUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * The data used to update Devis.
     */
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyInput>
    /**
     * Filter which Devis to update
     */
    where?: DevisWhereInput
    /**
     * Limit how many Devis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Devis upsert
   */
  export type DevisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * The filter to search for the Devis to update in case it exists.
     */
    where: DevisWhereUniqueInput
    /**
     * In case the Devis found by the `where` argument doesn't exist, create a new Devis with this data.
     */
    create: XOR<DevisCreateInput, DevisUncheckedCreateInput>
    /**
     * In case the Devis was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DevisUpdateInput, DevisUncheckedUpdateInput>
  }

  /**
   * Devis delete
   */
  export type DevisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    /**
     * Filter which Devis to delete.
     */
    where: DevisWhereUniqueInput
  }

  /**
   * Devis deleteMany
   */
  export type DevisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devis to delete
     */
    where?: DevisWhereInput
    /**
     * Limit how many Devis to delete.
     */
    limit?: number
  }

  /**
   * Devis.items
   */
  export type Devis$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    where?: DevisItemWhereInput
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    cursor?: DevisItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DevisItemScalarFieldEnum | DevisItemScalarFieldEnum[]
  }

  /**
   * Devis.ActivityLog
   */
  export type Devis$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Devis.createdByUser
   */
  export type Devis$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Devis.updatedByUser
   */
  export type Devis$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Devis without action
   */
  export type DevisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
  }


  /**
   * Model DevisItem
   */

  export type AggregateDevisItem = {
    _count: DevisItemCountAggregateOutputType | null
    _avg: DevisItemAvgAggregateOutputType | null
    _sum: DevisItemSumAggregateOutputType | null
    _min: DevisItemMinAggregateOutputType | null
    _max: DevisItemMaxAggregateOutputType | null
  }

  export type DevisItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    taxRate: number | null
    taxAmount: number | null
    totalPrice: number | null
    totalWithTax: number | null
  }

  export type DevisItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    taxRate: number | null
    taxAmount: number | null
    totalPrice: number | null
    totalWithTax: number | null
  }

  export type DevisItemMinAggregateOutputType = {
    id: string | null
    description: string | null
    quantity: number | null
    unitPrice: number | null
    taxRate: number | null
    taxAmount: number | null
    totalPrice: number | null
    totalWithTax: number | null
    creationDate: Date | null
    lastModified: Date | null
    devisId: string | null
    productId: string | null
    createdByUserId: string | null
  }

  export type DevisItemMaxAggregateOutputType = {
    id: string | null
    description: string | null
    quantity: number | null
    unitPrice: number | null
    taxRate: number | null
    taxAmount: number | null
    totalPrice: number | null
    totalWithTax: number | null
    creationDate: Date | null
    lastModified: Date | null
    devisId: string | null
    productId: string | null
    createdByUserId: string | null
  }

  export type DevisItemCountAggregateOutputType = {
    id: number
    description: number
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate: number
    lastModified: number
    devisId: number
    productId: number
    createdByUserId: number
    _all: number
  }


  export type DevisItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    taxRate?: true
    taxAmount?: true
    totalPrice?: true
    totalWithTax?: true
  }

  export type DevisItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    taxRate?: true
    taxAmount?: true
    totalPrice?: true
    totalWithTax?: true
  }

  export type DevisItemMinAggregateInputType = {
    id?: true
    description?: true
    quantity?: true
    unitPrice?: true
    taxRate?: true
    taxAmount?: true
    totalPrice?: true
    totalWithTax?: true
    creationDate?: true
    lastModified?: true
    devisId?: true
    productId?: true
    createdByUserId?: true
  }

  export type DevisItemMaxAggregateInputType = {
    id?: true
    description?: true
    quantity?: true
    unitPrice?: true
    taxRate?: true
    taxAmount?: true
    totalPrice?: true
    totalWithTax?: true
    creationDate?: true
    lastModified?: true
    devisId?: true
    productId?: true
    createdByUserId?: true
  }

  export type DevisItemCountAggregateInputType = {
    id?: true
    description?: true
    quantity?: true
    unitPrice?: true
    taxRate?: true
    taxAmount?: true
    totalPrice?: true
    totalWithTax?: true
    creationDate?: true
    lastModified?: true
    devisId?: true
    productId?: true
    createdByUserId?: true
    _all?: true
  }

  export type DevisItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DevisItem to aggregate.
     */
    where?: DevisItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevisItems to fetch.
     */
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DevisItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevisItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevisItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DevisItems
    **/
    _count?: true | DevisItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DevisItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DevisItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DevisItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DevisItemMaxAggregateInputType
  }

  export type GetDevisItemAggregateType<T extends DevisItemAggregateArgs> = {
        [P in keyof T & keyof AggregateDevisItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevisItem[P]>
      : GetScalarType<T[P], AggregateDevisItem[P]>
  }




  export type DevisItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DevisItemWhereInput
    orderBy?: DevisItemOrderByWithAggregationInput | DevisItemOrderByWithAggregationInput[]
    by: DevisItemScalarFieldEnum[] | DevisItemScalarFieldEnum
    having?: DevisItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DevisItemCountAggregateInputType | true
    _avg?: DevisItemAvgAggregateInputType
    _sum?: DevisItemSumAggregateInputType
    _min?: DevisItemMinAggregateInputType
    _max?: DevisItemMaxAggregateInputType
  }

  export type DevisItemGroupByOutputType = {
    id: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate: Date
    lastModified: Date
    devisId: string
    productId: string | null
    createdByUserId: string | null
    _count: DevisItemCountAggregateOutputType | null
    _avg: DevisItemAvgAggregateOutputType | null
    _sum: DevisItemSumAggregateOutputType | null
    _min: DevisItemMinAggregateOutputType | null
    _max: DevisItemMaxAggregateOutputType | null
  }

  type GetDevisItemGroupByPayload<T extends DevisItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DevisItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DevisItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DevisItemGroupByOutputType[P]>
            : GetScalarType<T[P], DevisItemGroupByOutputType[P]>
        }
      >
    >


  export type DevisItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    quantity?: boolean
    unitPrice?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    totalPrice?: boolean
    totalWithTax?: boolean
    creationDate?: boolean
    lastModified?: boolean
    devisId?: boolean
    productId?: boolean
    createdByUserId?: boolean
    devis?: boolean | DevisDefaultArgs<ExtArgs>
    product?: boolean | DevisItem$productArgs<ExtArgs>
    ActivityLog?: boolean | DevisItem$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | DevisItem$createdByUserArgs<ExtArgs>
    _count?: boolean | DevisItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["devisItem"]>

  export type DevisItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    quantity?: boolean
    unitPrice?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    totalPrice?: boolean
    totalWithTax?: boolean
    creationDate?: boolean
    lastModified?: boolean
    devisId?: boolean
    productId?: boolean
    createdByUserId?: boolean
    devis?: boolean | DevisDefaultArgs<ExtArgs>
    product?: boolean | DevisItem$productArgs<ExtArgs>
    createdByUser?: boolean | DevisItem$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["devisItem"]>

  export type DevisItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    description?: boolean
    quantity?: boolean
    unitPrice?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    totalPrice?: boolean
    totalWithTax?: boolean
    creationDate?: boolean
    lastModified?: boolean
    devisId?: boolean
    productId?: boolean
    createdByUserId?: boolean
    devis?: boolean | DevisDefaultArgs<ExtArgs>
    product?: boolean | DevisItem$productArgs<ExtArgs>
    createdByUser?: boolean | DevisItem$createdByUserArgs<ExtArgs>
  }, ExtArgs["result"]["devisItem"]>

  export type DevisItemSelectScalar = {
    id?: boolean
    description?: boolean
    quantity?: boolean
    unitPrice?: boolean
    taxRate?: boolean
    taxAmount?: boolean
    totalPrice?: boolean
    totalWithTax?: boolean
    creationDate?: boolean
    lastModified?: boolean
    devisId?: boolean
    productId?: boolean
    createdByUserId?: boolean
  }

  export type DevisItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "description" | "quantity" | "unitPrice" | "taxRate" | "taxAmount" | "totalPrice" | "totalWithTax" | "creationDate" | "lastModified" | "devisId" | "productId" | "createdByUserId", ExtArgs["result"]["devisItem"]>
  export type DevisItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devis?: boolean | DevisDefaultArgs<ExtArgs>
    product?: boolean | DevisItem$productArgs<ExtArgs>
    ActivityLog?: boolean | DevisItem$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | DevisItem$createdByUserArgs<ExtArgs>
    _count?: boolean | DevisItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DevisItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devis?: boolean | DevisDefaultArgs<ExtArgs>
    product?: boolean | DevisItem$productArgs<ExtArgs>
    createdByUser?: boolean | DevisItem$createdByUserArgs<ExtArgs>
  }
  export type DevisItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devis?: boolean | DevisDefaultArgs<ExtArgs>
    product?: boolean | DevisItem$productArgs<ExtArgs>
    createdByUser?: boolean | DevisItem$createdByUserArgs<ExtArgs>
  }

  export type $DevisItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DevisItem"
    objects: {
      devis: Prisma.$DevisPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs> | null
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      description: string
      quantity: number
      unitPrice: number
      taxRate: number
      taxAmount: number
      totalPrice: number
      totalWithTax: number
      creationDate: Date
      lastModified: Date
      devisId: string
      productId: string | null
      createdByUserId: string | null
    }, ExtArgs["result"]["devisItem"]>
    composites: {}
  }

  type DevisItemGetPayload<S extends boolean | null | undefined | DevisItemDefaultArgs> = $Result.GetResult<Prisma.$DevisItemPayload, S>

  type DevisItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DevisItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DevisItemCountAggregateInputType | true
    }

  export interface DevisItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DevisItem'], meta: { name: 'DevisItem' } }
    /**
     * Find zero or one DevisItem that matches the filter.
     * @param {DevisItemFindUniqueArgs} args - Arguments to find a DevisItem
     * @example
     * // Get one DevisItem
     * const devisItem = await prisma.devisItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DevisItemFindUniqueArgs>(args: SelectSubset<T, DevisItemFindUniqueArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DevisItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DevisItemFindUniqueOrThrowArgs} args - Arguments to find a DevisItem
     * @example
     * // Get one DevisItem
     * const devisItem = await prisma.devisItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DevisItemFindUniqueOrThrowArgs>(args: SelectSubset<T, DevisItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DevisItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemFindFirstArgs} args - Arguments to find a DevisItem
     * @example
     * // Get one DevisItem
     * const devisItem = await prisma.devisItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DevisItemFindFirstArgs>(args?: SelectSubset<T, DevisItemFindFirstArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DevisItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemFindFirstOrThrowArgs} args - Arguments to find a DevisItem
     * @example
     * // Get one DevisItem
     * const devisItem = await prisma.devisItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DevisItemFindFirstOrThrowArgs>(args?: SelectSubset<T, DevisItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DevisItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DevisItems
     * const devisItems = await prisma.devisItem.findMany()
     * 
     * // Get first 10 DevisItems
     * const devisItems = await prisma.devisItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const devisItemWithIdOnly = await prisma.devisItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DevisItemFindManyArgs>(args?: SelectSubset<T, DevisItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DevisItem.
     * @param {DevisItemCreateArgs} args - Arguments to create a DevisItem.
     * @example
     * // Create one DevisItem
     * const DevisItem = await prisma.devisItem.create({
     *   data: {
     *     // ... data to create a DevisItem
     *   }
     * })
     * 
     */
    create<T extends DevisItemCreateArgs>(args: SelectSubset<T, DevisItemCreateArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DevisItems.
     * @param {DevisItemCreateManyArgs} args - Arguments to create many DevisItems.
     * @example
     * // Create many DevisItems
     * const devisItem = await prisma.devisItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DevisItemCreateManyArgs>(args?: SelectSubset<T, DevisItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DevisItems and returns the data saved in the database.
     * @param {DevisItemCreateManyAndReturnArgs} args - Arguments to create many DevisItems.
     * @example
     * // Create many DevisItems
     * const devisItem = await prisma.devisItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DevisItems and only return the `id`
     * const devisItemWithIdOnly = await prisma.devisItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DevisItemCreateManyAndReturnArgs>(args?: SelectSubset<T, DevisItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DevisItem.
     * @param {DevisItemDeleteArgs} args - Arguments to delete one DevisItem.
     * @example
     * // Delete one DevisItem
     * const DevisItem = await prisma.devisItem.delete({
     *   where: {
     *     // ... filter to delete one DevisItem
     *   }
     * })
     * 
     */
    delete<T extends DevisItemDeleteArgs>(args: SelectSubset<T, DevisItemDeleteArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DevisItem.
     * @param {DevisItemUpdateArgs} args - Arguments to update one DevisItem.
     * @example
     * // Update one DevisItem
     * const devisItem = await prisma.devisItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DevisItemUpdateArgs>(args: SelectSubset<T, DevisItemUpdateArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DevisItems.
     * @param {DevisItemDeleteManyArgs} args - Arguments to filter DevisItems to delete.
     * @example
     * // Delete a few DevisItems
     * const { count } = await prisma.devisItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DevisItemDeleteManyArgs>(args?: SelectSubset<T, DevisItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DevisItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DevisItems
     * const devisItem = await prisma.devisItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DevisItemUpdateManyArgs>(args: SelectSubset<T, DevisItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DevisItems and returns the data updated in the database.
     * @param {DevisItemUpdateManyAndReturnArgs} args - Arguments to update many DevisItems.
     * @example
     * // Update many DevisItems
     * const devisItem = await prisma.devisItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DevisItems and only return the `id`
     * const devisItemWithIdOnly = await prisma.devisItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DevisItemUpdateManyAndReturnArgs>(args: SelectSubset<T, DevisItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DevisItem.
     * @param {DevisItemUpsertArgs} args - Arguments to update or create a DevisItem.
     * @example
     * // Update or create a DevisItem
     * const devisItem = await prisma.devisItem.upsert({
     *   create: {
     *     // ... data to create a DevisItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DevisItem we want to update
     *   }
     * })
     */
    upsert<T extends DevisItemUpsertArgs>(args: SelectSubset<T, DevisItemUpsertArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DevisItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemCountArgs} args - Arguments to filter DevisItems to count.
     * @example
     * // Count the number of DevisItems
     * const count = await prisma.devisItem.count({
     *   where: {
     *     // ... the filter for the DevisItems we want to count
     *   }
     * })
    **/
    count<T extends DevisItemCountArgs>(
      args?: Subset<T, DevisItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DevisItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DevisItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DevisItemAggregateArgs>(args: Subset<T, DevisItemAggregateArgs>): Prisma.PrismaPromise<GetDevisItemAggregateType<T>>

    /**
     * Group by DevisItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DevisItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DevisItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DevisItemGroupByArgs['orderBy'] }
        : { orderBy?: DevisItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DevisItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDevisItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DevisItem model
   */
  readonly fields: DevisItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DevisItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DevisItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    devis<T extends DevisDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DevisDefaultArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product<T extends DevisItem$productArgs<ExtArgs> = {}>(args?: Subset<T, DevisItem$productArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends DevisItem$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, DevisItem$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends DevisItem$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, DevisItem$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DevisItem model
   */
  interface DevisItemFieldRefs {
    readonly id: FieldRef<"DevisItem", 'String'>
    readonly description: FieldRef<"DevisItem", 'String'>
    readonly quantity: FieldRef<"DevisItem", 'Int'>
    readonly unitPrice: FieldRef<"DevisItem", 'Float'>
    readonly taxRate: FieldRef<"DevisItem", 'Float'>
    readonly taxAmount: FieldRef<"DevisItem", 'Float'>
    readonly totalPrice: FieldRef<"DevisItem", 'Float'>
    readonly totalWithTax: FieldRef<"DevisItem", 'Float'>
    readonly creationDate: FieldRef<"DevisItem", 'DateTime'>
    readonly lastModified: FieldRef<"DevisItem", 'DateTime'>
    readonly devisId: FieldRef<"DevisItem", 'String'>
    readonly productId: FieldRef<"DevisItem", 'String'>
    readonly createdByUserId: FieldRef<"DevisItem", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DevisItem findUnique
   */
  export type DevisItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * Filter, which DevisItem to fetch.
     */
    where: DevisItemWhereUniqueInput
  }

  /**
   * DevisItem findUniqueOrThrow
   */
  export type DevisItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * Filter, which DevisItem to fetch.
     */
    where: DevisItemWhereUniqueInput
  }

  /**
   * DevisItem findFirst
   */
  export type DevisItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * Filter, which DevisItem to fetch.
     */
    where?: DevisItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevisItems to fetch.
     */
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DevisItems.
     */
    cursor?: DevisItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevisItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevisItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DevisItems.
     */
    distinct?: DevisItemScalarFieldEnum | DevisItemScalarFieldEnum[]
  }

  /**
   * DevisItem findFirstOrThrow
   */
  export type DevisItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * Filter, which DevisItem to fetch.
     */
    where?: DevisItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevisItems to fetch.
     */
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DevisItems.
     */
    cursor?: DevisItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevisItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevisItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DevisItems.
     */
    distinct?: DevisItemScalarFieldEnum | DevisItemScalarFieldEnum[]
  }

  /**
   * DevisItem findMany
   */
  export type DevisItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * Filter, which DevisItems to fetch.
     */
    where?: DevisItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DevisItems to fetch.
     */
    orderBy?: DevisItemOrderByWithRelationInput | DevisItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DevisItems.
     */
    cursor?: DevisItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DevisItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DevisItems.
     */
    skip?: number
    distinct?: DevisItemScalarFieldEnum | DevisItemScalarFieldEnum[]
  }

  /**
   * DevisItem create
   */
  export type DevisItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * The data needed to create a DevisItem.
     */
    data: XOR<DevisItemCreateInput, DevisItemUncheckedCreateInput>
  }

  /**
   * DevisItem createMany
   */
  export type DevisItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DevisItems.
     */
    data: DevisItemCreateManyInput | DevisItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DevisItem createManyAndReturn
   */
  export type DevisItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * The data used to create many DevisItems.
     */
    data: DevisItemCreateManyInput | DevisItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DevisItem update
   */
  export type DevisItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * The data needed to update a DevisItem.
     */
    data: XOR<DevisItemUpdateInput, DevisItemUncheckedUpdateInput>
    /**
     * Choose, which DevisItem to update.
     */
    where: DevisItemWhereUniqueInput
  }

  /**
   * DevisItem updateMany
   */
  export type DevisItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DevisItems.
     */
    data: XOR<DevisItemUpdateManyMutationInput, DevisItemUncheckedUpdateManyInput>
    /**
     * Filter which DevisItems to update
     */
    where?: DevisItemWhereInput
    /**
     * Limit how many DevisItems to update.
     */
    limit?: number
  }

  /**
   * DevisItem updateManyAndReturn
   */
  export type DevisItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * The data used to update DevisItems.
     */
    data: XOR<DevisItemUpdateManyMutationInput, DevisItemUncheckedUpdateManyInput>
    /**
     * Filter which DevisItems to update
     */
    where?: DevisItemWhereInput
    /**
     * Limit how many DevisItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DevisItem upsert
   */
  export type DevisItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * The filter to search for the DevisItem to update in case it exists.
     */
    where: DevisItemWhereUniqueInput
    /**
     * In case the DevisItem found by the `where` argument doesn't exist, create a new DevisItem with this data.
     */
    create: XOR<DevisItemCreateInput, DevisItemUncheckedCreateInput>
    /**
     * In case the DevisItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DevisItemUpdateInput, DevisItemUncheckedUpdateInput>
  }

  /**
   * DevisItem delete
   */
  export type DevisItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    /**
     * Filter which DevisItem to delete.
     */
    where: DevisItemWhereUniqueInput
  }

  /**
   * DevisItem deleteMany
   */
  export type DevisItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DevisItems to delete
     */
    where?: DevisItemWhereInput
    /**
     * Limit how many DevisItems to delete.
     */
    limit?: number
  }

  /**
   * DevisItem.product
   */
  export type DevisItem$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * DevisItem.ActivityLog
   */
  export type DevisItem$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * DevisItem.createdByUser
   */
  export type DevisItem$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * DevisItem without action
   */
  export type DevisItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
  }


  /**
   * Model Task
   */

  export type AggregateTask = {
    _count: TaskCountAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  export type TaskMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    type: $Enums.TaskType | null
    status: $Enums.TaskStatus | null
    priority: $Enums.TaskPriority | null
    assigneeId: string | null
    dueDate: Date | null
    organisationId: string | null
    createdById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type TaskMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    type: $Enums.TaskType | null
    status: $Enums.TaskStatus | null
    priority: $Enums.TaskPriority | null
    assigneeId: string | null
    dueDate: Date | null
    organisationId: string | null
    createdById: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isArchived: boolean | null
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
  }

  export type TaskCountAggregateOutputType = {
    id: number
    title: number
    description: number
    type: number
    status: number
    priority: number
    assigneeId: number
    dueDate: number
    organisationId: number
    createdById: number
    createdAt: number
    updatedAt: number
    isArchived: number
    archivedAt: number
    archivedBy: number
    createdByUserId: number
    updatedByUserId: number
    _all: number
  }


  export type TaskMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    status?: true
    priority?: true
    assigneeId?: true
    dueDate?: true
    organisationId?: true
    createdById?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type TaskMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    status?: true
    priority?: true
    assigneeId?: true
    dueDate?: true
    organisationId?: true
    createdById?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
  }

  export type TaskCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    type?: true
    status?: true
    priority?: true
    assigneeId?: true
    dueDate?: true
    organisationId?: true
    createdById?: true
    createdAt?: true
    updatedAt?: true
    isArchived?: true
    archivedAt?: true
    archivedBy?: true
    createdByUserId?: true
    updatedByUserId?: true
    _all?: true
  }

  export type TaskAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Task to aggregate.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tasks
    **/
    _count?: true | TaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskMaxAggregateInputType
  }

  export type GetTaskAggregateType<T extends TaskAggregateArgs> = {
        [P in keyof T & keyof AggregateTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask[P]>
      : GetScalarType<T[P], AggregateTask[P]>
  }




  export type TaskGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TaskWhereInput
    orderBy?: TaskOrderByWithAggregationInput | TaskOrderByWithAggregationInput[]
    by: TaskScalarFieldEnum[] | TaskScalarFieldEnum
    having?: TaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskCountAggregateInputType | true
    _min?: TaskMinAggregateInputType
    _max?: TaskMaxAggregateInputType
  }

  export type TaskGroupByOutputType = {
    id: string
    title: string
    description: string | null
    type: $Enums.TaskType
    status: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId: string | null
    dueDate: Date | null
    organisationId: string
    createdById: string
    createdAt: Date
    updatedAt: Date
    isArchived: boolean
    archivedAt: Date | null
    archivedBy: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    _count: TaskCountAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  type GetTaskGroupByPayload<T extends TaskGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskGroupByOutputType[P]>
            : GetScalarType<T[P], TaskGroupByOutputType[P]>
        }
      >
    >


  export type TaskSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    status?: boolean
    priority?: boolean
    assigneeId?: boolean
    dueDate?: boolean
    organisationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Task$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Task$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Task$updatedByUserArgs<ExtArgs>
    _count?: boolean | TaskCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    status?: boolean
    priority?: boolean
    assigneeId?: boolean
    dueDate?: boolean
    organisationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Task$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Task$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    status?: boolean
    priority?: boolean
    assigneeId?: boolean
    dueDate?: boolean
    organisationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Task$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Task$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["task"]>

  export type TaskSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    type?: boolean
    status?: boolean
    priority?: boolean
    assigneeId?: boolean
    dueDate?: boolean
    organisationId?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isArchived?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
  }

  export type TaskOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "type" | "status" | "priority" | "assigneeId" | "dueDate" | "organisationId" | "createdById" | "createdAt" | "updatedAt" | "isArchived" | "archivedAt" | "archivedBy" | "createdByUserId" | "updatedByUserId", ExtArgs["result"]["task"]>
  export type TaskInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    ActivityLog?: boolean | Task$ActivityLogArgs<ExtArgs>
    createdByUser?: boolean | Task$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Task$updatedByUserArgs<ExtArgs>
    _count?: boolean | TaskCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TaskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Task$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Task$updatedByUserArgs<ExtArgs>
  }
  export type TaskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assignee?: boolean | Task$assigneeArgs<ExtArgs>
    organisation?: boolean | OrganisationDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    createdByUser?: boolean | Task$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | Task$updatedByUserArgs<ExtArgs>
  }

  export type $TaskPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Task"
    objects: {
      assignee: Prisma.$UserPayload<ExtArgs> | null
      organisation: Prisma.$OrganisationPayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs>
      ActivityLog: Prisma.$ActivityLogPayload<ExtArgs>[]
      createdByUser: Prisma.$UserPayload<ExtArgs> | null
      updatedByUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string | null
      type: $Enums.TaskType
      status: $Enums.TaskStatus
      priority: $Enums.TaskPriority
      assigneeId: string | null
      dueDate: Date | null
      organisationId: string
      createdById: string
      createdAt: Date
      updatedAt: Date
      isArchived: boolean
      archivedAt: Date | null
      archivedBy: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
    }, ExtArgs["result"]["task"]>
    composites: {}
  }

  type TaskGetPayload<S extends boolean | null | undefined | TaskDefaultArgs> = $Result.GetResult<Prisma.$TaskPayload, S>

  type TaskCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TaskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TaskCountAggregateInputType | true
    }

  export interface TaskDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Task'], meta: { name: 'Task' } }
    /**
     * Find zero or one Task that matches the filter.
     * @param {TaskFindUniqueArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TaskFindUniqueArgs>(args: SelectSubset<T, TaskFindUniqueArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Task that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TaskFindUniqueOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TaskFindUniqueOrThrowArgs>(args: SelectSubset<T, TaskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TaskFindFirstArgs>(args?: SelectSubset<T, TaskFindFirstArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TaskFindFirstOrThrowArgs>(args?: SelectSubset<T, TaskFindFirstOrThrowArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.task.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.task.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskWithIdOnly = await prisma.task.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TaskFindManyArgs>(args?: SelectSubset<T, TaskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Task.
     * @param {TaskCreateArgs} args - Arguments to create a Task.
     * @example
     * // Create one Task
     * const Task = await prisma.task.create({
     *   data: {
     *     // ... data to create a Task
     *   }
     * })
     * 
     */
    create<T extends TaskCreateArgs>(args: SelectSubset<T, TaskCreateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tasks.
     * @param {TaskCreateManyArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TaskCreateManyArgs>(args?: SelectSubset<T, TaskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tasks and returns the data saved in the database.
     * @param {TaskCreateManyAndReturnArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const task = await prisma.task.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tasks and only return the `id`
     * const taskWithIdOnly = await prisma.task.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TaskCreateManyAndReturnArgs>(args?: SelectSubset<T, TaskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Task.
     * @param {TaskDeleteArgs} args - Arguments to delete one Task.
     * @example
     * // Delete one Task
     * const Task = await prisma.task.delete({
     *   where: {
     *     // ... filter to delete one Task
     *   }
     * })
     * 
     */
    delete<T extends TaskDeleteArgs>(args: SelectSubset<T, TaskDeleteArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Task.
     * @param {TaskUpdateArgs} args - Arguments to update one Task.
     * @example
     * // Update one Task
     * const task = await prisma.task.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TaskUpdateArgs>(args: SelectSubset<T, TaskUpdateArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tasks.
     * @param {TaskDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.task.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TaskDeleteManyArgs>(args?: SelectSubset<T, TaskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TaskUpdateManyArgs>(args: SelectSubset<T, TaskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks and returns the data updated in the database.
     * @param {TaskUpdateManyAndReturnArgs} args - Arguments to update many Tasks.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tasks and only return the `id`
     * const taskWithIdOnly = await prisma.task.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TaskUpdateManyAndReturnArgs>(args: SelectSubset<T, TaskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Task.
     * @param {TaskUpsertArgs} args - Arguments to update or create a Task.
     * @example
     * // Update or create a Task
     * const task = await prisma.task.upsert({
     *   create: {
     *     // ... data to create a Task
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task we want to update
     *   }
     * })
     */
    upsert<T extends TaskUpsertArgs>(args: SelectSubset<T, TaskUpsertArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.task.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends TaskCountArgs>(
      args?: Subset<T, TaskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskAggregateArgs>(args: Subset<T, TaskAggregateArgs>): Prisma.PrismaPromise<GetTaskAggregateType<T>>

    /**
     * Group by Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskGroupByArgs['orderBy'] }
        : { orderBy?: TaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Task model
   */
  readonly fields: TaskFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Task.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TaskClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assignee<T extends Task$assigneeArgs<ExtArgs> = {}>(args?: Subset<T, Task$assigneeArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organisation<T extends OrganisationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganisationDefaultArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ActivityLog<T extends Task$ActivityLogArgs<ExtArgs> = {}>(args?: Subset<T, Task$ActivityLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdByUser<T extends Task$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, Task$createdByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedByUser<T extends Task$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, Task$updatedByUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Task model
   */
  interface TaskFieldRefs {
    readonly id: FieldRef<"Task", 'String'>
    readonly title: FieldRef<"Task", 'String'>
    readonly description: FieldRef<"Task", 'String'>
    readonly type: FieldRef<"Task", 'TaskType'>
    readonly status: FieldRef<"Task", 'TaskStatus'>
    readonly priority: FieldRef<"Task", 'TaskPriority'>
    readonly assigneeId: FieldRef<"Task", 'String'>
    readonly dueDate: FieldRef<"Task", 'DateTime'>
    readonly organisationId: FieldRef<"Task", 'String'>
    readonly createdById: FieldRef<"Task", 'String'>
    readonly createdAt: FieldRef<"Task", 'DateTime'>
    readonly updatedAt: FieldRef<"Task", 'DateTime'>
    readonly isArchived: FieldRef<"Task", 'Boolean'>
    readonly archivedAt: FieldRef<"Task", 'DateTime'>
    readonly archivedBy: FieldRef<"Task", 'String'>
    readonly createdByUserId: FieldRef<"Task", 'String'>
    readonly updatedByUserId: FieldRef<"Task", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Task findUnique
   */
  export type TaskFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findUniqueOrThrow
   */
  export type TaskFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task findFirst
   */
  export type TaskFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findFirstOrThrow
   */
  export type TaskFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Task to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     */
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task findMany
   */
  export type TaskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter, which Tasks to fetch.
     */
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     */
    orderBy?: TaskOrderByWithRelationInput | TaskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tasks.
     */
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     */
    skip?: number
    distinct?: TaskScalarFieldEnum | TaskScalarFieldEnum[]
  }

  /**
   * Task create
   */
  export type TaskCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to create a Task.
     */
    data: XOR<TaskCreateInput, TaskUncheckedCreateInput>
  }

  /**
   * Task createMany
   */
  export type TaskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Task createManyAndReturn
   */
  export type TaskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * The data used to create many Tasks.
     */
    data: TaskCreateManyInput | TaskCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Task update
   */
  export type TaskUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The data needed to update a Task.
     */
    data: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
    /**
     * Choose, which Task to update.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task updateMany
   */
  export type TaskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tasks.
     */
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to update.
     */
    limit?: number
  }

  /**
   * Task updateManyAndReturn
   */
  export type TaskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * The data used to update Tasks.
     */
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Task upsert
   */
  export type TaskUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * The filter to search for the Task to update in case it exists.
     */
    where: TaskWhereUniqueInput
    /**
     * In case the Task found by the `where` argument doesn't exist, create a new Task with this data.
     */
    create: XOR<TaskCreateInput, TaskUncheckedCreateInput>
    /**
     * In case the Task was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
  }

  /**
   * Task delete
   */
  export type TaskDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    /**
     * Filter which Task to delete.
     */
    where: TaskWhereUniqueInput
  }

  /**
   * Task deleteMany
   */
  export type TaskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tasks to delete
     */
    where?: TaskWhereInput
    /**
     * Limit how many Tasks to delete.
     */
    limit?: number
  }

  /**
   * Task.assignee
   */
  export type Task$assigneeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task.ActivityLog
   */
  export type Task$ActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    cursor?: ActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * Task.createdByUser
   */
  export type Task$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task.updatedByUser
   */
  export type Task$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Task without action
   */
  export type TaskDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
  }


  /**
   * Model ActivityLog
   */

  export type AggregateActivityLog = {
    _count: ActivityLogCountAggregateOutputType | null
    _min: ActivityLogMinAggregateOutputType | null
    _max: ActivityLogMaxAggregateOutputType | null
  }

  export type ActivityLogMinAggregateOutputType = {
    id: string | null
    action: string | null
    entityType: string | null
    entityId: string | null
    userId: string | null
    organisationId: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    relatedUserId: string | null
    accountId: string | null
    sessionId: string | null
    authenticatorId: string | null
    invitationId: string | null
    passwordResetTokenId: string | null
    contactId: string | null
    commentId: string | null
    feedbackContactId: string | null
    favoriteId: string | null
    productId: string | null
    stockId: string | null
    categoryId: string | null
    brandId: string | null
    noteId: string | null
    devisId: string | null
    devisItemId: string | null
    taskId: string | null
    createdAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    actionDetails: string | null
    entityName: string | null
  }

  export type ActivityLogMaxAggregateOutputType = {
    id: string | null
    action: string | null
    entityType: string | null
    entityId: string | null
    userId: string | null
    organisationId: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    relatedUserId: string | null
    accountId: string | null
    sessionId: string | null
    authenticatorId: string | null
    invitationId: string | null
    passwordResetTokenId: string | null
    contactId: string | null
    commentId: string | null
    feedbackContactId: string | null
    favoriteId: string | null
    productId: string | null
    stockId: string | null
    categoryId: string | null
    brandId: string | null
    noteId: string | null
    devisId: string | null
    devisItemId: string | null
    taskId: string | null
    createdAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    actionDetails: string | null
    entityName: string | null
  }

  export type ActivityLogCountAggregateOutputType = {
    id: number
    action: number
    entityType: number
    entityId: number
    oldData: number
    newData: number
    userId: number
    organisationId: number
    createdByUserId: number
    updatedByUserId: number
    relatedUserId: number
    accountId: number
    sessionId: number
    authenticatorId: number
    invitationId: number
    passwordResetTokenId: number
    contactId: number
    commentId: number
    feedbackContactId: number
    favoriteId: number
    productId: number
    stockId: number
    categoryId: number
    brandId: number
    noteId: number
    devisId: number
    devisItemId: number
    taskId: number
    createdAt: number
    ipAddress: number
    userAgent: number
    actionDetails: number
    entityName: number
    _all: number
  }


  export type ActivityLogMinAggregateInputType = {
    id?: true
    action?: true
    entityType?: true
    entityId?: true
    userId?: true
    organisationId?: true
    createdByUserId?: true
    updatedByUserId?: true
    relatedUserId?: true
    accountId?: true
    sessionId?: true
    authenticatorId?: true
    invitationId?: true
    passwordResetTokenId?: true
    contactId?: true
    commentId?: true
    feedbackContactId?: true
    favoriteId?: true
    productId?: true
    stockId?: true
    categoryId?: true
    brandId?: true
    noteId?: true
    devisId?: true
    devisItemId?: true
    taskId?: true
    createdAt?: true
    ipAddress?: true
    userAgent?: true
    actionDetails?: true
    entityName?: true
  }

  export type ActivityLogMaxAggregateInputType = {
    id?: true
    action?: true
    entityType?: true
    entityId?: true
    userId?: true
    organisationId?: true
    createdByUserId?: true
    updatedByUserId?: true
    relatedUserId?: true
    accountId?: true
    sessionId?: true
    authenticatorId?: true
    invitationId?: true
    passwordResetTokenId?: true
    contactId?: true
    commentId?: true
    feedbackContactId?: true
    favoriteId?: true
    productId?: true
    stockId?: true
    categoryId?: true
    brandId?: true
    noteId?: true
    devisId?: true
    devisItemId?: true
    taskId?: true
    createdAt?: true
    ipAddress?: true
    userAgent?: true
    actionDetails?: true
    entityName?: true
  }

  export type ActivityLogCountAggregateInputType = {
    id?: true
    action?: true
    entityType?: true
    entityId?: true
    oldData?: true
    newData?: true
    userId?: true
    organisationId?: true
    createdByUserId?: true
    updatedByUserId?: true
    relatedUserId?: true
    accountId?: true
    sessionId?: true
    authenticatorId?: true
    invitationId?: true
    passwordResetTokenId?: true
    contactId?: true
    commentId?: true
    feedbackContactId?: true
    favoriteId?: true
    productId?: true
    stockId?: true
    categoryId?: true
    brandId?: true
    noteId?: true
    devisId?: true
    devisItemId?: true
    taskId?: true
    createdAt?: true
    ipAddress?: true
    userAgent?: true
    actionDetails?: true
    entityName?: true
    _all?: true
  }

  export type ActivityLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ActivityLog to aggregate.
     */
    where?: ActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActivityLogs to fetch.
     */
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActivityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ActivityLogs
    **/
    _count?: true | ActivityLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActivityLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActivityLogMaxAggregateInputType
  }

  export type GetActivityLogAggregateType<T extends ActivityLogAggregateArgs> = {
        [P in keyof T & keyof AggregateActivityLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivityLog[P]>
      : GetScalarType<T[P], AggregateActivityLog[P]>
  }




  export type ActivityLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActivityLogWhereInput
    orderBy?: ActivityLogOrderByWithAggregationInput | ActivityLogOrderByWithAggregationInput[]
    by: ActivityLogScalarFieldEnum[] | ActivityLogScalarFieldEnum
    having?: ActivityLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActivityLogCountAggregateInputType | true
    _min?: ActivityLogMinAggregateInputType
    _max?: ActivityLogMaxAggregateInputType
  }

  export type ActivityLogGroupByOutputType = {
    id: string
    action: string
    entityType: string
    entityId: string
    oldData: JsonValue | null
    newData: JsonValue | null
    userId: string | null
    organisationId: string | null
    createdByUserId: string | null
    updatedByUserId: string | null
    relatedUserId: string | null
    accountId: string | null
    sessionId: string | null
    authenticatorId: string | null
    invitationId: string | null
    passwordResetTokenId: string | null
    contactId: string | null
    commentId: string | null
    feedbackContactId: string | null
    favoriteId: string | null
    productId: string | null
    stockId: string | null
    categoryId: string | null
    brandId: string | null
    noteId: string | null
    devisId: string | null
    devisItemId: string | null
    taskId: string | null
    createdAt: Date
    ipAddress: string | null
    userAgent: string | null
    actionDetails: string | null
    entityName: string | null
    _count: ActivityLogCountAggregateOutputType | null
    _min: ActivityLogMinAggregateOutputType | null
    _max: ActivityLogMaxAggregateOutputType | null
  }

  type GetActivityLogGroupByPayload<T extends ActivityLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ActivityLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActivityLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActivityLogGroupByOutputType[P]>
            : GetScalarType<T[P], ActivityLogGroupByOutputType[P]>
        }
      >
    >


  export type ActivityLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    oldData?: boolean
    newData?: boolean
    userId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    relatedUserId?: boolean
    accountId?: boolean
    sessionId?: boolean
    authenticatorId?: boolean
    invitationId?: boolean
    passwordResetTokenId?: boolean
    contactId?: boolean
    commentId?: boolean
    feedbackContactId?: boolean
    favoriteId?: boolean
    productId?: boolean
    stockId?: boolean
    categoryId?: boolean
    brandId?: boolean
    noteId?: boolean
    devisId?: boolean
    devisItemId?: boolean
    taskId?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    actionDetails?: boolean
    entityName?: boolean
    user?: boolean | ActivityLog$userArgs<ExtArgs>
    organisation?: boolean | ActivityLog$organisationArgs<ExtArgs>
    createdBy?: boolean | ActivityLog$createdByArgs<ExtArgs>
    updatedBy?: boolean | ActivityLog$updatedByArgs<ExtArgs>
    relatedUser?: boolean | ActivityLog$relatedUserArgs<ExtArgs>
    account?: boolean | ActivityLog$accountArgs<ExtArgs>
    session?: boolean | ActivityLog$sessionArgs<ExtArgs>
    authenticator?: boolean | ActivityLog$authenticatorArgs<ExtArgs>
    invitation?: boolean | ActivityLog$invitationArgs<ExtArgs>
    passwordResetToken?: boolean | ActivityLog$passwordResetTokenArgs<ExtArgs>
    contact?: boolean | ActivityLog$contactArgs<ExtArgs>
    comment?: boolean | ActivityLog$commentArgs<ExtArgs>
    feedbackContact?: boolean | ActivityLog$feedbackContactArgs<ExtArgs>
    favorite?: boolean | ActivityLog$favoriteArgs<ExtArgs>
    product?: boolean | ActivityLog$productArgs<ExtArgs>
    stock?: boolean | ActivityLog$stockArgs<ExtArgs>
    category?: boolean | ActivityLog$categoryArgs<ExtArgs>
    brand?: boolean | ActivityLog$brandArgs<ExtArgs>
    note?: boolean | ActivityLog$noteArgs<ExtArgs>
    devis?: boolean | ActivityLog$devisArgs<ExtArgs>
    devisItem?: boolean | ActivityLog$devisItemArgs<ExtArgs>
    task?: boolean | ActivityLog$taskArgs<ExtArgs>
  }, ExtArgs["result"]["activityLog"]>

  export type ActivityLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    oldData?: boolean
    newData?: boolean
    userId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    relatedUserId?: boolean
    accountId?: boolean
    sessionId?: boolean
    authenticatorId?: boolean
    invitationId?: boolean
    passwordResetTokenId?: boolean
    contactId?: boolean
    commentId?: boolean
    feedbackContactId?: boolean
    favoriteId?: boolean
    productId?: boolean
    stockId?: boolean
    categoryId?: boolean
    brandId?: boolean
    noteId?: boolean
    devisId?: boolean
    devisItemId?: boolean
    taskId?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    actionDetails?: boolean
    entityName?: boolean
    user?: boolean | ActivityLog$userArgs<ExtArgs>
    organisation?: boolean | ActivityLog$organisationArgs<ExtArgs>
    createdBy?: boolean | ActivityLog$createdByArgs<ExtArgs>
    updatedBy?: boolean | ActivityLog$updatedByArgs<ExtArgs>
    relatedUser?: boolean | ActivityLog$relatedUserArgs<ExtArgs>
    account?: boolean | ActivityLog$accountArgs<ExtArgs>
    session?: boolean | ActivityLog$sessionArgs<ExtArgs>
    authenticator?: boolean | ActivityLog$authenticatorArgs<ExtArgs>
    invitation?: boolean | ActivityLog$invitationArgs<ExtArgs>
    passwordResetToken?: boolean | ActivityLog$passwordResetTokenArgs<ExtArgs>
    contact?: boolean | ActivityLog$contactArgs<ExtArgs>
    comment?: boolean | ActivityLog$commentArgs<ExtArgs>
    feedbackContact?: boolean | ActivityLog$feedbackContactArgs<ExtArgs>
    favorite?: boolean | ActivityLog$favoriteArgs<ExtArgs>
    product?: boolean | ActivityLog$productArgs<ExtArgs>
    stock?: boolean | ActivityLog$stockArgs<ExtArgs>
    category?: boolean | ActivityLog$categoryArgs<ExtArgs>
    brand?: boolean | ActivityLog$brandArgs<ExtArgs>
    note?: boolean | ActivityLog$noteArgs<ExtArgs>
    devis?: boolean | ActivityLog$devisArgs<ExtArgs>
    devisItem?: boolean | ActivityLog$devisItemArgs<ExtArgs>
    task?: boolean | ActivityLog$taskArgs<ExtArgs>
  }, ExtArgs["result"]["activityLog"]>

  export type ActivityLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    oldData?: boolean
    newData?: boolean
    userId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    relatedUserId?: boolean
    accountId?: boolean
    sessionId?: boolean
    authenticatorId?: boolean
    invitationId?: boolean
    passwordResetTokenId?: boolean
    contactId?: boolean
    commentId?: boolean
    feedbackContactId?: boolean
    favoriteId?: boolean
    productId?: boolean
    stockId?: boolean
    categoryId?: boolean
    brandId?: boolean
    noteId?: boolean
    devisId?: boolean
    devisItemId?: boolean
    taskId?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    actionDetails?: boolean
    entityName?: boolean
    user?: boolean | ActivityLog$userArgs<ExtArgs>
    organisation?: boolean | ActivityLog$organisationArgs<ExtArgs>
    createdBy?: boolean | ActivityLog$createdByArgs<ExtArgs>
    updatedBy?: boolean | ActivityLog$updatedByArgs<ExtArgs>
    relatedUser?: boolean | ActivityLog$relatedUserArgs<ExtArgs>
    account?: boolean | ActivityLog$accountArgs<ExtArgs>
    session?: boolean | ActivityLog$sessionArgs<ExtArgs>
    authenticator?: boolean | ActivityLog$authenticatorArgs<ExtArgs>
    invitation?: boolean | ActivityLog$invitationArgs<ExtArgs>
    passwordResetToken?: boolean | ActivityLog$passwordResetTokenArgs<ExtArgs>
    contact?: boolean | ActivityLog$contactArgs<ExtArgs>
    comment?: boolean | ActivityLog$commentArgs<ExtArgs>
    feedbackContact?: boolean | ActivityLog$feedbackContactArgs<ExtArgs>
    favorite?: boolean | ActivityLog$favoriteArgs<ExtArgs>
    product?: boolean | ActivityLog$productArgs<ExtArgs>
    stock?: boolean | ActivityLog$stockArgs<ExtArgs>
    category?: boolean | ActivityLog$categoryArgs<ExtArgs>
    brand?: boolean | ActivityLog$brandArgs<ExtArgs>
    note?: boolean | ActivityLog$noteArgs<ExtArgs>
    devis?: boolean | ActivityLog$devisArgs<ExtArgs>
    devisItem?: boolean | ActivityLog$devisItemArgs<ExtArgs>
    task?: boolean | ActivityLog$taskArgs<ExtArgs>
  }, ExtArgs["result"]["activityLog"]>

  export type ActivityLogSelectScalar = {
    id?: boolean
    action?: boolean
    entityType?: boolean
    entityId?: boolean
    oldData?: boolean
    newData?: boolean
    userId?: boolean
    organisationId?: boolean
    createdByUserId?: boolean
    updatedByUserId?: boolean
    relatedUserId?: boolean
    accountId?: boolean
    sessionId?: boolean
    authenticatorId?: boolean
    invitationId?: boolean
    passwordResetTokenId?: boolean
    contactId?: boolean
    commentId?: boolean
    feedbackContactId?: boolean
    favoriteId?: boolean
    productId?: boolean
    stockId?: boolean
    categoryId?: boolean
    brandId?: boolean
    noteId?: boolean
    devisId?: boolean
    devisItemId?: boolean
    taskId?: boolean
    createdAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    actionDetails?: boolean
    entityName?: boolean
  }

  export type ActivityLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "action" | "entityType" | "entityId" | "oldData" | "newData" | "userId" | "organisationId" | "createdByUserId" | "updatedByUserId" | "relatedUserId" | "accountId" | "sessionId" | "authenticatorId" | "invitationId" | "passwordResetTokenId" | "contactId" | "commentId" | "feedbackContactId" | "favoriteId" | "productId" | "stockId" | "categoryId" | "brandId" | "noteId" | "devisId" | "devisItemId" | "taskId" | "createdAt" | "ipAddress" | "userAgent" | "actionDetails" | "entityName", ExtArgs["result"]["activityLog"]>
  export type ActivityLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ActivityLog$userArgs<ExtArgs>
    organisation?: boolean | ActivityLog$organisationArgs<ExtArgs>
    createdBy?: boolean | ActivityLog$createdByArgs<ExtArgs>
    updatedBy?: boolean | ActivityLog$updatedByArgs<ExtArgs>
    relatedUser?: boolean | ActivityLog$relatedUserArgs<ExtArgs>
    account?: boolean | ActivityLog$accountArgs<ExtArgs>
    session?: boolean | ActivityLog$sessionArgs<ExtArgs>
    authenticator?: boolean | ActivityLog$authenticatorArgs<ExtArgs>
    invitation?: boolean | ActivityLog$invitationArgs<ExtArgs>
    passwordResetToken?: boolean | ActivityLog$passwordResetTokenArgs<ExtArgs>
    contact?: boolean | ActivityLog$contactArgs<ExtArgs>
    comment?: boolean | ActivityLog$commentArgs<ExtArgs>
    feedbackContact?: boolean | ActivityLog$feedbackContactArgs<ExtArgs>
    favorite?: boolean | ActivityLog$favoriteArgs<ExtArgs>
    product?: boolean | ActivityLog$productArgs<ExtArgs>
    stock?: boolean | ActivityLog$stockArgs<ExtArgs>
    category?: boolean | ActivityLog$categoryArgs<ExtArgs>
    brand?: boolean | ActivityLog$brandArgs<ExtArgs>
    note?: boolean | ActivityLog$noteArgs<ExtArgs>
    devis?: boolean | ActivityLog$devisArgs<ExtArgs>
    devisItem?: boolean | ActivityLog$devisItemArgs<ExtArgs>
    task?: boolean | ActivityLog$taskArgs<ExtArgs>
  }
  export type ActivityLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ActivityLog$userArgs<ExtArgs>
    organisation?: boolean | ActivityLog$organisationArgs<ExtArgs>
    createdBy?: boolean | ActivityLog$createdByArgs<ExtArgs>
    updatedBy?: boolean | ActivityLog$updatedByArgs<ExtArgs>
    relatedUser?: boolean | ActivityLog$relatedUserArgs<ExtArgs>
    account?: boolean | ActivityLog$accountArgs<ExtArgs>
    session?: boolean | ActivityLog$sessionArgs<ExtArgs>
    authenticator?: boolean | ActivityLog$authenticatorArgs<ExtArgs>
    invitation?: boolean | ActivityLog$invitationArgs<ExtArgs>
    passwordResetToken?: boolean | ActivityLog$passwordResetTokenArgs<ExtArgs>
    contact?: boolean | ActivityLog$contactArgs<ExtArgs>
    comment?: boolean | ActivityLog$commentArgs<ExtArgs>
    feedbackContact?: boolean | ActivityLog$feedbackContactArgs<ExtArgs>
    favorite?: boolean | ActivityLog$favoriteArgs<ExtArgs>
    product?: boolean | ActivityLog$productArgs<ExtArgs>
    stock?: boolean | ActivityLog$stockArgs<ExtArgs>
    category?: boolean | ActivityLog$categoryArgs<ExtArgs>
    brand?: boolean | ActivityLog$brandArgs<ExtArgs>
    note?: boolean | ActivityLog$noteArgs<ExtArgs>
    devis?: boolean | ActivityLog$devisArgs<ExtArgs>
    devisItem?: boolean | ActivityLog$devisItemArgs<ExtArgs>
    task?: boolean | ActivityLog$taskArgs<ExtArgs>
  }
  export type ActivityLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ActivityLog$userArgs<ExtArgs>
    organisation?: boolean | ActivityLog$organisationArgs<ExtArgs>
    createdBy?: boolean | ActivityLog$createdByArgs<ExtArgs>
    updatedBy?: boolean | ActivityLog$updatedByArgs<ExtArgs>
    relatedUser?: boolean | ActivityLog$relatedUserArgs<ExtArgs>
    account?: boolean | ActivityLog$accountArgs<ExtArgs>
    session?: boolean | ActivityLog$sessionArgs<ExtArgs>
    authenticator?: boolean | ActivityLog$authenticatorArgs<ExtArgs>
    invitation?: boolean | ActivityLog$invitationArgs<ExtArgs>
    passwordResetToken?: boolean | ActivityLog$passwordResetTokenArgs<ExtArgs>
    contact?: boolean | ActivityLog$contactArgs<ExtArgs>
    comment?: boolean | ActivityLog$commentArgs<ExtArgs>
    feedbackContact?: boolean | ActivityLog$feedbackContactArgs<ExtArgs>
    favorite?: boolean | ActivityLog$favoriteArgs<ExtArgs>
    product?: boolean | ActivityLog$productArgs<ExtArgs>
    stock?: boolean | ActivityLog$stockArgs<ExtArgs>
    category?: boolean | ActivityLog$categoryArgs<ExtArgs>
    brand?: boolean | ActivityLog$brandArgs<ExtArgs>
    note?: boolean | ActivityLog$noteArgs<ExtArgs>
    devis?: boolean | ActivityLog$devisArgs<ExtArgs>
    devisItem?: boolean | ActivityLog$devisItemArgs<ExtArgs>
    task?: boolean | ActivityLog$taskArgs<ExtArgs>
  }

  export type $ActivityLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ActivityLog"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      organisation: Prisma.$OrganisationPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      relatedUser: Prisma.$UserPayload<ExtArgs> | null
      account: Prisma.$AccountPayload<ExtArgs> | null
      session: Prisma.$SessionPayload<ExtArgs> | null
      authenticator: Prisma.$AuthenticatorPayload<ExtArgs> | null
      invitation: Prisma.$InvitationPayload<ExtArgs> | null
      passwordResetToken: Prisma.$PasswordResetTokenPayload<ExtArgs> | null
      contact: Prisma.$ContactPayload<ExtArgs> | null
      comment: Prisma.$CommentPayload<ExtArgs> | null
      feedbackContact: Prisma.$FeedbackContactPayload<ExtArgs> | null
      favorite: Prisma.$FavoritePayload<ExtArgs> | null
      product: Prisma.$ProductPayload<ExtArgs> | null
      stock: Prisma.$StockPayload<ExtArgs> | null
      category: Prisma.$CategoryPayload<ExtArgs> | null
      brand: Prisma.$BrandPayload<ExtArgs> | null
      note: Prisma.$NotePayload<ExtArgs> | null
      devis: Prisma.$DevisPayload<ExtArgs> | null
      devisItem: Prisma.$DevisItemPayload<ExtArgs> | null
      task: Prisma.$TaskPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      action: string
      entityType: string
      entityId: string
      oldData: Prisma.JsonValue | null
      newData: Prisma.JsonValue | null
      userId: string | null
      organisationId: string | null
      createdByUserId: string | null
      updatedByUserId: string | null
      relatedUserId: string | null
      accountId: string | null
      sessionId: string | null
      authenticatorId: string | null
      invitationId: string | null
      passwordResetTokenId: string | null
      contactId: string | null
      commentId: string | null
      feedbackContactId: string | null
      favoriteId: string | null
      productId: string | null
      stockId: string | null
      categoryId: string | null
      brandId: string | null
      noteId: string | null
      devisId: string | null
      devisItemId: string | null
      taskId: string | null
      createdAt: Date
      ipAddress: string | null
      userAgent: string | null
      actionDetails: string | null
      entityName: string | null
    }, ExtArgs["result"]["activityLog"]>
    composites: {}
  }

  type ActivityLogGetPayload<S extends boolean | null | undefined | ActivityLogDefaultArgs> = $Result.GetResult<Prisma.$ActivityLogPayload, S>

  type ActivityLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ActivityLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ActivityLogCountAggregateInputType | true
    }

  export interface ActivityLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ActivityLog'], meta: { name: 'ActivityLog' } }
    /**
     * Find zero or one ActivityLog that matches the filter.
     * @param {ActivityLogFindUniqueArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ActivityLogFindUniqueArgs>(args: SelectSubset<T, ActivityLogFindUniqueArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ActivityLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ActivityLogFindUniqueOrThrowArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ActivityLogFindUniqueOrThrowArgs>(args: SelectSubset<T, ActivityLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ActivityLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogFindFirstArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ActivityLogFindFirstArgs>(args?: SelectSubset<T, ActivityLogFindFirstArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ActivityLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogFindFirstOrThrowArgs} args - Arguments to find a ActivityLog
     * @example
     * // Get one ActivityLog
     * const activityLog = await prisma.activityLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ActivityLogFindFirstOrThrowArgs>(args?: SelectSubset<T, ActivityLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ActivityLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ActivityLogs
     * const activityLogs = await prisma.activityLog.findMany()
     * 
     * // Get first 10 ActivityLogs
     * const activityLogs = await prisma.activityLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activityLogWithIdOnly = await prisma.activityLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ActivityLogFindManyArgs>(args?: SelectSubset<T, ActivityLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ActivityLog.
     * @param {ActivityLogCreateArgs} args - Arguments to create a ActivityLog.
     * @example
     * // Create one ActivityLog
     * const ActivityLog = await prisma.activityLog.create({
     *   data: {
     *     // ... data to create a ActivityLog
     *   }
     * })
     * 
     */
    create<T extends ActivityLogCreateArgs>(args: SelectSubset<T, ActivityLogCreateArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ActivityLogs.
     * @param {ActivityLogCreateManyArgs} args - Arguments to create many ActivityLogs.
     * @example
     * // Create many ActivityLogs
     * const activityLog = await prisma.activityLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ActivityLogCreateManyArgs>(args?: SelectSubset<T, ActivityLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ActivityLogs and returns the data saved in the database.
     * @param {ActivityLogCreateManyAndReturnArgs} args - Arguments to create many ActivityLogs.
     * @example
     * // Create many ActivityLogs
     * const activityLog = await prisma.activityLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ActivityLogs and only return the `id`
     * const activityLogWithIdOnly = await prisma.activityLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ActivityLogCreateManyAndReturnArgs>(args?: SelectSubset<T, ActivityLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ActivityLog.
     * @param {ActivityLogDeleteArgs} args - Arguments to delete one ActivityLog.
     * @example
     * // Delete one ActivityLog
     * const ActivityLog = await prisma.activityLog.delete({
     *   where: {
     *     // ... filter to delete one ActivityLog
     *   }
     * })
     * 
     */
    delete<T extends ActivityLogDeleteArgs>(args: SelectSubset<T, ActivityLogDeleteArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ActivityLog.
     * @param {ActivityLogUpdateArgs} args - Arguments to update one ActivityLog.
     * @example
     * // Update one ActivityLog
     * const activityLog = await prisma.activityLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ActivityLogUpdateArgs>(args: SelectSubset<T, ActivityLogUpdateArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ActivityLogs.
     * @param {ActivityLogDeleteManyArgs} args - Arguments to filter ActivityLogs to delete.
     * @example
     * // Delete a few ActivityLogs
     * const { count } = await prisma.activityLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ActivityLogDeleteManyArgs>(args?: SelectSubset<T, ActivityLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ActivityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ActivityLogs
     * const activityLog = await prisma.activityLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ActivityLogUpdateManyArgs>(args: SelectSubset<T, ActivityLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ActivityLogs and returns the data updated in the database.
     * @param {ActivityLogUpdateManyAndReturnArgs} args - Arguments to update many ActivityLogs.
     * @example
     * // Update many ActivityLogs
     * const activityLog = await prisma.activityLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ActivityLogs and only return the `id`
     * const activityLogWithIdOnly = await prisma.activityLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ActivityLogUpdateManyAndReturnArgs>(args: SelectSubset<T, ActivityLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ActivityLog.
     * @param {ActivityLogUpsertArgs} args - Arguments to update or create a ActivityLog.
     * @example
     * // Update or create a ActivityLog
     * const activityLog = await prisma.activityLog.upsert({
     *   create: {
     *     // ... data to create a ActivityLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ActivityLog we want to update
     *   }
     * })
     */
    upsert<T extends ActivityLogUpsertArgs>(args: SelectSubset<T, ActivityLogUpsertArgs<ExtArgs>>): Prisma__ActivityLogClient<$Result.GetResult<Prisma.$ActivityLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ActivityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogCountArgs} args - Arguments to filter ActivityLogs to count.
     * @example
     * // Count the number of ActivityLogs
     * const count = await prisma.activityLog.count({
     *   where: {
     *     // ... the filter for the ActivityLogs we want to count
     *   }
     * })
    **/
    count<T extends ActivityLogCountArgs>(
      args?: Subset<T, ActivityLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActivityLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ActivityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActivityLogAggregateArgs>(args: Subset<T, ActivityLogAggregateArgs>): Prisma.PrismaPromise<GetActivityLogAggregateType<T>>

    /**
     * Group by ActivityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActivityLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ActivityLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ActivityLogGroupByArgs['orderBy'] }
        : { orderBy?: ActivityLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ActivityLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivityLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ActivityLog model
   */
  readonly fields: ActivityLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ActivityLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ActivityLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends ActivityLog$userArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organisation<T extends ActivityLog$organisationArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$organisationArgs<ExtArgs>>): Prisma__OrganisationClient<$Result.GetResult<Prisma.$OrganisationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends ActivityLog$createdByArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends ActivityLog$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    relatedUser<T extends ActivityLog$relatedUserArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$relatedUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    account<T extends ActivityLog$accountArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$accountArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    session<T extends ActivityLog$sessionArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$sessionArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    authenticator<T extends ActivityLog$authenticatorArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$authenticatorArgs<ExtArgs>>): Prisma__AuthenticatorClient<$Result.GetResult<Prisma.$AuthenticatorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    invitation<T extends ActivityLog$invitationArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$invitationArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    passwordResetToken<T extends ActivityLog$passwordResetTokenArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$passwordResetTokenArgs<ExtArgs>>): Prisma__PasswordResetTokenClient<$Result.GetResult<Prisma.$PasswordResetTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    contact<T extends ActivityLog$contactArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$contactArgs<ExtArgs>>): Prisma__ContactClient<$Result.GetResult<Prisma.$ContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    comment<T extends ActivityLog$commentArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$commentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    feedbackContact<T extends ActivityLog$feedbackContactArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$feedbackContactArgs<ExtArgs>>): Prisma__FeedbackContactClient<$Result.GetResult<Prisma.$FeedbackContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    favorite<T extends ActivityLog$favoriteArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$favoriteArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    product<T extends ActivityLog$productArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$productArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    stock<T extends ActivityLog$stockArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$stockArgs<ExtArgs>>): Prisma__StockClient<$Result.GetResult<Prisma.$StockPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    category<T extends ActivityLog$categoryArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$categoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    brand<T extends ActivityLog$brandArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$brandArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    note<T extends ActivityLog$noteArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$noteArgs<ExtArgs>>): Prisma__NoteClient<$Result.GetResult<Prisma.$NotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    devis<T extends ActivityLog$devisArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$devisArgs<ExtArgs>>): Prisma__DevisClient<$Result.GetResult<Prisma.$DevisPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    devisItem<T extends ActivityLog$devisItemArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$devisItemArgs<ExtArgs>>): Prisma__DevisItemClient<$Result.GetResult<Prisma.$DevisItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    task<T extends ActivityLog$taskArgs<ExtArgs> = {}>(args?: Subset<T, ActivityLog$taskArgs<ExtArgs>>): Prisma__TaskClient<$Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ActivityLog model
   */
  interface ActivityLogFieldRefs {
    readonly id: FieldRef<"ActivityLog", 'String'>
    readonly action: FieldRef<"ActivityLog", 'String'>
    readonly entityType: FieldRef<"ActivityLog", 'String'>
    readonly entityId: FieldRef<"ActivityLog", 'String'>
    readonly oldData: FieldRef<"ActivityLog", 'Json'>
    readonly newData: FieldRef<"ActivityLog", 'Json'>
    readonly userId: FieldRef<"ActivityLog", 'String'>
    readonly organisationId: FieldRef<"ActivityLog", 'String'>
    readonly createdByUserId: FieldRef<"ActivityLog", 'String'>
    readonly updatedByUserId: FieldRef<"ActivityLog", 'String'>
    readonly relatedUserId: FieldRef<"ActivityLog", 'String'>
    readonly accountId: FieldRef<"ActivityLog", 'String'>
    readonly sessionId: FieldRef<"ActivityLog", 'String'>
    readonly authenticatorId: FieldRef<"ActivityLog", 'String'>
    readonly invitationId: FieldRef<"ActivityLog", 'String'>
    readonly passwordResetTokenId: FieldRef<"ActivityLog", 'String'>
    readonly contactId: FieldRef<"ActivityLog", 'String'>
    readonly commentId: FieldRef<"ActivityLog", 'String'>
    readonly feedbackContactId: FieldRef<"ActivityLog", 'String'>
    readonly favoriteId: FieldRef<"ActivityLog", 'String'>
    readonly productId: FieldRef<"ActivityLog", 'String'>
    readonly stockId: FieldRef<"ActivityLog", 'String'>
    readonly categoryId: FieldRef<"ActivityLog", 'String'>
    readonly brandId: FieldRef<"ActivityLog", 'String'>
    readonly noteId: FieldRef<"ActivityLog", 'String'>
    readonly devisId: FieldRef<"ActivityLog", 'String'>
    readonly devisItemId: FieldRef<"ActivityLog", 'String'>
    readonly taskId: FieldRef<"ActivityLog", 'String'>
    readonly createdAt: FieldRef<"ActivityLog", 'DateTime'>
    readonly ipAddress: FieldRef<"ActivityLog", 'String'>
    readonly userAgent: FieldRef<"ActivityLog", 'String'>
    readonly actionDetails: FieldRef<"ActivityLog", 'String'>
    readonly entityName: FieldRef<"ActivityLog", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ActivityLog findUnique
   */
  export type ActivityLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which ActivityLog to fetch.
     */
    where: ActivityLogWhereUniqueInput
  }

  /**
   * ActivityLog findUniqueOrThrow
   */
  export type ActivityLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which ActivityLog to fetch.
     */
    where: ActivityLogWhereUniqueInput
  }

  /**
   * ActivityLog findFirst
   */
  export type ActivityLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which ActivityLog to fetch.
     */
    where?: ActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActivityLogs to fetch.
     */
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ActivityLogs.
     */
    cursor?: ActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActivityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ActivityLogs.
     */
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * ActivityLog findFirstOrThrow
   */
  export type ActivityLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which ActivityLog to fetch.
     */
    where?: ActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActivityLogs to fetch.
     */
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ActivityLogs.
     */
    cursor?: ActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActivityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ActivityLogs.
     */
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * ActivityLog findMany
   */
  export type ActivityLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which ActivityLogs to fetch.
     */
    where?: ActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActivityLogs to fetch.
     */
    orderBy?: ActivityLogOrderByWithRelationInput | ActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ActivityLogs.
     */
    cursor?: ActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActivityLogs.
     */
    skip?: number
    distinct?: ActivityLogScalarFieldEnum | ActivityLogScalarFieldEnum[]
  }

  /**
   * ActivityLog create
   */
  export type ActivityLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * The data needed to create a ActivityLog.
     */
    data: XOR<ActivityLogCreateInput, ActivityLogUncheckedCreateInput>
  }

  /**
   * ActivityLog createMany
   */
  export type ActivityLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ActivityLogs.
     */
    data: ActivityLogCreateManyInput | ActivityLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ActivityLog createManyAndReturn
   */
  export type ActivityLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * The data used to create many ActivityLogs.
     */
    data: ActivityLogCreateManyInput | ActivityLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ActivityLog update
   */
  export type ActivityLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * The data needed to update a ActivityLog.
     */
    data: XOR<ActivityLogUpdateInput, ActivityLogUncheckedUpdateInput>
    /**
     * Choose, which ActivityLog to update.
     */
    where: ActivityLogWhereUniqueInput
  }

  /**
   * ActivityLog updateMany
   */
  export type ActivityLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ActivityLogs.
     */
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyInput>
    /**
     * Filter which ActivityLogs to update
     */
    where?: ActivityLogWhereInput
    /**
     * Limit how many ActivityLogs to update.
     */
    limit?: number
  }

  /**
   * ActivityLog updateManyAndReturn
   */
  export type ActivityLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * The data used to update ActivityLogs.
     */
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyInput>
    /**
     * Filter which ActivityLogs to update
     */
    where?: ActivityLogWhereInput
    /**
     * Limit how many ActivityLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ActivityLog upsert
   */
  export type ActivityLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * The filter to search for the ActivityLog to update in case it exists.
     */
    where: ActivityLogWhereUniqueInput
    /**
     * In case the ActivityLog found by the `where` argument doesn't exist, create a new ActivityLog with this data.
     */
    create: XOR<ActivityLogCreateInput, ActivityLogUncheckedCreateInput>
    /**
     * In case the ActivityLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ActivityLogUpdateInput, ActivityLogUncheckedUpdateInput>
  }

  /**
   * ActivityLog delete
   */
  export type ActivityLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
    /**
     * Filter which ActivityLog to delete.
     */
    where: ActivityLogWhereUniqueInput
  }

  /**
   * ActivityLog deleteMany
   */
  export type ActivityLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ActivityLogs to delete
     */
    where?: ActivityLogWhereInput
    /**
     * Limit how many ActivityLogs to delete.
     */
    limit?: number
  }

  /**
   * ActivityLog.user
   */
  export type ActivityLog$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ActivityLog.organisation
   */
  export type ActivityLog$organisationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organisation
     */
    select?: OrganisationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organisation
     */
    omit?: OrganisationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganisationInclude<ExtArgs> | null
    where?: OrganisationWhereInput
  }

  /**
   * ActivityLog.createdBy
   */
  export type ActivityLog$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ActivityLog.updatedBy
   */
  export type ActivityLog$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ActivityLog.relatedUser
   */
  export type ActivityLog$relatedUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ActivityLog.account
   */
  export type ActivityLog$accountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
  }

  /**
   * ActivityLog.session
   */
  export type ActivityLog$sessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
  }

  /**
   * ActivityLog.authenticator
   */
  export type ActivityLog$authenticatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Authenticator
     */
    select?: AuthenticatorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Authenticator
     */
    omit?: AuthenticatorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuthenticatorInclude<ExtArgs> | null
    where?: AuthenticatorWhereInput
  }

  /**
   * ActivityLog.invitation
   */
  export type ActivityLog$invitationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    where?: InvitationWhereInput
  }

  /**
   * ActivityLog.passwordResetToken
   */
  export type ActivityLog$passwordResetTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetToken
     */
    select?: PasswordResetTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetToken
     */
    omit?: PasswordResetTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PasswordResetTokenInclude<ExtArgs> | null
    where?: PasswordResetTokenWhereInput
  }

  /**
   * ActivityLog.contact
   */
  export type ActivityLog$contactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Contact
     */
    select?: ContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Contact
     */
    omit?: ContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContactInclude<ExtArgs> | null
    where?: ContactWhereInput
  }

  /**
   * ActivityLog.comment
   */
  export type ActivityLog$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * ActivityLog.feedbackContact
   */
  export type ActivityLog$feedbackContactArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeedbackContact
     */
    select?: FeedbackContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeedbackContact
     */
    omit?: FeedbackContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeedbackContactInclude<ExtArgs> | null
    where?: FeedbackContactWhereInput
  }

  /**
   * ActivityLog.favorite
   */
  export type ActivityLog$favoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favorite
     */
    omit?: FavoriteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
  }

  /**
   * ActivityLog.product
   */
  export type ActivityLog$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * ActivityLog.stock
   */
  export type ActivityLog$stockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Stock
     */
    select?: StockSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Stock
     */
    omit?: StockOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockInclude<ExtArgs> | null
    where?: StockWhereInput
  }

  /**
   * ActivityLog.category
   */
  export type ActivityLog$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * ActivityLog.brand
   */
  export type ActivityLog$brandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
  }

  /**
   * ActivityLog.note
   */
  export type ActivityLog$noteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Note
     */
    select?: NoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Note
     */
    omit?: NoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NoteInclude<ExtArgs> | null
    where?: NoteWhereInput
  }

  /**
   * ActivityLog.devis
   */
  export type ActivityLog$devisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Devis
     */
    select?: DevisSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Devis
     */
    omit?: DevisOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisInclude<ExtArgs> | null
    where?: DevisWhereInput
  }

  /**
   * ActivityLog.devisItem
   */
  export type ActivityLog$devisItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DevisItem
     */
    select?: DevisItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DevisItem
     */
    omit?: DevisItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DevisItemInclude<ExtArgs> | null
    where?: DevisItemWhereInput
  }

  /**
   * ActivityLog.task
   */
  export type ActivityLog$taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task
     */
    select?: TaskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Task
     */
    omit?: TaskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TaskInclude<ExtArgs> | null
    where?: TaskWhereInput
  }

  /**
   * ActivityLog without action
   */
  export type ActivityLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActivityLog
     */
    select?: ActivityLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActivityLog
     */
    omit?: ActivityLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActivityLogInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    password: 'password',
    role: 'role',
    accessType: 'accessType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const OrganisationScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    logo: 'logo',
    ownerId: 'ownerId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    domain: 'domain',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type OrganisationScalarFieldEnum = (typeof OrganisationScalarFieldEnum)[keyof typeof OrganisationScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    id: 'id',
    identifier: 'identifier',
    token: 'token',
    expires: 'expires',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const AuthenticatorScalarFieldEnum: {
    id: 'id',
    credentialID: 'credentialID',
    userId: 'userId',
    providerAccountId: 'providerAccountId',
    credentialPublicKey: 'credentialPublicKey',
    counter: 'counter',
    credentialDeviceType: 'credentialDeviceType',
    credentialBackedUp: 'credentialBackedUp',
    transports: 'transports'
  };

  export type AuthenticatorScalarFieldEnum = (typeof AuthenticatorScalarFieldEnum)[keyof typeof AuthenticatorScalarFieldEnum]


  export const InvitationScalarFieldEnum: {
    id: 'id',
    email: 'email',
    organisationId: 'organisationId',
    role: 'role',
    accessType: 'accessType',
    invitedById: 'invitedById',
    invitedAt: 'invitedAt',
    acceptedAt: 'acceptedAt',
    token: 'token',
    tokenExpiresAt: 'tokenExpiresAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy'
  };

  export type InvitationScalarFieldEnum = (typeof InvitationScalarFieldEnum)[keyof typeof InvitationScalarFieldEnum]


  export const PasswordResetTokenScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    token: 'token',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type PasswordResetTokenScalarFieldEnum = (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]


  export const ContactScalarFieldEnum: {
    id: 'id',
    name: 'name',
    logo: 'logo',
    adresse: 'adresse',
    status_contact: 'status_contact',
    email: 'email',
    phone: 'phone',
    niveau: 'niveau',
    tags: 'tags',
    sector: 'sector',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type ContactScalarFieldEnum = (typeof ContactScalarFieldEnum)[keyof typeof ContactScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    id: 'id',
    content: 'content',
    createdAt: 'createdAt',
    contactId: 'contactId',
    updatedAt: 'updatedAt',
    createdByUserId: 'createdByUserId'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const FeedbackContactScalarFieldEnum: {
    id: 'id',
    message: 'message',
    contactId: 'contactId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdByUserId: 'createdByUserId'
  };

  export type FeedbackContactScalarFieldEnum = (typeof FeedbackContactScalarFieldEnum)[keyof typeof FeedbackContactScalarFieldEnum]


  export const FavoriteScalarFieldEnum: {
    id: 'id',
    contactId: 'contactId',
    organisationId: 'organisationId',
    createdByUserId: 'createdByUserId'
  };

  export type FavoriteScalarFieldEnum = (typeof FavoriteScalarFieldEnum)[keyof typeof FavoriteScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    price: 'price',
    images: 'images',
    actions: 'actions',
    organisationId: 'organisationId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    brandId: 'brandId',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const StockScalarFieldEnum: {
    id: 'id',
    quantity: 'quantity',
    productId: 'productId',
    organisationId: 'organisationId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type StockScalarFieldEnum = (typeof StockScalarFieldEnum)[keyof typeof StockScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    organisationId: 'organisationId',
    logo: 'logo',
    parentId: 'parentId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const BrandScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    organisationId: 'organisationId',
    logo: 'logo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type BrandScalarFieldEnum = (typeof BrandScalarFieldEnum)[keyof typeof BrandScalarFieldEnum]


  export const NoteScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    color: 'color',
    isPinned: 'isPinned',
    lastModified: 'lastModified',
    userId: 'userId',
    contactId: 'contactId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type NoteScalarFieldEnum = (typeof NoteScalarFieldEnum)[keyof typeof NoteScalarFieldEnum]


  export const DevisScalarFieldEnum: {
    id: 'id',
    devisNumber: 'devisNumber',
    taxType: 'taxType',
    status: 'status',
    totalAmount: 'totalAmount',
    taxAmount: 'taxAmount',
    totalWithTax: 'totalWithTax',
    notes: 'notes',
    pdfUrl: 'pdfUrl',
    creationDate: 'creationDate',
    lastModified: 'lastModified',
    archivedDate: 'archivedDate',
    dueDate: 'dueDate',
    organisationId: 'organisationId',
    contactId: 'contactId',
    createdById: 'createdById',
    isArchived: 'isArchived',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type DevisScalarFieldEnum = (typeof DevisScalarFieldEnum)[keyof typeof DevisScalarFieldEnum]


  export const DevisItemScalarFieldEnum: {
    id: 'id',
    description: 'description',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    taxRate: 'taxRate',
    taxAmount: 'taxAmount',
    totalPrice: 'totalPrice',
    totalWithTax: 'totalWithTax',
    creationDate: 'creationDate',
    lastModified: 'lastModified',
    devisId: 'devisId',
    productId: 'productId',
    createdByUserId: 'createdByUserId'
  };

  export type DevisItemScalarFieldEnum = (typeof DevisItemScalarFieldEnum)[keyof typeof DevisItemScalarFieldEnum]


  export const TaskScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    type: 'type',
    status: 'status',
    priority: 'priority',
    assigneeId: 'assigneeId',
    dueDate: 'dueDate',
    organisationId: 'organisationId',
    createdById: 'createdById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isArchived: 'isArchived',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId'
  };

  export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]


  export const ActivityLogScalarFieldEnum: {
    id: 'id',
    action: 'action',
    entityType: 'entityType',
    entityId: 'entityId',
    oldData: 'oldData',
    newData: 'newData',
    userId: 'userId',
    organisationId: 'organisationId',
    createdByUserId: 'createdByUserId',
    updatedByUserId: 'updatedByUserId',
    relatedUserId: 'relatedUserId',
    accountId: 'accountId',
    sessionId: 'sessionId',
    authenticatorId: 'authenticatorId',
    invitationId: 'invitationId',
    passwordResetTokenId: 'passwordResetTokenId',
    contactId: 'contactId',
    commentId: 'commentId',
    feedbackContactId: 'feedbackContactId',
    favoriteId: 'favoriteId',
    productId: 'productId',
    stockId: 'stockId',
    categoryId: 'categoryId',
    brandId: 'brandId',
    noteId: 'noteId',
    devisId: 'devisId',
    devisItemId: 'devisItemId',
    taskId: 'taskId',
    createdAt: 'createdAt',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    actionDetails: 'actionDetails',
    entityName: 'entityName'
  };

  export type ActivityLogScalarFieldEnum = (typeof ActivityLogScalarFieldEnum)[keyof typeof ActivityLogScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'AccessType'
   */
  export type EnumAccessTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccessType'>
    


  /**
   * Reference to a field of type 'AccessType[]'
   */
  export type ListEnumAccessTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccessType[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Domain'
   */
  export type EnumDomainFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Domain'>
    


  /**
   * Reference to a field of type 'Domain[]'
   */
  export type ListEnumDomainFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Domain[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Status_Contact'
   */
  export type EnumStatus_ContactFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status_Contact'>
    


  /**
   * Reference to a field of type 'Status_Contact[]'
   */
  export type ListEnumStatus_ContactFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status_Contact[]'>
    


  /**
   * Reference to a field of type 'Niveau'
   */
  export type EnumNiveauFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Niveau'>
    


  /**
   * Reference to a field of type 'Niveau[]'
   */
  export type ListEnumNiveauFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Niveau[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'TaxType'
   */
  export type EnumTaxTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaxType'>
    


  /**
   * Reference to a field of type 'TaxType[]'
   */
  export type ListEnumTaxTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaxType[]'>
    


  /**
   * Reference to a field of type 'DevisStatus'
   */
  export type EnumDevisStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DevisStatus'>
    


  /**
   * Reference to a field of type 'DevisStatus[]'
   */
  export type ListEnumDevisStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DevisStatus[]'>
    


  /**
   * Reference to a field of type 'TaskType'
   */
  export type EnumTaskTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskType'>
    


  /**
   * Reference to a field of type 'TaskType[]'
   */
  export type ListEnumTaskTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskType[]'>
    


  /**
   * Reference to a field of type 'TaskStatus'
   */
  export type EnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus'>
    


  /**
   * Reference to a field of type 'TaskStatus[]'
   */
  export type ListEnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus[]'>
    


  /**
   * Reference to a field of type 'TaskPriority'
   */
  export type EnumTaskPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskPriority'>
    


  /**
   * Reference to a field of type 'TaskPriority[]'
   */
  export type ListEnumTaskPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskPriority[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    email?: StringFilter<"User"> | string
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    accessType?: EnumAccessTypeFilter<"User"> | $Enums.AccessType
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isArchived?: BoolFilter<"User"> | boolean
    archivedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    archivedBy?: StringNullableFilter<"User"> | string | null
    createdByUserId?: StringNullableFilter<"User"> | string | null
    updatedByUserId?: StringNullableFilter<"User"> | string | null
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    authenticators?: AuthenticatorListRelationFilter
    organisations?: OrganisationListRelationFilter
    ownedOrganisations?: OrganisationListRelationFilter
    invitations?: InvitationListRelationFilter
    passwordResetTokens?: PasswordResetTokenListRelationFilter
    FeedbackContact?: FeedbackContactListRelationFilter
    notes?: NoteListRelationFilter
    collaboratedNotes?: NoteListRelationFilter
    TaskAssignee?: TaskListRelationFilter
    TaskCreator?: TaskListRelationFilter
    CreatedActivities?: ActivityLogListRelationFilter
    UpdatedActivities?: ActivityLogListRelationFilter
    RelatedActivities?: ActivityLogListRelationFilter
    AllActivityLogs?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User?: UserListRelationFilter
    Users?: UserListRelationFilter
    Favorite?: FavoriteListRelationFilter
    Organisation?: OrganisationListRelationFilter
    Organisations?: OrganisationListRelationFilter
    Contact?: ContactListRelationFilter
    Contacts?: ContactListRelationFilter
    Comment?: CommentListRelationFilter
    Category?: CategoryListRelationFilter
    Categorys?: CategoryListRelationFilter
    Product?: ProductListRelationFilter
    Products?: ProductListRelationFilter
    Stock?: StockListRelationFilter
    Stocks?: StockListRelationFilter
    Brand?: BrandListRelationFilter
    Brands?: BrandListRelationFilter
    Note?: NoteListRelationFilter
    Notes?: NoteListRelationFilter
    Deviss?: DevisListRelationFilter
    updatedDeviss?: DevisListRelationFilter
    FeedbackContacts?: FeedbackContactListRelationFilter
    Task?: TaskListRelationFilter
    Tasks?: TaskListRelationFilter
    DevisItems?: DevisItemListRelationFilter
    Devis?: DevisListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    role?: SortOrder
    accessType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    accounts?: AccountOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    authenticators?: AuthenticatorOrderByRelationAggregateInput
    organisations?: OrganisationOrderByRelationAggregateInput
    ownedOrganisations?: OrganisationOrderByRelationAggregateInput
    invitations?: InvitationOrderByRelationAggregateInput
    passwordResetTokens?: PasswordResetTokenOrderByRelationAggregateInput
    FeedbackContact?: FeedbackContactOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    collaboratedNotes?: NoteOrderByRelationAggregateInput
    TaskAssignee?: TaskOrderByRelationAggregateInput
    TaskCreator?: TaskOrderByRelationAggregateInput
    CreatedActivities?: ActivityLogOrderByRelationAggregateInput
    UpdatedActivities?: ActivityLogOrderByRelationAggregateInput
    RelatedActivities?: ActivityLogOrderByRelationAggregateInput
    AllActivityLogs?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
    User?: UserOrderByRelationAggregateInput
    Users?: UserOrderByRelationAggregateInput
    Favorite?: FavoriteOrderByRelationAggregateInput
    Organisation?: OrganisationOrderByRelationAggregateInput
    Organisations?: OrganisationOrderByRelationAggregateInput
    Contact?: ContactOrderByRelationAggregateInput
    Contacts?: ContactOrderByRelationAggregateInput
    Comment?: CommentOrderByRelationAggregateInput
    Category?: CategoryOrderByRelationAggregateInput
    Categorys?: CategoryOrderByRelationAggregateInput
    Product?: ProductOrderByRelationAggregateInput
    Products?: ProductOrderByRelationAggregateInput
    Stock?: StockOrderByRelationAggregateInput
    Stocks?: StockOrderByRelationAggregateInput
    Brand?: BrandOrderByRelationAggregateInput
    Brands?: BrandOrderByRelationAggregateInput
    Note?: NoteOrderByRelationAggregateInput
    Notes?: NoteOrderByRelationAggregateInput
    Deviss?: DevisOrderByRelationAggregateInput
    updatedDeviss?: DevisOrderByRelationAggregateInput
    FeedbackContacts?: FeedbackContactOrderByRelationAggregateInput
    Task?: TaskOrderByRelationAggregateInput
    Tasks?: TaskOrderByRelationAggregateInput
    DevisItems?: DevisItemOrderByRelationAggregateInput
    Devis?: DevisOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    accessType?: EnumAccessTypeFilter<"User"> | $Enums.AccessType
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isArchived?: BoolFilter<"User"> | boolean
    archivedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    archivedBy?: StringNullableFilter<"User"> | string | null
    createdByUserId?: StringNullableFilter<"User"> | string | null
    updatedByUserId?: StringNullableFilter<"User"> | string | null
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    authenticators?: AuthenticatorListRelationFilter
    organisations?: OrganisationListRelationFilter
    ownedOrganisations?: OrganisationListRelationFilter
    invitations?: InvitationListRelationFilter
    passwordResetTokens?: PasswordResetTokenListRelationFilter
    FeedbackContact?: FeedbackContactListRelationFilter
    notes?: NoteListRelationFilter
    collaboratedNotes?: NoteListRelationFilter
    TaskAssignee?: TaskListRelationFilter
    TaskCreator?: TaskListRelationFilter
    CreatedActivities?: ActivityLogListRelationFilter
    UpdatedActivities?: ActivityLogListRelationFilter
    RelatedActivities?: ActivityLogListRelationFilter
    AllActivityLogs?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    User?: UserListRelationFilter
    Users?: UserListRelationFilter
    Favorite?: FavoriteListRelationFilter
    Organisation?: OrganisationListRelationFilter
    Organisations?: OrganisationListRelationFilter
    Contact?: ContactListRelationFilter
    Contacts?: ContactListRelationFilter
    Comment?: CommentListRelationFilter
    Category?: CategoryListRelationFilter
    Categorys?: CategoryListRelationFilter
    Product?: ProductListRelationFilter
    Products?: ProductListRelationFilter
    Stock?: StockListRelationFilter
    Stocks?: StockListRelationFilter
    Brand?: BrandListRelationFilter
    Brands?: BrandListRelationFilter
    Note?: NoteListRelationFilter
    Notes?: NoteListRelationFilter
    Deviss?: DevisListRelationFilter
    updatedDeviss?: DevisListRelationFilter
    FeedbackContacts?: FeedbackContactListRelationFilter
    Task?: TaskListRelationFilter
    Tasks?: TaskListRelationFilter
    DevisItems?: DevisItemListRelationFilter
    Devis?: DevisListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    role?: SortOrder
    accessType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringWithAggregatesFilter<"User"> | string
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    password?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    accessType?: EnumAccessTypeWithAggregatesFilter<"User"> | $Enums.AccessType
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"User"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"User"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type OrganisationWhereInput = {
    AND?: OrganisationWhereInput | OrganisationWhereInput[]
    OR?: OrganisationWhereInput[]
    NOT?: OrganisationWhereInput | OrganisationWhereInput[]
    id?: StringFilter<"Organisation"> | string
    name?: StringFilter<"Organisation"> | string
    slug?: StringFilter<"Organisation"> | string
    logo?: StringNullableFilter<"Organisation"> | string | null
    ownerId?: StringFilter<"Organisation"> | string
    createdAt?: DateTimeFilter<"Organisation"> | Date | string
    updatedAt?: DateTimeFilter<"Organisation"> | Date | string
    isArchived?: BoolFilter<"Organisation"> | boolean
    archivedAt?: DateTimeNullableFilter<"Organisation"> | Date | string | null
    archivedBy?: StringNullableFilter<"Organisation"> | string | null
    domain?: EnumDomainFilter<"Organisation"> | $Enums.Domain
    createdByUserId?: StringNullableFilter<"Organisation"> | string | null
    updatedByUserId?: StringNullableFilter<"Organisation"> | string | null
    owner?: XOR<UserScalarRelationFilter, UserWhereInput>
    members?: UserListRelationFilter
    invitations?: InvitationListRelationFilter
    Product?: ProductListRelationFilter
    Stock?: StockListRelationFilter
    Contact?: ContactListRelationFilter
    Category?: CategoryListRelationFilter
    Brand?: BrandListRelationFilter
    notes?: NoteListRelationFilter
    Devis?: DevisListRelationFilter
    Task?: TaskListRelationFilter
    Favorite?: FavoriteListRelationFilter
    ActivityLogs?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type OrganisationOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    domain?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    owner?: UserOrderByWithRelationInput
    members?: UserOrderByRelationAggregateInput
    invitations?: InvitationOrderByRelationAggregateInput
    Product?: ProductOrderByRelationAggregateInput
    Stock?: StockOrderByRelationAggregateInput
    Contact?: ContactOrderByRelationAggregateInput
    Category?: CategoryOrderByRelationAggregateInput
    Brand?: BrandOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    Devis?: DevisOrderByRelationAggregateInput
    Task?: TaskOrderByRelationAggregateInput
    Favorite?: FavoriteOrderByRelationAggregateInput
    ActivityLogs?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type OrganisationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    slug?: string
    AND?: OrganisationWhereInput | OrganisationWhereInput[]
    OR?: OrganisationWhereInput[]
    NOT?: OrganisationWhereInput | OrganisationWhereInput[]
    logo?: StringNullableFilter<"Organisation"> | string | null
    ownerId?: StringFilter<"Organisation"> | string
    createdAt?: DateTimeFilter<"Organisation"> | Date | string
    updatedAt?: DateTimeFilter<"Organisation"> | Date | string
    isArchived?: BoolFilter<"Organisation"> | boolean
    archivedAt?: DateTimeNullableFilter<"Organisation"> | Date | string | null
    archivedBy?: StringNullableFilter<"Organisation"> | string | null
    domain?: EnumDomainFilter<"Organisation"> | $Enums.Domain
    createdByUserId?: StringNullableFilter<"Organisation"> | string | null
    updatedByUserId?: StringNullableFilter<"Organisation"> | string | null
    owner?: XOR<UserScalarRelationFilter, UserWhereInput>
    members?: UserListRelationFilter
    invitations?: InvitationListRelationFilter
    Product?: ProductListRelationFilter
    Stock?: StockListRelationFilter
    Contact?: ContactListRelationFilter
    Category?: CategoryListRelationFilter
    Brand?: BrandListRelationFilter
    notes?: NoteListRelationFilter
    Devis?: DevisListRelationFilter
    Task?: TaskListRelationFilter
    Favorite?: FavoriteListRelationFilter
    ActivityLogs?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "name" | "slug">

  export type OrganisationOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    domain?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: OrganisationCountOrderByAggregateInput
    _max?: OrganisationMaxOrderByAggregateInput
    _min?: OrganisationMinOrderByAggregateInput
  }

  export type OrganisationScalarWhereWithAggregatesInput = {
    AND?: OrganisationScalarWhereWithAggregatesInput | OrganisationScalarWhereWithAggregatesInput[]
    OR?: OrganisationScalarWhereWithAggregatesInput[]
    NOT?: OrganisationScalarWhereWithAggregatesInput | OrganisationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Organisation"> | string
    name?: StringWithAggregatesFilter<"Organisation"> | string
    slug?: StringWithAggregatesFilter<"Organisation"> | string
    logo?: StringNullableWithAggregatesFilter<"Organisation"> | string | null
    ownerId?: StringWithAggregatesFilter<"Organisation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Organisation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Organisation"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Organisation"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Organisation"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Organisation"> | string | null
    domain?: EnumDomainWithAggregatesFilter<"Organisation"> | $Enums.Domain
    createdByUserId?: StringNullableWithAggregatesFilter<"Organisation"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Organisation"> | string | null
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    id?: StringFilter<"VerificationToken"> | string
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
    isArchived?: BoolFilter<"VerificationToken"> | boolean
    archivedAt?: DateTimeNullableFilter<"VerificationToken"> | Date | string | null
  }

  export type VerificationTokenOrderByWithRelationInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
    isArchived?: BoolFilter<"VerificationToken"> | boolean
    archivedAt?: DateTimeNullableFilter<"VerificationToken"> | Date | string | null
  }, "id" | "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VerificationToken"> | string
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"VerificationToken"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"VerificationToken"> | Date | string | null
  }

  export type AuthenticatorWhereInput = {
    AND?: AuthenticatorWhereInput | AuthenticatorWhereInput[]
    OR?: AuthenticatorWhereInput[]
    NOT?: AuthenticatorWhereInput | AuthenticatorWhereInput[]
    id?: StringFilter<"Authenticator"> | string
    credentialID?: StringFilter<"Authenticator"> | string
    userId?: StringFilter<"Authenticator"> | string
    providerAccountId?: StringFilter<"Authenticator"> | string
    credentialPublicKey?: StringFilter<"Authenticator"> | string
    counter?: IntFilter<"Authenticator"> | number
    credentialDeviceType?: StringFilter<"Authenticator"> | string
    credentialBackedUp?: BoolFilter<"Authenticator"> | boolean
    transports?: StringNullableFilter<"Authenticator"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }

  export type AuthenticatorOrderByWithRelationInput = {
    id?: SortOrder
    credentialID?: SortOrder
    userId?: SortOrder
    providerAccountId?: SortOrder
    credentialPublicKey?: SortOrder
    counter?: SortOrder
    credentialDeviceType?: SortOrder
    credentialBackedUp?: SortOrder
    transports?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
  }

  export type AuthenticatorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    credentialID?: string
    AND?: AuthenticatorWhereInput | AuthenticatorWhereInput[]
    OR?: AuthenticatorWhereInput[]
    NOT?: AuthenticatorWhereInput | AuthenticatorWhereInput[]
    userId?: StringFilter<"Authenticator"> | string
    providerAccountId?: StringFilter<"Authenticator"> | string
    credentialPublicKey?: StringFilter<"Authenticator"> | string
    counter?: IntFilter<"Authenticator"> | number
    credentialDeviceType?: StringFilter<"Authenticator"> | string
    credentialBackedUp?: BoolFilter<"Authenticator"> | boolean
    transports?: StringNullableFilter<"Authenticator"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }, "id" | "credentialID">

  export type AuthenticatorOrderByWithAggregationInput = {
    id?: SortOrder
    credentialID?: SortOrder
    userId?: SortOrder
    providerAccountId?: SortOrder
    credentialPublicKey?: SortOrder
    counter?: SortOrder
    credentialDeviceType?: SortOrder
    credentialBackedUp?: SortOrder
    transports?: SortOrderInput | SortOrder
    _count?: AuthenticatorCountOrderByAggregateInput
    _avg?: AuthenticatorAvgOrderByAggregateInput
    _max?: AuthenticatorMaxOrderByAggregateInput
    _min?: AuthenticatorMinOrderByAggregateInput
    _sum?: AuthenticatorSumOrderByAggregateInput
  }

  export type AuthenticatorScalarWhereWithAggregatesInput = {
    AND?: AuthenticatorScalarWhereWithAggregatesInput | AuthenticatorScalarWhereWithAggregatesInput[]
    OR?: AuthenticatorScalarWhereWithAggregatesInput[]
    NOT?: AuthenticatorScalarWhereWithAggregatesInput | AuthenticatorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Authenticator"> | string
    credentialID?: StringWithAggregatesFilter<"Authenticator"> | string
    userId?: StringWithAggregatesFilter<"Authenticator"> | string
    providerAccountId?: StringWithAggregatesFilter<"Authenticator"> | string
    credentialPublicKey?: StringWithAggregatesFilter<"Authenticator"> | string
    counter?: IntWithAggregatesFilter<"Authenticator"> | number
    credentialDeviceType?: StringWithAggregatesFilter<"Authenticator"> | string
    credentialBackedUp?: BoolWithAggregatesFilter<"Authenticator"> | boolean
    transports?: StringNullableWithAggregatesFilter<"Authenticator"> | string | null
  }

  export type InvitationWhereInput = {
    AND?: InvitationWhereInput | InvitationWhereInput[]
    OR?: InvitationWhereInput[]
    NOT?: InvitationWhereInput | InvitationWhereInput[]
    id?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    organisationId?: StringFilter<"Invitation"> | string
    role?: EnumRoleFilter<"Invitation"> | $Enums.Role
    accessType?: EnumAccessTypeFilter<"Invitation"> | $Enums.AccessType
    invitedById?: StringFilter<"Invitation"> | string
    invitedAt?: DateTimeFilter<"Invitation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"Invitation"> | Date | string | null
    token?: StringFilter<"Invitation"> | string
    tokenExpiresAt?: DateTimeFilter<"Invitation"> | Date | string
    isArchived?: BoolFilter<"Invitation"> | boolean
    archivedAt?: DateTimeNullableFilter<"Invitation"> | Date | string | null
    archivedBy?: StringNullableFilter<"Invitation"> | string | null
    invitedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }

  export type InvitationOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    organisationId?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    invitedById?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    token?: SortOrder
    tokenExpiresAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    invitedBy?: UserOrderByWithRelationInput
    organisation?: OrganisationOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
  }

  export type InvitationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    email_organisationId?: InvitationEmailOrganisationIdCompoundUniqueInput
    AND?: InvitationWhereInput | InvitationWhereInput[]
    OR?: InvitationWhereInput[]
    NOT?: InvitationWhereInput | InvitationWhereInput[]
    email?: StringFilter<"Invitation"> | string
    organisationId?: StringFilter<"Invitation"> | string
    role?: EnumRoleFilter<"Invitation"> | $Enums.Role
    accessType?: EnumAccessTypeFilter<"Invitation"> | $Enums.AccessType
    invitedById?: StringFilter<"Invitation"> | string
    invitedAt?: DateTimeFilter<"Invitation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"Invitation"> | Date | string | null
    tokenExpiresAt?: DateTimeFilter<"Invitation"> | Date | string
    isArchived?: BoolFilter<"Invitation"> | boolean
    archivedAt?: DateTimeNullableFilter<"Invitation"> | Date | string | null
    archivedBy?: StringNullableFilter<"Invitation"> | string | null
    invitedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }, "id" | "token" | "email_organisationId">

  export type InvitationOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    organisationId?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    invitedById?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    token?: SortOrder
    tokenExpiresAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    _count?: InvitationCountOrderByAggregateInput
    _max?: InvitationMaxOrderByAggregateInput
    _min?: InvitationMinOrderByAggregateInput
  }

  export type InvitationScalarWhereWithAggregatesInput = {
    AND?: InvitationScalarWhereWithAggregatesInput | InvitationScalarWhereWithAggregatesInput[]
    OR?: InvitationScalarWhereWithAggregatesInput[]
    NOT?: InvitationScalarWhereWithAggregatesInput | InvitationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invitation"> | string
    email?: StringWithAggregatesFilter<"Invitation"> | string
    organisationId?: StringWithAggregatesFilter<"Invitation"> | string
    role?: EnumRoleWithAggregatesFilter<"Invitation"> | $Enums.Role
    accessType?: EnumAccessTypeWithAggregatesFilter<"Invitation"> | $Enums.AccessType
    invitedById?: StringWithAggregatesFilter<"Invitation"> | string
    invitedAt?: DateTimeWithAggregatesFilter<"Invitation"> | Date | string
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"Invitation"> | Date | string | null
    token?: StringWithAggregatesFilter<"Invitation"> | string
    tokenExpiresAt?: DateTimeWithAggregatesFilter<"Invitation"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Invitation"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Invitation"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Invitation"> | string | null
  }

  export type PasswordResetTokenWhereInput = {
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    id?: StringFilter<"PasswordResetToken"> | string
    userId?: StringFilter<"PasswordResetToken"> | string
    token?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }

  export type PasswordResetTokenOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
  }

  export type PasswordResetTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    OR?: PasswordResetTokenWhereInput[]
    NOT?: PasswordResetTokenWhereInput | PasswordResetTokenWhereInput[]
    userId?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
  }, "id" | "token">

  export type PasswordResetTokenOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: PasswordResetTokenCountOrderByAggregateInput
    _max?: PasswordResetTokenMaxOrderByAggregateInput
    _min?: PasswordResetTokenMinOrderByAggregateInput
  }

  export type PasswordResetTokenScalarWhereWithAggregatesInput = {
    AND?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    OR?: PasswordResetTokenScalarWhereWithAggregatesInput[]
    NOT?: PasswordResetTokenScalarWhereWithAggregatesInput | PasswordResetTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    userId?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    token?: StringWithAggregatesFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"PasswordResetToken"> | Date | string
  }

  export type ContactWhereInput = {
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    id?: StringFilter<"Contact"> | string
    name?: StringFilter<"Contact"> | string
    logo?: StringNullableFilter<"Contact"> | string | null
    adresse?: StringNullableFilter<"Contact"> | string | null
    status_contact?: EnumStatus_ContactFilter<"Contact"> | $Enums.Status_Contact
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    niveau?: EnumNiveauFilter<"Contact"> | $Enums.Niveau
    tags?: StringNullableFilter<"Contact"> | string | null
    sector?: StringNullableFilter<"Contact"> | string | null
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    isArchived?: BoolFilter<"Contact"> | boolean
    archivedAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    archivedBy?: StringNullableFilter<"Contact"> | string | null
    createdByUserId?: StringNullableFilter<"Contact"> | string | null
    updatedByUserId?: StringNullableFilter<"Contact"> | string | null
    organisations?: OrganisationListRelationFilter
    comments?: CommentListRelationFilter
    FeedbackContact?: FeedbackContactListRelationFilter
    notes?: NoteListRelationFilter
    Devis?: DevisListRelationFilter
    Favorite?: FavoriteListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ContactOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    status_contact?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    niveau?: SortOrder
    tags?: SortOrderInput | SortOrder
    sector?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    organisations?: OrganisationOrderByRelationAggregateInput
    comments?: CommentOrderByRelationAggregateInput
    FeedbackContact?: FeedbackContactOrderByRelationAggregateInput
    notes?: NoteOrderByRelationAggregateInput
    Devis?: DevisOrderByRelationAggregateInput
    Favorite?: FavoriteOrderByRelationAggregateInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type ContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: ContactWhereInput | ContactWhereInput[]
    OR?: ContactWhereInput[]
    NOT?: ContactWhereInput | ContactWhereInput[]
    name?: StringFilter<"Contact"> | string
    logo?: StringNullableFilter<"Contact"> | string | null
    adresse?: StringNullableFilter<"Contact"> | string | null
    status_contact?: EnumStatus_ContactFilter<"Contact"> | $Enums.Status_Contact
    phone?: StringNullableFilter<"Contact"> | string | null
    niveau?: EnumNiveauFilter<"Contact"> | $Enums.Niveau
    tags?: StringNullableFilter<"Contact"> | string | null
    sector?: StringNullableFilter<"Contact"> | string | null
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    isArchived?: BoolFilter<"Contact"> | boolean
    archivedAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    archivedBy?: StringNullableFilter<"Contact"> | string | null
    createdByUserId?: StringNullableFilter<"Contact"> | string | null
    updatedByUserId?: StringNullableFilter<"Contact"> | string | null
    organisations?: OrganisationListRelationFilter
    comments?: CommentListRelationFilter
    FeedbackContact?: FeedbackContactListRelationFilter
    notes?: NoteListRelationFilter
    Devis?: DevisListRelationFilter
    Favorite?: FavoriteListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "email">

  export type ContactOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrderInput | SortOrder
    adresse?: SortOrderInput | SortOrder
    status_contact?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    niveau?: SortOrder
    tags?: SortOrderInput | SortOrder
    sector?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: ContactCountOrderByAggregateInput
    _max?: ContactMaxOrderByAggregateInput
    _min?: ContactMinOrderByAggregateInput
  }

  export type ContactScalarWhereWithAggregatesInput = {
    AND?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    OR?: ContactScalarWhereWithAggregatesInput[]
    NOT?: ContactScalarWhereWithAggregatesInput | ContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Contact"> | string
    name?: StringWithAggregatesFilter<"Contact"> | string
    logo?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    adresse?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    status_contact?: EnumStatus_ContactWithAggregatesFilter<"Contact"> | $Enums.Status_Contact
    email?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    niveau?: EnumNiveauWithAggregatesFilter<"Contact"> | $Enums.Niveau
    tags?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    sector?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Contact"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Contact"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Contact"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Contact"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Contact"> | string | null
  }

  export type CommentWhereInput = {
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    id?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    contactId?: StringFilter<"Comment"> | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    createdByUserId?: StringNullableFilter<"Comment"> | string | null
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type CommentOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    contactId?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    contact?: ContactOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
  }

  export type CommentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    content?: StringFilter<"Comment"> | string
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    contactId?: StringFilter<"Comment"> | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    createdByUserId?: StringNullableFilter<"Comment"> | string | null
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type CommentOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    contactId?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    _count?: CommentCountOrderByAggregateInput
    _max?: CommentMaxOrderByAggregateInput
    _min?: CommentMinOrderByAggregateInput
  }

  export type CommentScalarWhereWithAggregatesInput = {
    AND?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    OR?: CommentScalarWhereWithAggregatesInput[]
    NOT?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Comment"> | string
    content?: StringWithAggregatesFilter<"Comment"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    contactId?: StringWithAggregatesFilter<"Comment"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    createdByUserId?: StringNullableWithAggregatesFilter<"Comment"> | string | null
  }

  export type FeedbackContactWhereInput = {
    AND?: FeedbackContactWhereInput | FeedbackContactWhereInput[]
    OR?: FeedbackContactWhereInput[]
    NOT?: FeedbackContactWhereInput | FeedbackContactWhereInput[]
    id?: StringFilter<"FeedbackContact"> | string
    message?: StringFilter<"FeedbackContact"> | string
    contactId?: StringFilter<"FeedbackContact"> | string
    userId?: StringFilter<"FeedbackContact"> | string
    createdAt?: DateTimeFilter<"FeedbackContact"> | Date | string
    updatedAt?: DateTimeFilter<"FeedbackContact"> | Date | string
    createdByUserId?: StringNullableFilter<"FeedbackContact"> | string | null
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type FeedbackContactOrderByWithRelationInput = {
    id?: SortOrder
    message?: SortOrder
    contactId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    contact?: ContactOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
  }

  export type FeedbackContactWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FeedbackContactWhereInput | FeedbackContactWhereInput[]
    OR?: FeedbackContactWhereInput[]
    NOT?: FeedbackContactWhereInput | FeedbackContactWhereInput[]
    message?: StringFilter<"FeedbackContact"> | string
    contactId?: StringFilter<"FeedbackContact"> | string
    userId?: StringFilter<"FeedbackContact"> | string
    createdAt?: DateTimeFilter<"FeedbackContact"> | Date | string
    updatedAt?: DateTimeFilter<"FeedbackContact"> | Date | string
    createdByUserId?: StringNullableFilter<"FeedbackContact"> | string | null
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type FeedbackContactOrderByWithAggregationInput = {
    id?: SortOrder
    message?: SortOrder
    contactId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    _count?: FeedbackContactCountOrderByAggregateInput
    _max?: FeedbackContactMaxOrderByAggregateInput
    _min?: FeedbackContactMinOrderByAggregateInput
  }

  export type FeedbackContactScalarWhereWithAggregatesInput = {
    AND?: FeedbackContactScalarWhereWithAggregatesInput | FeedbackContactScalarWhereWithAggregatesInput[]
    OR?: FeedbackContactScalarWhereWithAggregatesInput[]
    NOT?: FeedbackContactScalarWhereWithAggregatesInput | FeedbackContactScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FeedbackContact"> | string
    message?: StringWithAggregatesFilter<"FeedbackContact"> | string
    contactId?: StringWithAggregatesFilter<"FeedbackContact"> | string
    userId?: StringWithAggregatesFilter<"FeedbackContact"> | string
    createdAt?: DateTimeWithAggregatesFilter<"FeedbackContact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FeedbackContact"> | Date | string
    createdByUserId?: StringNullableWithAggregatesFilter<"FeedbackContact"> | string | null
  }

  export type FavoriteWhereInput = {
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    id?: StringFilter<"Favorite"> | string
    contactId?: StringFilter<"Favorite"> | string
    organisationId?: StringFilter<"Favorite"> | string
    createdByUserId?: StringNullableFilter<"Favorite"> | string | null
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type FavoriteOrderByWithRelationInput = {
    id?: SortOrder
    contactId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    contact?: ContactOrderByWithRelationInput
    organisation?: OrganisationOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
  }

  export type FavoriteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    contactId_organisationId?: FavoriteContactIdOrganisationIdCompoundUniqueInput
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    contactId?: StringFilter<"Favorite"> | string
    organisationId?: StringFilter<"Favorite"> | string
    createdByUserId?: StringNullableFilter<"Favorite"> | string | null
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "contactId_organisationId">

  export type FavoriteOrderByWithAggregationInput = {
    id?: SortOrder
    contactId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    _count?: FavoriteCountOrderByAggregateInput
    _max?: FavoriteMaxOrderByAggregateInput
    _min?: FavoriteMinOrderByAggregateInput
  }

  export type FavoriteScalarWhereWithAggregatesInput = {
    AND?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    OR?: FavoriteScalarWhereWithAggregatesInput[]
    NOT?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Favorite"> | string
    contactId?: StringWithAggregatesFilter<"Favorite"> | string
    organisationId?: StringWithAggregatesFilter<"Favorite"> | string
    createdByUserId?: StringNullableWithAggregatesFilter<"Favorite"> | string | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    price?: FloatFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    actions?: StringNullableFilter<"Product"> | string | null
    organisationId?: StringFilter<"Product"> | string
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    isArchived?: BoolFilter<"Product"> | boolean
    archivedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    archivedBy?: StringNullableFilter<"Product"> | string | null
    brandId?: StringNullableFilter<"Product"> | string | null
    createdByUserId?: StringNullableFilter<"Product"> | string | null
    updatedByUserId?: StringNullableFilter<"Product"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    Stock?: StockListRelationFilter
    categories?: CategoryListRelationFilter
    DevisItem?: DevisItemListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    images?: SortOrder
    actions?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    brandId?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    organisation?: OrganisationOrderByWithRelationInput
    brand?: BrandOrderByWithRelationInput
    Stock?: StockOrderByRelationAggregateInput
    categories?: CategoryOrderByRelationAggregateInput
    DevisItem?: DevisItemOrderByRelationAggregateInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    name?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    price?: FloatFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    actions?: StringNullableFilter<"Product"> | string | null
    organisationId?: StringFilter<"Product"> | string
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    isArchived?: BoolFilter<"Product"> | boolean
    archivedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    archivedBy?: StringNullableFilter<"Product"> | string | null
    brandId?: StringNullableFilter<"Product"> | string | null
    createdByUserId?: StringNullableFilter<"Product"> | string | null
    updatedByUserId?: StringNullableFilter<"Product"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    Stock?: StockListRelationFilter
    categories?: CategoryListRelationFilter
    DevisItem?: DevisItemListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    images?: SortOrder
    actions?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    brandId?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    description?: StringWithAggregatesFilter<"Product"> | string
    price?: FloatWithAggregatesFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    actions?: StringNullableWithAggregatesFilter<"Product"> | string | null
    organisationId?: StringWithAggregatesFilter<"Product"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Product"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
    brandId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type StockWhereInput = {
    AND?: StockWhereInput | StockWhereInput[]
    OR?: StockWhereInput[]
    NOT?: StockWhereInput | StockWhereInput[]
    id?: StringFilter<"Stock"> | string
    quantity?: IntFilter<"Stock"> | number
    productId?: StringFilter<"Stock"> | string
    organisationId?: StringFilter<"Stock"> | string
    createdAt?: DateTimeFilter<"Stock"> | Date | string
    updatedAt?: DateTimeFilter<"Stock"> | Date | string
    isArchived?: BoolFilter<"Stock"> | boolean
    archivedAt?: DateTimeNullableFilter<"Stock"> | Date | string | null
    archivedBy?: StringNullableFilter<"Stock"> | string | null
    createdByUserId?: StringNullableFilter<"Stock"> | string | null
    updatedByUserId?: StringNullableFilter<"Stock"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type StockOrderByWithRelationInput = {
    id?: SortOrder
    quantity?: SortOrder
    productId?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    product?: ProductOrderByWithRelationInput
    organisation?: OrganisationOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type StockWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StockWhereInput | StockWhereInput[]
    OR?: StockWhereInput[]
    NOT?: StockWhereInput | StockWhereInput[]
    quantity?: IntFilter<"Stock"> | number
    productId?: StringFilter<"Stock"> | string
    organisationId?: StringFilter<"Stock"> | string
    createdAt?: DateTimeFilter<"Stock"> | Date | string
    updatedAt?: DateTimeFilter<"Stock"> | Date | string
    isArchived?: BoolFilter<"Stock"> | boolean
    archivedAt?: DateTimeNullableFilter<"Stock"> | Date | string | null
    archivedBy?: StringNullableFilter<"Stock"> | string | null
    createdByUserId?: StringNullableFilter<"Stock"> | string | null
    updatedByUserId?: StringNullableFilter<"Stock"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type StockOrderByWithAggregationInput = {
    id?: SortOrder
    quantity?: SortOrder
    productId?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: StockCountOrderByAggregateInput
    _avg?: StockAvgOrderByAggregateInput
    _max?: StockMaxOrderByAggregateInput
    _min?: StockMinOrderByAggregateInput
    _sum?: StockSumOrderByAggregateInput
  }

  export type StockScalarWhereWithAggregatesInput = {
    AND?: StockScalarWhereWithAggregatesInput | StockScalarWhereWithAggregatesInput[]
    OR?: StockScalarWhereWithAggregatesInput[]
    NOT?: StockScalarWhereWithAggregatesInput | StockScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Stock"> | string
    quantity?: IntWithAggregatesFilter<"Stock"> | number
    productId?: StringWithAggregatesFilter<"Stock"> | string
    organisationId?: StringWithAggregatesFilter<"Stock"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Stock"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Stock"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Stock"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Stock"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Stock"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Stock"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Stock"> | string | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    organisationId?: StringFilter<"Category"> | string
    logo?: StringNullableFilter<"Category"> | string | null
    parentId?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    isArchived?: BoolFilter<"Category"> | boolean
    archivedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    archivedBy?: StringNullableFilter<"Category"> | string | null
    createdByUserId?: StringNullableFilter<"Category"> | string | null
    updatedByUserId?: StringNullableFilter<"Category"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    Product?: ProductListRelationFilter
    Brand?: BrandListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    logo?: SortOrderInput | SortOrder
    parentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    organisation?: OrganisationOrderByWithRelationInput
    parent?: CategoryOrderByWithRelationInput
    children?: CategoryOrderByRelationAggregateInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    Product?: ProductOrderByRelationAggregateInput
    Brand?: BrandOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    category_organisation_unique?: CategoryCategory_organisation_uniqueCompoundUniqueInput
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    organisationId?: StringFilter<"Category"> | string
    logo?: StringNullableFilter<"Category"> | string | null
    parentId?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    isArchived?: BoolFilter<"Category"> | boolean
    archivedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    archivedBy?: StringNullableFilter<"Category"> | string | null
    createdByUserId?: StringNullableFilter<"Category"> | string | null
    updatedByUserId?: StringNullableFilter<"Category"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    parent?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    children?: CategoryListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    Product?: ProductListRelationFilter
    Brand?: BrandListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "category_organisation_unique">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    logo?: SortOrderInput | SortOrder
    parentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    organisationId?: StringWithAggregatesFilter<"Category"> | string
    logo?: StringNullableWithAggregatesFilter<"Category"> | string | null
    parentId?: StringNullableWithAggregatesFilter<"Category"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Category"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Category"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Category"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Category"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Category"> | string | null
  }

  export type BrandWhereInput = {
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    id?: StringFilter<"Brand"> | string
    name?: StringFilter<"Brand"> | string
    description?: StringNullableFilter<"Brand"> | string | null
    organisationId?: StringFilter<"Brand"> | string
    logo?: StringNullableFilter<"Brand"> | string | null
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    isArchived?: BoolFilter<"Brand"> | boolean
    archivedAt?: DateTimeNullableFilter<"Brand"> | Date | string | null
    archivedBy?: StringNullableFilter<"Brand"> | string | null
    createdByUserId?: StringNullableFilter<"Brand"> | string | null
    updatedByUserId?: StringNullableFilter<"Brand"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    Category?: CategoryListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Product?: ProductListRelationFilter
  }

  export type BrandOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    logo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    organisation?: OrganisationOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    Category?: CategoryOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
    Product?: ProductOrderByRelationAggregateInput
  }

  export type BrandWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    name?: StringFilter<"Brand"> | string
    description?: StringNullableFilter<"Brand"> | string | null
    organisationId?: StringFilter<"Brand"> | string
    logo?: StringNullableFilter<"Brand"> | string | null
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    isArchived?: BoolFilter<"Brand"> | boolean
    archivedAt?: DateTimeNullableFilter<"Brand"> | Date | string | null
    archivedBy?: StringNullableFilter<"Brand"> | string | null
    createdByUserId?: StringNullableFilter<"Brand"> | string | null
    updatedByUserId?: StringNullableFilter<"Brand"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    Category?: CategoryListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Product?: ProductListRelationFilter
  }, "id">

  export type BrandOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    logo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: BrandCountOrderByAggregateInput
    _max?: BrandMaxOrderByAggregateInput
    _min?: BrandMinOrderByAggregateInput
  }

  export type BrandScalarWhereWithAggregatesInput = {
    AND?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    OR?: BrandScalarWhereWithAggregatesInput[]
    NOT?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Brand"> | string
    name?: StringWithAggregatesFilter<"Brand"> | string
    description?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    organisationId?: StringWithAggregatesFilter<"Brand"> | string
    logo?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Brand"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Brand"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Brand"> | string | null
  }

  export type NoteWhereInput = {
    AND?: NoteWhereInput | NoteWhereInput[]
    OR?: NoteWhereInput[]
    NOT?: NoteWhereInput | NoteWhereInput[]
    id?: StringFilter<"Note"> | string
    title?: StringFilter<"Note"> | string
    content?: StringFilter<"Note"> | string
    color?: StringFilter<"Note"> | string
    isPinned?: BoolFilter<"Note"> | boolean
    lastModified?: DateTimeFilter<"Note"> | Date | string
    userId?: StringFilter<"Note"> | string
    contactId?: StringFilter<"Note"> | string
    createdAt?: DateTimeFilter<"Note"> | Date | string
    updatedAt?: DateTimeFilter<"Note"> | Date | string
    isArchived?: BoolFilter<"Note"> | boolean
    archivedAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    archivedBy?: StringNullableFilter<"Note"> | string | null
    createdByUserId?: StringNullableFilter<"Note"> | string | null
    updatedByUserId?: StringNullableFilter<"Note"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    collaborators?: UserListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    Organisation?: OrganisationListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type NoteOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    color?: SortOrder
    isPinned?: SortOrder
    lastModified?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    contact?: ContactOrderByWithRelationInput
    collaborators?: UserOrderByRelationAggregateInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    Organisation?: OrganisationOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type NoteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NoteWhereInput | NoteWhereInput[]
    OR?: NoteWhereInput[]
    NOT?: NoteWhereInput | NoteWhereInput[]
    title?: StringFilter<"Note"> | string
    content?: StringFilter<"Note"> | string
    color?: StringFilter<"Note"> | string
    isPinned?: BoolFilter<"Note"> | boolean
    lastModified?: DateTimeFilter<"Note"> | Date | string
    userId?: StringFilter<"Note"> | string
    contactId?: StringFilter<"Note"> | string
    createdAt?: DateTimeFilter<"Note"> | Date | string
    updatedAt?: DateTimeFilter<"Note"> | Date | string
    isArchived?: BoolFilter<"Note"> | boolean
    archivedAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    archivedBy?: StringNullableFilter<"Note"> | string | null
    createdByUserId?: StringNullableFilter<"Note"> | string | null
    updatedByUserId?: StringNullableFilter<"Note"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    collaborators?: UserListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    Organisation?: OrganisationListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type NoteOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    color?: SortOrder
    isPinned?: SortOrder
    lastModified?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: NoteCountOrderByAggregateInput
    _max?: NoteMaxOrderByAggregateInput
    _min?: NoteMinOrderByAggregateInput
  }

  export type NoteScalarWhereWithAggregatesInput = {
    AND?: NoteScalarWhereWithAggregatesInput | NoteScalarWhereWithAggregatesInput[]
    OR?: NoteScalarWhereWithAggregatesInput[]
    NOT?: NoteScalarWhereWithAggregatesInput | NoteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Note"> | string
    title?: StringWithAggregatesFilter<"Note"> | string
    content?: StringWithAggregatesFilter<"Note"> | string
    color?: StringWithAggregatesFilter<"Note"> | string
    isPinned?: BoolWithAggregatesFilter<"Note"> | boolean
    lastModified?: DateTimeWithAggregatesFilter<"Note"> | Date | string
    userId?: StringWithAggregatesFilter<"Note"> | string
    contactId?: StringWithAggregatesFilter<"Note"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Note"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Note"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Note"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Note"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Note"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Note"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Note"> | string | null
  }

  export type DevisWhereInput = {
    AND?: DevisWhereInput | DevisWhereInput[]
    OR?: DevisWhereInput[]
    NOT?: DevisWhereInput | DevisWhereInput[]
    id?: StringFilter<"Devis"> | string
    devisNumber?: StringFilter<"Devis"> | string
    taxType?: EnumTaxTypeFilter<"Devis"> | $Enums.TaxType
    status?: EnumDevisStatusFilter<"Devis"> | $Enums.DevisStatus
    totalAmount?: FloatFilter<"Devis"> | number
    taxAmount?: FloatFilter<"Devis"> | number
    totalWithTax?: FloatFilter<"Devis"> | number
    notes?: StringNullableFilter<"Devis"> | string | null
    pdfUrl?: StringNullableFilter<"Devis"> | string | null
    creationDate?: DateTimeFilter<"Devis"> | Date | string
    lastModified?: DateTimeFilter<"Devis"> | Date | string
    archivedDate?: DateTimeNullableFilter<"Devis"> | Date | string | null
    dueDate?: DateTimeNullableFilter<"Devis"> | Date | string | null
    organisationId?: StringFilter<"Devis"> | string
    contactId?: StringFilter<"Devis"> | string
    createdById?: StringFilter<"Devis"> | string
    isArchived?: BoolFilter<"Devis"> | boolean
    archivedBy?: StringNullableFilter<"Devis"> | string | null
    createdByUserId?: StringNullableFilter<"Devis"> | string | null
    updatedByUserId?: StringNullableFilter<"Devis"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    items?: DevisItemListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type DevisOrderByWithRelationInput = {
    id?: SortOrder
    devisNumber?: SortOrder
    taxType?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
    notes?: SortOrderInput | SortOrder
    pdfUrl?: SortOrderInput | SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    archivedDate?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    contactId?: SortOrder
    createdById?: SortOrder
    isArchived?: SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    organisation?: OrganisationOrderByWithRelationInput
    contact?: ContactOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    items?: DevisItemOrderByRelationAggregateInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type DevisWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    devisNumber?: string
    AND?: DevisWhereInput | DevisWhereInput[]
    OR?: DevisWhereInput[]
    NOT?: DevisWhereInput | DevisWhereInput[]
    taxType?: EnumTaxTypeFilter<"Devis"> | $Enums.TaxType
    status?: EnumDevisStatusFilter<"Devis"> | $Enums.DevisStatus
    totalAmount?: FloatFilter<"Devis"> | number
    taxAmount?: FloatFilter<"Devis"> | number
    totalWithTax?: FloatFilter<"Devis"> | number
    notes?: StringNullableFilter<"Devis"> | string | null
    pdfUrl?: StringNullableFilter<"Devis"> | string | null
    creationDate?: DateTimeFilter<"Devis"> | Date | string
    lastModified?: DateTimeFilter<"Devis"> | Date | string
    archivedDate?: DateTimeNullableFilter<"Devis"> | Date | string | null
    dueDate?: DateTimeNullableFilter<"Devis"> | Date | string | null
    organisationId?: StringFilter<"Devis"> | string
    contactId?: StringFilter<"Devis"> | string
    createdById?: StringFilter<"Devis"> | string
    isArchived?: BoolFilter<"Devis"> | boolean
    archivedBy?: StringNullableFilter<"Devis"> | string | null
    createdByUserId?: StringNullableFilter<"Devis"> | string | null
    updatedByUserId?: StringNullableFilter<"Devis"> | string | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    contact?: XOR<ContactScalarRelationFilter, ContactWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    items?: DevisItemListRelationFilter
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "devisNumber">

  export type DevisOrderByWithAggregationInput = {
    id?: SortOrder
    devisNumber?: SortOrder
    taxType?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
    notes?: SortOrderInput | SortOrder
    pdfUrl?: SortOrderInput | SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    archivedDate?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    contactId?: SortOrder
    createdById?: SortOrder
    isArchived?: SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: DevisCountOrderByAggregateInput
    _avg?: DevisAvgOrderByAggregateInput
    _max?: DevisMaxOrderByAggregateInput
    _min?: DevisMinOrderByAggregateInput
    _sum?: DevisSumOrderByAggregateInput
  }

  export type DevisScalarWhereWithAggregatesInput = {
    AND?: DevisScalarWhereWithAggregatesInput | DevisScalarWhereWithAggregatesInput[]
    OR?: DevisScalarWhereWithAggregatesInput[]
    NOT?: DevisScalarWhereWithAggregatesInput | DevisScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Devis"> | string
    devisNumber?: StringWithAggregatesFilter<"Devis"> | string
    taxType?: EnumTaxTypeWithAggregatesFilter<"Devis"> | $Enums.TaxType
    status?: EnumDevisStatusWithAggregatesFilter<"Devis"> | $Enums.DevisStatus
    totalAmount?: FloatWithAggregatesFilter<"Devis"> | number
    taxAmount?: FloatWithAggregatesFilter<"Devis"> | number
    totalWithTax?: FloatWithAggregatesFilter<"Devis"> | number
    notes?: StringNullableWithAggregatesFilter<"Devis"> | string | null
    pdfUrl?: StringNullableWithAggregatesFilter<"Devis"> | string | null
    creationDate?: DateTimeWithAggregatesFilter<"Devis"> | Date | string
    lastModified?: DateTimeWithAggregatesFilter<"Devis"> | Date | string
    archivedDate?: DateTimeNullableWithAggregatesFilter<"Devis"> | Date | string | null
    dueDate?: DateTimeNullableWithAggregatesFilter<"Devis"> | Date | string | null
    organisationId?: StringWithAggregatesFilter<"Devis"> | string
    contactId?: StringWithAggregatesFilter<"Devis"> | string
    createdById?: StringWithAggregatesFilter<"Devis"> | string
    isArchived?: BoolWithAggregatesFilter<"Devis"> | boolean
    archivedBy?: StringNullableWithAggregatesFilter<"Devis"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Devis"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Devis"> | string | null
  }

  export type DevisItemWhereInput = {
    AND?: DevisItemWhereInput | DevisItemWhereInput[]
    OR?: DevisItemWhereInput[]
    NOT?: DevisItemWhereInput | DevisItemWhereInput[]
    id?: StringFilter<"DevisItem"> | string
    description?: StringFilter<"DevisItem"> | string
    quantity?: IntFilter<"DevisItem"> | number
    unitPrice?: FloatFilter<"DevisItem"> | number
    taxRate?: FloatFilter<"DevisItem"> | number
    taxAmount?: FloatFilter<"DevisItem"> | number
    totalPrice?: FloatFilter<"DevisItem"> | number
    totalWithTax?: FloatFilter<"DevisItem"> | number
    creationDate?: DateTimeFilter<"DevisItem"> | Date | string
    lastModified?: DateTimeFilter<"DevisItem"> | Date | string
    devisId?: StringFilter<"DevisItem"> | string
    productId?: StringNullableFilter<"DevisItem"> | string | null
    createdByUserId?: StringNullableFilter<"DevisItem"> | string | null
    devis?: XOR<DevisScalarRelationFilter, DevisWhereInput>
    product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type DevisItemOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    devisId?: SortOrder
    productId?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    devis?: DevisOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
  }

  export type DevisItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DevisItemWhereInput | DevisItemWhereInput[]
    OR?: DevisItemWhereInput[]
    NOT?: DevisItemWhereInput | DevisItemWhereInput[]
    description?: StringFilter<"DevisItem"> | string
    quantity?: IntFilter<"DevisItem"> | number
    unitPrice?: FloatFilter<"DevisItem"> | number
    taxRate?: FloatFilter<"DevisItem"> | number
    taxAmount?: FloatFilter<"DevisItem"> | number
    totalPrice?: FloatFilter<"DevisItem"> | number
    totalWithTax?: FloatFilter<"DevisItem"> | number
    creationDate?: DateTimeFilter<"DevisItem"> | Date | string
    lastModified?: DateTimeFilter<"DevisItem"> | Date | string
    devisId?: StringFilter<"DevisItem"> | string
    productId?: StringNullableFilter<"DevisItem"> | string | null
    createdByUserId?: StringNullableFilter<"DevisItem"> | string | null
    devis?: XOR<DevisScalarRelationFilter, DevisWhereInput>
    product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type DevisItemOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    devisId?: SortOrder
    productId?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    _count?: DevisItemCountOrderByAggregateInput
    _avg?: DevisItemAvgOrderByAggregateInput
    _max?: DevisItemMaxOrderByAggregateInput
    _min?: DevisItemMinOrderByAggregateInput
    _sum?: DevisItemSumOrderByAggregateInput
  }

  export type DevisItemScalarWhereWithAggregatesInput = {
    AND?: DevisItemScalarWhereWithAggregatesInput | DevisItemScalarWhereWithAggregatesInput[]
    OR?: DevisItemScalarWhereWithAggregatesInput[]
    NOT?: DevisItemScalarWhereWithAggregatesInput | DevisItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DevisItem"> | string
    description?: StringWithAggregatesFilter<"DevisItem"> | string
    quantity?: IntWithAggregatesFilter<"DevisItem"> | number
    unitPrice?: FloatWithAggregatesFilter<"DevisItem"> | number
    taxRate?: FloatWithAggregatesFilter<"DevisItem"> | number
    taxAmount?: FloatWithAggregatesFilter<"DevisItem"> | number
    totalPrice?: FloatWithAggregatesFilter<"DevisItem"> | number
    totalWithTax?: FloatWithAggregatesFilter<"DevisItem"> | number
    creationDate?: DateTimeWithAggregatesFilter<"DevisItem"> | Date | string
    lastModified?: DateTimeWithAggregatesFilter<"DevisItem"> | Date | string
    devisId?: StringWithAggregatesFilter<"DevisItem"> | string
    productId?: StringNullableWithAggregatesFilter<"DevisItem"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"DevisItem"> | string | null
  }

  export type TaskWhereInput = {
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    id?: StringFilter<"Task"> | string
    title?: StringFilter<"Task"> | string
    description?: StringNullableFilter<"Task"> | string | null
    type?: EnumTaskTypeFilter<"Task"> | $Enums.TaskType
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"Task"> | $Enums.TaskPriority
    assigneeId?: StringNullableFilter<"Task"> | string | null
    dueDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    organisationId?: StringFilter<"Task"> | string
    createdById?: StringFilter<"Task"> | string
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    isArchived?: BoolFilter<"Task"> | boolean
    archivedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    archivedBy?: StringNullableFilter<"Task"> | string | null
    createdByUserId?: StringNullableFilter<"Task"> | string | null
    updatedByUserId?: StringNullableFilter<"Task"> | string | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type TaskOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assigneeId?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    assignee?: UserOrderByWithRelationInput
    organisation?: OrganisationOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    ActivityLog?: ActivityLogOrderByRelationAggregateInput
    createdByUser?: UserOrderByWithRelationInput
    updatedByUser?: UserOrderByWithRelationInput
  }

  export type TaskWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TaskWhereInput | TaskWhereInput[]
    OR?: TaskWhereInput[]
    NOT?: TaskWhereInput | TaskWhereInput[]
    title?: StringFilter<"Task"> | string
    description?: StringNullableFilter<"Task"> | string | null
    type?: EnumTaskTypeFilter<"Task"> | $Enums.TaskType
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"Task"> | $Enums.TaskPriority
    assigneeId?: StringNullableFilter<"Task"> | string | null
    dueDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    organisationId?: StringFilter<"Task"> | string
    createdById?: StringFilter<"Task"> | string
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    isArchived?: BoolFilter<"Task"> | boolean
    archivedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    archivedBy?: StringNullableFilter<"Task"> | string | null
    createdByUserId?: StringNullableFilter<"Task"> | string | null
    updatedByUserId?: StringNullableFilter<"Task"> | string | null
    assignee?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    organisation?: XOR<OrganisationScalarRelationFilter, OrganisationWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    ActivityLog?: ActivityLogListRelationFilter
    createdByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedByUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type TaskOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assigneeId?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    organisationId?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    _count?: TaskCountOrderByAggregateInput
    _max?: TaskMaxOrderByAggregateInput
    _min?: TaskMinOrderByAggregateInput
  }

  export type TaskScalarWhereWithAggregatesInput = {
    AND?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    OR?: TaskScalarWhereWithAggregatesInput[]
    NOT?: TaskScalarWhereWithAggregatesInput | TaskScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Task"> | string
    title?: StringWithAggregatesFilter<"Task"> | string
    description?: StringNullableWithAggregatesFilter<"Task"> | string | null
    type?: EnumTaskTypeWithAggregatesFilter<"Task"> | $Enums.TaskType
    status?: EnumTaskStatusWithAggregatesFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityWithAggregatesFilter<"Task"> | $Enums.TaskPriority
    assigneeId?: StringNullableWithAggregatesFilter<"Task"> | string | null
    dueDate?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    organisationId?: StringWithAggregatesFilter<"Task"> | string
    createdById?: StringWithAggregatesFilter<"Task"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Task"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Task"> | Date | string
    isArchived?: BoolWithAggregatesFilter<"Task"> | boolean
    archivedAt?: DateTimeNullableWithAggregatesFilter<"Task"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"Task"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"Task"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"Task"> | string | null
  }

  export type ActivityLogWhereInput = {
    AND?: ActivityLogWhereInput | ActivityLogWhereInput[]
    OR?: ActivityLogWhereInput[]
    NOT?: ActivityLogWhereInput | ActivityLogWhereInput[]
    id?: StringFilter<"ActivityLog"> | string
    action?: StringFilter<"ActivityLog"> | string
    entityType?: StringFilter<"ActivityLog"> | string
    entityId?: StringFilter<"ActivityLog"> | string
    oldData?: JsonNullableFilter<"ActivityLog">
    newData?: JsonNullableFilter<"ActivityLog">
    userId?: StringNullableFilter<"ActivityLog"> | string | null
    organisationId?: StringNullableFilter<"ActivityLog"> | string | null
    createdByUserId?: StringNullableFilter<"ActivityLog"> | string | null
    updatedByUserId?: StringNullableFilter<"ActivityLog"> | string | null
    relatedUserId?: StringNullableFilter<"ActivityLog"> | string | null
    accountId?: StringNullableFilter<"ActivityLog"> | string | null
    sessionId?: StringNullableFilter<"ActivityLog"> | string | null
    authenticatorId?: StringNullableFilter<"ActivityLog"> | string | null
    invitationId?: StringNullableFilter<"ActivityLog"> | string | null
    passwordResetTokenId?: StringNullableFilter<"ActivityLog"> | string | null
    contactId?: StringNullableFilter<"ActivityLog"> | string | null
    commentId?: StringNullableFilter<"ActivityLog"> | string | null
    feedbackContactId?: StringNullableFilter<"ActivityLog"> | string | null
    favoriteId?: StringNullableFilter<"ActivityLog"> | string | null
    productId?: StringNullableFilter<"ActivityLog"> | string | null
    stockId?: StringNullableFilter<"ActivityLog"> | string | null
    categoryId?: StringNullableFilter<"ActivityLog"> | string | null
    brandId?: StringNullableFilter<"ActivityLog"> | string | null
    noteId?: StringNullableFilter<"ActivityLog"> | string | null
    devisId?: StringNullableFilter<"ActivityLog"> | string | null
    devisItemId?: StringNullableFilter<"ActivityLog"> | string | null
    taskId?: StringNullableFilter<"ActivityLog"> | string | null
    createdAt?: DateTimeFilter<"ActivityLog"> | Date | string
    ipAddress?: StringNullableFilter<"ActivityLog"> | string | null
    userAgent?: StringNullableFilter<"ActivityLog"> | string | null
    actionDetails?: StringNullableFilter<"ActivityLog"> | string | null
    entityName?: StringNullableFilter<"ActivityLog"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    organisation?: XOR<OrganisationNullableScalarRelationFilter, OrganisationWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    relatedUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    account?: XOR<AccountNullableScalarRelationFilter, AccountWhereInput> | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    authenticator?: XOR<AuthenticatorNullableScalarRelationFilter, AuthenticatorWhereInput> | null
    invitation?: XOR<InvitationNullableScalarRelationFilter, InvitationWhereInput> | null
    passwordResetToken?: XOR<PasswordResetTokenNullableScalarRelationFilter, PasswordResetTokenWhereInput> | null
    contact?: XOR<ContactNullableScalarRelationFilter, ContactWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    feedbackContact?: XOR<FeedbackContactNullableScalarRelationFilter, FeedbackContactWhereInput> | null
    favorite?: XOR<FavoriteNullableScalarRelationFilter, FavoriteWhereInput> | null
    product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    stock?: XOR<StockNullableScalarRelationFilter, StockWhereInput> | null
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    note?: XOR<NoteNullableScalarRelationFilter, NoteWhereInput> | null
    devis?: XOR<DevisNullableScalarRelationFilter, DevisWhereInput> | null
    devisItem?: XOR<DevisItemNullableScalarRelationFilter, DevisItemWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
  }

  export type ActivityLogOrderByWithRelationInput = {
    id?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    oldData?: SortOrderInput | SortOrder
    newData?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    organisationId?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    relatedUserId?: SortOrderInput | SortOrder
    accountId?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    authenticatorId?: SortOrderInput | SortOrder
    invitationId?: SortOrderInput | SortOrder
    passwordResetTokenId?: SortOrderInput | SortOrder
    contactId?: SortOrderInput | SortOrder
    commentId?: SortOrderInput | SortOrder
    feedbackContactId?: SortOrderInput | SortOrder
    favoriteId?: SortOrderInput | SortOrder
    productId?: SortOrderInput | SortOrder
    stockId?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    brandId?: SortOrderInput | SortOrder
    noteId?: SortOrderInput | SortOrder
    devisId?: SortOrderInput | SortOrder
    devisItemId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    actionDetails?: SortOrderInput | SortOrder
    entityName?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    organisation?: OrganisationOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    relatedUser?: UserOrderByWithRelationInput
    account?: AccountOrderByWithRelationInput
    session?: SessionOrderByWithRelationInput
    authenticator?: AuthenticatorOrderByWithRelationInput
    invitation?: InvitationOrderByWithRelationInput
    passwordResetToken?: PasswordResetTokenOrderByWithRelationInput
    contact?: ContactOrderByWithRelationInput
    comment?: CommentOrderByWithRelationInput
    feedbackContact?: FeedbackContactOrderByWithRelationInput
    favorite?: FavoriteOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
    stock?: StockOrderByWithRelationInput
    category?: CategoryOrderByWithRelationInput
    brand?: BrandOrderByWithRelationInput
    note?: NoteOrderByWithRelationInput
    devis?: DevisOrderByWithRelationInput
    devisItem?: DevisItemOrderByWithRelationInput
    task?: TaskOrderByWithRelationInput
  }

  export type ActivityLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ActivityLogWhereInput | ActivityLogWhereInput[]
    OR?: ActivityLogWhereInput[]
    NOT?: ActivityLogWhereInput | ActivityLogWhereInput[]
    action?: StringFilter<"ActivityLog"> | string
    entityType?: StringFilter<"ActivityLog"> | string
    entityId?: StringFilter<"ActivityLog"> | string
    oldData?: JsonNullableFilter<"ActivityLog">
    newData?: JsonNullableFilter<"ActivityLog">
    userId?: StringNullableFilter<"ActivityLog"> | string | null
    organisationId?: StringNullableFilter<"ActivityLog"> | string | null
    createdByUserId?: StringNullableFilter<"ActivityLog"> | string | null
    updatedByUserId?: StringNullableFilter<"ActivityLog"> | string | null
    relatedUserId?: StringNullableFilter<"ActivityLog"> | string | null
    accountId?: StringNullableFilter<"ActivityLog"> | string | null
    sessionId?: StringNullableFilter<"ActivityLog"> | string | null
    authenticatorId?: StringNullableFilter<"ActivityLog"> | string | null
    invitationId?: StringNullableFilter<"ActivityLog"> | string | null
    passwordResetTokenId?: StringNullableFilter<"ActivityLog"> | string | null
    contactId?: StringNullableFilter<"ActivityLog"> | string | null
    commentId?: StringNullableFilter<"ActivityLog"> | string | null
    feedbackContactId?: StringNullableFilter<"ActivityLog"> | string | null
    favoriteId?: StringNullableFilter<"ActivityLog"> | string | null
    productId?: StringNullableFilter<"ActivityLog"> | string | null
    stockId?: StringNullableFilter<"ActivityLog"> | string | null
    categoryId?: StringNullableFilter<"ActivityLog"> | string | null
    brandId?: StringNullableFilter<"ActivityLog"> | string | null
    noteId?: StringNullableFilter<"ActivityLog"> | string | null
    devisId?: StringNullableFilter<"ActivityLog"> | string | null
    devisItemId?: StringNullableFilter<"ActivityLog"> | string | null
    taskId?: StringNullableFilter<"ActivityLog"> | string | null
    createdAt?: DateTimeFilter<"ActivityLog"> | Date | string
    ipAddress?: StringNullableFilter<"ActivityLog"> | string | null
    userAgent?: StringNullableFilter<"ActivityLog"> | string | null
    actionDetails?: StringNullableFilter<"ActivityLog"> | string | null
    entityName?: StringNullableFilter<"ActivityLog"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    organisation?: XOR<OrganisationNullableScalarRelationFilter, OrganisationWhereInput> | null
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    relatedUser?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    account?: XOR<AccountNullableScalarRelationFilter, AccountWhereInput> | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    authenticator?: XOR<AuthenticatorNullableScalarRelationFilter, AuthenticatorWhereInput> | null
    invitation?: XOR<InvitationNullableScalarRelationFilter, InvitationWhereInput> | null
    passwordResetToken?: XOR<PasswordResetTokenNullableScalarRelationFilter, PasswordResetTokenWhereInput> | null
    contact?: XOR<ContactNullableScalarRelationFilter, ContactWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    feedbackContact?: XOR<FeedbackContactNullableScalarRelationFilter, FeedbackContactWhereInput> | null
    favorite?: XOR<FavoriteNullableScalarRelationFilter, FavoriteWhereInput> | null
    product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    stock?: XOR<StockNullableScalarRelationFilter, StockWhereInput> | null
    category?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    brand?: XOR<BrandNullableScalarRelationFilter, BrandWhereInput> | null
    note?: XOR<NoteNullableScalarRelationFilter, NoteWhereInput> | null
    devis?: XOR<DevisNullableScalarRelationFilter, DevisWhereInput> | null
    devisItem?: XOR<DevisItemNullableScalarRelationFilter, DevisItemWhereInput> | null
    task?: XOR<TaskNullableScalarRelationFilter, TaskWhereInput> | null
  }, "id">

  export type ActivityLogOrderByWithAggregationInput = {
    id?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    oldData?: SortOrderInput | SortOrder
    newData?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    organisationId?: SortOrderInput | SortOrder
    createdByUserId?: SortOrderInput | SortOrder
    updatedByUserId?: SortOrderInput | SortOrder
    relatedUserId?: SortOrderInput | SortOrder
    accountId?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    authenticatorId?: SortOrderInput | SortOrder
    invitationId?: SortOrderInput | SortOrder
    passwordResetTokenId?: SortOrderInput | SortOrder
    contactId?: SortOrderInput | SortOrder
    commentId?: SortOrderInput | SortOrder
    feedbackContactId?: SortOrderInput | SortOrder
    favoriteId?: SortOrderInput | SortOrder
    productId?: SortOrderInput | SortOrder
    stockId?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    brandId?: SortOrderInput | SortOrder
    noteId?: SortOrderInput | SortOrder
    devisId?: SortOrderInput | SortOrder
    devisItemId?: SortOrderInput | SortOrder
    taskId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    actionDetails?: SortOrderInput | SortOrder
    entityName?: SortOrderInput | SortOrder
    _count?: ActivityLogCountOrderByAggregateInput
    _max?: ActivityLogMaxOrderByAggregateInput
    _min?: ActivityLogMinOrderByAggregateInput
  }

  export type ActivityLogScalarWhereWithAggregatesInput = {
    AND?: ActivityLogScalarWhereWithAggregatesInput | ActivityLogScalarWhereWithAggregatesInput[]
    OR?: ActivityLogScalarWhereWithAggregatesInput[]
    NOT?: ActivityLogScalarWhereWithAggregatesInput | ActivityLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ActivityLog"> | string
    action?: StringWithAggregatesFilter<"ActivityLog"> | string
    entityType?: StringWithAggregatesFilter<"ActivityLog"> | string
    entityId?: StringWithAggregatesFilter<"ActivityLog"> | string
    oldData?: JsonNullableWithAggregatesFilter<"ActivityLog">
    newData?: JsonNullableWithAggregatesFilter<"ActivityLog">
    userId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    organisationId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    createdByUserId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    updatedByUserId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    relatedUserId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    accountId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    sessionId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    authenticatorId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    invitationId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    passwordResetTokenId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    contactId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    commentId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    feedbackContactId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    favoriteId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    productId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    stockId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    categoryId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    brandId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    noteId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    devisId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    devisItemId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    taskId?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ActivityLog"> | Date | string
    ipAddress?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    actionDetails?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
    entityName?: StringNullableWithAggregatesFilter<"ActivityLog"> | string | null
  }

  export type UserCreateInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganisationCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationCreateManyInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type OrganisationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
  }

  export type OrganisationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    user: UserCreateNestedOneWithoutAccountsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutAccountInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type AccountCreateManyInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateInput = {
    id?: string
    identifier: string
    token: string
    expires: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
  }

  export type VerificationTokenUncheckedCreateInput = {
    id?: string
    identifier: string
    token: string
    expires: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
  }

  export type VerificationTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationTokenCreateManyInput = {
    id?: string
    identifier: string
    token: string
    expires: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
  }

  export type VerificationTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuthenticatorCreateInput = {
    id?: string
    credentialID: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
    user: UserCreateNestedOneWithoutAuthenticatorsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutAuthenticatorInput
  }

  export type AuthenticatorUncheckedCreateInput = {
    id?: string
    credentialID: string
    userId: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutAuthenticatorInput
  }

  export type AuthenticatorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAuthenticatorsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutAuthenticatorNestedInput
  }

  export type AuthenticatorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutAuthenticatorNestedInput
  }

  export type AuthenticatorCreateManyInput = {
    id?: string
    credentialID: string
    userId: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
  }

  export type AuthenticatorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AuthenticatorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationCreateInput = {
    id?: string
    email: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    invitedBy: UserCreateNestedOneWithoutInvitationsInput
    organisation: OrganisationCreateNestedOneWithoutInvitationsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutInvitationInput
  }

  export type InvitationUncheckedCreateInput = {
    id?: string
    email: string
    organisationId: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedById: string
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutInvitationInput
  }

  export type InvitationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedBy?: UserUpdateOneRequiredWithoutInvitationsNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutInvitationsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutInvitationNestedInput
  }

  export type InvitationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedById?: StringFieldUpdateOperationsInput | string
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutInvitationNestedInput
  }

  export type InvitationCreateManyInput = {
    id?: string
    email: string
    organisationId: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedById: string
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
  }

  export type InvitationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedById?: StringFieldUpdateOperationsInput | string
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PasswordResetTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutPasswordResetTokensInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutPasswordResetTokenInput
  }

  export type PasswordResetTokenUncheckedCreateInput = {
    id?: string
    userId: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutPasswordResetTokenInput
  }

  export type PasswordResetTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPasswordResetTokensNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutPasswordResetTokenNestedInput
  }

  export type PasswordResetTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutPasswordResetTokenNestedInput
  }

  export type PasswordResetTokenCreateManyInput = {
    id?: string
    userId: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type PasswordResetTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PasswordResetTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactCreateInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactCreateManyInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type ContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentCreateInput = {
    id?: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutCommentsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCommentInput
    createdByUser?: UserCreateNestedOneWithoutCommentInput
  }

  export type CommentUncheckedCreateInput = {
    id?: string
    content: string
    createdAt?: Date | string
    contactId: string
    updatedAt?: Date | string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutCommentsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCommentNestedInput
    createdByUser?: UserUpdateOneWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentCreateManyInput = {
    id?: string
    content: string
    createdAt?: Date | string
    contactId: string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type CommentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FeedbackContactCreateInput = {
    id?: string
    message: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutFeedbackContactInput
    user: UserCreateNestedOneWithoutFeedbackContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFeedbackContactInput
    createdByUser?: UserCreateNestedOneWithoutFeedbackContactsInput
  }

  export type FeedbackContactUncheckedCreateInput = {
    id?: string
    message: string
    contactId: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFeedbackContactInput
  }

  export type FeedbackContactUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutFeedbackContactNestedInput
    user?: UserUpdateOneRequiredWithoutFeedbackContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFeedbackContactNestedInput
    createdByUser?: UserUpdateOneWithoutFeedbackContactsNestedInput
  }

  export type FeedbackContactUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFeedbackContactNestedInput
  }

  export type FeedbackContactCreateManyInput = {
    id?: string
    message: string
    contactId: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type FeedbackContactUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeedbackContactUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteCreateInput = {
    id?: string
    contact: ContactCreateNestedOneWithoutFavoriteInput
    organisation: OrganisationCreateNestedOneWithoutFavoriteInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFavoriteInput
    createdByUser?: UserCreateNestedOneWithoutFavoriteInput
  }

  export type FavoriteUncheckedCreateInput = {
    id?: string
    contactId: string
    organisationId: string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFavoriteInput
  }

  export type FavoriteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact?: ContactUpdateOneRequiredWithoutFavoriteNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutFavoriteNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFavoriteNestedInput
    createdByUser?: UserUpdateOneWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFavoriteNestedInput
  }

  export type FavoriteCreateManyInput = {
    id?: string
    contactId: string
    organisationId: string
    createdByUserId?: string | null
  }

  export type FavoriteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockCreateInput = {
    id?: string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    product: ProductCreateNestedOneWithoutStockInput
    organisation: OrganisationCreateNestedOneWithoutStockInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutStockInput
    createdByUser?: UserCreateNestedOneWithoutStockInput
    updatedByUser?: UserCreateNestedOneWithoutStocksInput
  }

  export type StockUncheckedCreateInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutStockNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutStockNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutStockNestedInput
    createdByUser?: UserUpdateOneWithoutStockNestedInput
    updatedByUser?: UserUpdateOneWithoutStocksNestedInput
  }

  export type StockUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockCreateManyInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type StockUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BrandCreateInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutBrandInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutBrandInput
    Category?: CategoryCreateNestedManyWithoutBrandInput
    createdByUser?: UserCreateNestedOneWithoutBrandInput
    updatedByUser?: UserCreateNestedOneWithoutBrandsInput
    Product?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutBrandInput
    Category?: CategoryUncheckedCreateNestedManyWithoutBrandInput
    Product?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutBrandNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutBrandNestedInput
    Category?: CategoryUpdateManyWithoutBrandNestedInput
    createdByUser?: UserUpdateOneWithoutBrandNestedInput
    updatedByUser?: UserUpdateOneWithoutBrandsNestedInput
    Product?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutBrandNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutBrandNestedInput
    Product?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type BrandUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BrandUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteCreateInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    contact: ContactCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type NoteCreateManyInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type NoteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisCreateInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    contact: ContactCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisCreateManyInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type DevisUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisItemCreateInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devis: DevisCreateNestedOneWithoutItemsInput
    product?: ProductCreateNestedOneWithoutDevisItemInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisItemInput
    createdByUser?: UserCreateNestedOneWithoutDevisItemsInput
  }

  export type DevisItemUncheckedCreateInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    productId?: string | null
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisItemInput
  }

  export type DevisItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devis?: DevisUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneWithoutDevisItemNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisItemNestedInput
    createdByUser?: UserUpdateOneWithoutDevisItemsNestedInput
  }

  export type DevisItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisItemNestedInput
  }

  export type DevisItemCreateManyInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    productId?: string | null
    createdByUserId?: string | null
  }

  export type DevisItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DevisItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskCreateInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    organisation: OrganisationCreateNestedOneWithoutTaskInput
    createdBy: UserCreateNestedOneWithoutTaskCreatorInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutTaskInput
    createdByUser?: UserCreateNestedOneWithoutTaskInput
    updatedByUser?: UserCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutTaskNestedInput
    createdBy?: UserUpdateOneRequiredWithoutTaskCreatorNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutTaskNestedInput
    createdByUser?: UserUpdateOneWithoutTaskNestedInput
    updatedByUser?: UserUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskCreateManyInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type TaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type EnumAccessTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AccessType | EnumAccessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccessTypeFilter<$PrismaModel> | $Enums.AccessType
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type AuthenticatorListRelationFilter = {
    every?: AuthenticatorWhereInput
    some?: AuthenticatorWhereInput
    none?: AuthenticatorWhereInput
  }

  export type OrganisationListRelationFilter = {
    every?: OrganisationWhereInput
    some?: OrganisationWhereInput
    none?: OrganisationWhereInput
  }

  export type InvitationListRelationFilter = {
    every?: InvitationWhereInput
    some?: InvitationWhereInput
    none?: InvitationWhereInput
  }

  export type PasswordResetTokenListRelationFilter = {
    every?: PasswordResetTokenWhereInput
    some?: PasswordResetTokenWhereInput
    none?: PasswordResetTokenWhereInput
  }

  export type FeedbackContactListRelationFilter = {
    every?: FeedbackContactWhereInput
    some?: FeedbackContactWhereInput
    none?: FeedbackContactWhereInput
  }

  export type NoteListRelationFilter = {
    every?: NoteWhereInput
    some?: NoteWhereInput
    none?: NoteWhereInput
  }

  export type TaskListRelationFilter = {
    every?: TaskWhereInput
    some?: TaskWhereInput
    none?: TaskWhereInput
  }

  export type ActivityLogListRelationFilter = {
    every?: ActivityLogWhereInput
    some?: ActivityLogWhereInput
    none?: ActivityLogWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type FavoriteListRelationFilter = {
    every?: FavoriteWhereInput
    some?: FavoriteWhereInput
    none?: FavoriteWhereInput
  }

  export type ContactListRelationFilter = {
    every?: ContactWhereInput
    some?: ContactWhereInput
    none?: ContactWhereInput
  }

  export type CommentListRelationFilter = {
    every?: CommentWhereInput
    some?: CommentWhereInput
    none?: CommentWhereInput
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type StockListRelationFilter = {
    every?: StockWhereInput
    some?: StockWhereInput
    none?: StockWhereInput
  }

  export type BrandListRelationFilter = {
    every?: BrandWhereInput
    some?: BrandWhereInput
    none?: BrandWhereInput
  }

  export type DevisListRelationFilter = {
    every?: DevisWhereInput
    some?: DevisWhereInput
    none?: DevisWhereInput
  }

  export type DevisItemListRelationFilter = {
    every?: DevisItemWhereInput
    some?: DevisItemWhereInput
    none?: DevisItemWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuthenticatorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrganisationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvitationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PasswordResetTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FeedbackContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NoteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ActivityLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BrandOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DevisOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DevisItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type EnumAccessTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccessType | EnumAccessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccessTypeWithAggregatesFilter<$PrismaModel> | $Enums.AccessType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccessTypeFilter<$PrismaModel>
    _max?: NestedEnumAccessTypeFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumDomainFilter<$PrismaModel = never> = {
    equals?: $Enums.Domain | EnumDomainFieldRefInput<$PrismaModel>
    in?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    notIn?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    not?: NestedEnumDomainFilter<$PrismaModel> | $Enums.Domain
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type OrganisationCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    domain?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type OrganisationMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    domain?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type OrganisationMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    ownerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    domain?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type EnumDomainWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Domain | EnumDomainFieldRefInput<$PrismaModel>
    in?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    notIn?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    not?: NestedEnumDomainWithAggregatesFilter<$PrismaModel> | $Enums.Domain
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDomainFilter<$PrismaModel>
    _max?: NestedEnumDomainFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type AuthenticatorCountOrderByAggregateInput = {
    id?: SortOrder
    credentialID?: SortOrder
    userId?: SortOrder
    providerAccountId?: SortOrder
    credentialPublicKey?: SortOrder
    counter?: SortOrder
    credentialDeviceType?: SortOrder
    credentialBackedUp?: SortOrder
    transports?: SortOrder
  }

  export type AuthenticatorAvgOrderByAggregateInput = {
    counter?: SortOrder
  }

  export type AuthenticatorMaxOrderByAggregateInput = {
    id?: SortOrder
    credentialID?: SortOrder
    userId?: SortOrder
    providerAccountId?: SortOrder
    credentialPublicKey?: SortOrder
    counter?: SortOrder
    credentialDeviceType?: SortOrder
    credentialBackedUp?: SortOrder
    transports?: SortOrder
  }

  export type AuthenticatorMinOrderByAggregateInput = {
    id?: SortOrder
    credentialID?: SortOrder
    userId?: SortOrder
    providerAccountId?: SortOrder
    credentialPublicKey?: SortOrder
    counter?: SortOrder
    credentialDeviceType?: SortOrder
    credentialBackedUp?: SortOrder
    transports?: SortOrder
  }

  export type AuthenticatorSumOrderByAggregateInput = {
    counter?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type OrganisationScalarRelationFilter = {
    is?: OrganisationWhereInput
    isNot?: OrganisationWhereInput
  }

  export type InvitationEmailOrganisationIdCompoundUniqueInput = {
    email: string
    organisationId: string
  }

  export type InvitationCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    organisationId?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    invitedById?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrder
    token?: SortOrder
    tokenExpiresAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
  }

  export type InvitationMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    organisationId?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    invitedById?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrder
    token?: SortOrder
    tokenExpiresAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
  }

  export type InvitationMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    organisationId?: SortOrder
    role?: SortOrder
    accessType?: SortOrder
    invitedById?: SortOrder
    invitedAt?: SortOrder
    acceptedAt?: SortOrder
    token?: SortOrder
    tokenExpiresAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
  }

  export type PasswordResetTokenCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type PasswordResetTokenMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumStatus_ContactFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_Contact | EnumStatus_ContactFieldRefInput<$PrismaModel>
    in?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    not?: NestedEnumStatus_ContactFilter<$PrismaModel> | $Enums.Status_Contact
  }

  export type EnumNiveauFilter<$PrismaModel = never> = {
    equals?: $Enums.Niveau | EnumNiveauFieldRefInput<$PrismaModel>
    in?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    notIn?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    not?: NestedEnumNiveauFilter<$PrismaModel> | $Enums.Niveau
  }

  export type ContactCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    adresse?: SortOrder
    status_contact?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    niveau?: SortOrder
    tags?: SortOrder
    sector?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type ContactMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    adresse?: SortOrder
    status_contact?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    niveau?: SortOrder
    tags?: SortOrder
    sector?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type ContactMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logo?: SortOrder
    adresse?: SortOrder
    status_contact?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    niveau?: SortOrder
    tags?: SortOrder
    sector?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type EnumStatus_ContactWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_Contact | EnumStatus_ContactFieldRefInput<$PrismaModel>
    in?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    not?: NestedEnumStatus_ContactWithAggregatesFilter<$PrismaModel> | $Enums.Status_Contact
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatus_ContactFilter<$PrismaModel>
    _max?: NestedEnumStatus_ContactFilter<$PrismaModel>
  }

  export type EnumNiveauWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Niveau | EnumNiveauFieldRefInput<$PrismaModel>
    in?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    notIn?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    not?: NestedEnumNiveauWithAggregatesFilter<$PrismaModel> | $Enums.Niveau
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNiveauFilter<$PrismaModel>
    _max?: NestedEnumNiveauFilter<$PrismaModel>
  }

  export type ContactScalarRelationFilter = {
    is?: ContactWhereInput
    isNot?: ContactWhereInput
  }

  export type CommentCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    contactId?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrder
  }

  export type CommentMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    contactId?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrder
  }

  export type CommentMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    createdAt?: SortOrder
    contactId?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FeedbackContactCountOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    contactId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FeedbackContactMaxOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    contactId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FeedbackContactMinOrderByAggregateInput = {
    id?: SortOrder
    message?: SortOrder
    contactId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FavoriteContactIdOrganisationIdCompoundUniqueInput = {
    contactId: string
    organisationId: string
  }

  export type FavoriteCountOrderByAggregateInput = {
    id?: SortOrder
    contactId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FavoriteMaxOrderByAggregateInput = {
    id?: SortOrder
    contactId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FavoriteMinOrderByAggregateInput = {
    id?: SortOrder
    contactId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BrandNullableScalarRelationFilter = {
    is?: BrandWhereInput | null
    isNot?: BrandWhereInput | null
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    images?: SortOrder
    actions?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    brandId?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    actions?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    brandId?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    actions?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    brandId?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type StockCountOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    productId?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type StockAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type StockMaxOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    productId?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type StockMinOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    productId?: SortOrder
    organisationId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type StockSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type CategoryCategory_organisation_uniqueCompoundUniqueInput = {
    name: string
    organisationId: string
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    organisationId?: SortOrder
    logo?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    organisationId?: SortOrder
    logo?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    organisationId?: SortOrder
    logo?: SortOrder
    parentId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type BrandCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    organisationId?: SortOrder
    logo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type BrandMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    organisationId?: SortOrder
    logo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type BrandMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    organisationId?: SortOrder
    logo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type NoteCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    color?: SortOrder
    isPinned?: SortOrder
    lastModified?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type NoteMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    color?: SortOrder
    isPinned?: SortOrder
    lastModified?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type NoteMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    color?: SortOrder
    isPinned?: SortOrder
    lastModified?: SortOrder
    userId?: SortOrder
    contactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type EnumTaxTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TaxType | EnumTaxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaxTypeFilter<$PrismaModel> | $Enums.TaxType
  }

  export type EnumDevisStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DevisStatus | EnumDevisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDevisStatusFilter<$PrismaModel> | $Enums.DevisStatus
  }

  export type DevisCountOrderByAggregateInput = {
    id?: SortOrder
    devisNumber?: SortOrder
    taxType?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
    notes?: SortOrder
    pdfUrl?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    archivedDate?: SortOrder
    dueDate?: SortOrder
    organisationId?: SortOrder
    contactId?: SortOrder
    createdById?: SortOrder
    isArchived?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type DevisAvgOrderByAggregateInput = {
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
  }

  export type DevisMaxOrderByAggregateInput = {
    id?: SortOrder
    devisNumber?: SortOrder
    taxType?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
    notes?: SortOrder
    pdfUrl?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    archivedDate?: SortOrder
    dueDate?: SortOrder
    organisationId?: SortOrder
    contactId?: SortOrder
    createdById?: SortOrder
    isArchived?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type DevisMinOrderByAggregateInput = {
    id?: SortOrder
    devisNumber?: SortOrder
    taxType?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
    notes?: SortOrder
    pdfUrl?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    archivedDate?: SortOrder
    dueDate?: SortOrder
    organisationId?: SortOrder
    contactId?: SortOrder
    createdById?: SortOrder
    isArchived?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type DevisSumOrderByAggregateInput = {
    totalAmount?: SortOrder
    taxAmount?: SortOrder
    totalWithTax?: SortOrder
  }

  export type EnumTaxTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaxType | EnumTaxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaxTypeWithAggregatesFilter<$PrismaModel> | $Enums.TaxType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaxTypeFilter<$PrismaModel>
    _max?: NestedEnumTaxTypeFilter<$PrismaModel>
  }

  export type EnumDevisStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DevisStatus | EnumDevisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDevisStatusWithAggregatesFilter<$PrismaModel> | $Enums.DevisStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDevisStatusFilter<$PrismaModel>
    _max?: NestedEnumDevisStatusFilter<$PrismaModel>
  }

  export type DevisScalarRelationFilter = {
    is?: DevisWhereInput
    isNot?: DevisWhereInput
  }

  export type ProductNullableScalarRelationFilter = {
    is?: ProductWhereInput | null
    isNot?: ProductWhereInput | null
  }

  export type DevisItemCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    devisId?: SortOrder
    productId?: SortOrder
    createdByUserId?: SortOrder
  }

  export type DevisItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
  }

  export type DevisItemMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    devisId?: SortOrder
    productId?: SortOrder
    createdByUserId?: SortOrder
  }

  export type DevisItemMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
    creationDate?: SortOrder
    lastModified?: SortOrder
    devisId?: SortOrder
    productId?: SortOrder
    createdByUserId?: SortOrder
  }

  export type DevisItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    taxRate?: SortOrder
    taxAmount?: SortOrder
    totalPrice?: SortOrder
    totalWithTax?: SortOrder
  }

  export type EnumTaskTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTypeFilter<$PrismaModel> | $Enums.TaskType
  }

  export type EnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type EnumTaskPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityFilter<$PrismaModel> | $Enums.TaskPriority
  }

  export type TaskCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assigneeId?: SortOrder
    dueDate?: SortOrder
    organisationId?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type TaskMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assigneeId?: SortOrder
    dueDate?: SortOrder
    organisationId?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type TaskMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    assigneeId?: SortOrder
    dueDate?: SortOrder
    organisationId?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isArchived?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
  }

  export type EnumTaskTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTypeWithAggregatesFilter<$PrismaModel> | $Enums.TaskType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskTypeFilter<$PrismaModel>
    _max?: NestedEnumTaskTypeFilter<$PrismaModel>
  }

  export type EnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type EnumTaskPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel> | $Enums.TaskPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskPriorityFilter<$PrismaModel>
    _max?: NestedEnumTaskPriorityFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type OrganisationNullableScalarRelationFilter = {
    is?: OrganisationWhereInput | null
    isNot?: OrganisationWhereInput | null
  }

  export type AccountNullableScalarRelationFilter = {
    is?: AccountWhereInput | null
    isNot?: AccountWhereInput | null
  }

  export type SessionNullableScalarRelationFilter = {
    is?: SessionWhereInput | null
    isNot?: SessionWhereInput | null
  }

  export type AuthenticatorNullableScalarRelationFilter = {
    is?: AuthenticatorWhereInput | null
    isNot?: AuthenticatorWhereInput | null
  }

  export type InvitationNullableScalarRelationFilter = {
    is?: InvitationWhereInput | null
    isNot?: InvitationWhereInput | null
  }

  export type PasswordResetTokenNullableScalarRelationFilter = {
    is?: PasswordResetTokenWhereInput | null
    isNot?: PasswordResetTokenWhereInput | null
  }

  export type ContactNullableScalarRelationFilter = {
    is?: ContactWhereInput | null
    isNot?: ContactWhereInput | null
  }

  export type CommentNullableScalarRelationFilter = {
    is?: CommentWhereInput | null
    isNot?: CommentWhereInput | null
  }

  export type FeedbackContactNullableScalarRelationFilter = {
    is?: FeedbackContactWhereInput | null
    isNot?: FeedbackContactWhereInput | null
  }

  export type FavoriteNullableScalarRelationFilter = {
    is?: FavoriteWhereInput | null
    isNot?: FavoriteWhereInput | null
  }

  export type StockNullableScalarRelationFilter = {
    is?: StockWhereInput | null
    isNot?: StockWhereInput | null
  }

  export type NoteNullableScalarRelationFilter = {
    is?: NoteWhereInput | null
    isNot?: NoteWhereInput | null
  }

  export type DevisNullableScalarRelationFilter = {
    is?: DevisWhereInput | null
    isNot?: DevisWhereInput | null
  }

  export type DevisItemNullableScalarRelationFilter = {
    is?: DevisItemWhereInput | null
    isNot?: DevisItemWhereInput | null
  }

  export type TaskNullableScalarRelationFilter = {
    is?: TaskWhereInput | null
    isNot?: TaskWhereInput | null
  }

  export type ActivityLogCountOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    oldData?: SortOrder
    newData?: SortOrder
    userId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
    relatedUserId?: SortOrder
    accountId?: SortOrder
    sessionId?: SortOrder
    authenticatorId?: SortOrder
    invitationId?: SortOrder
    passwordResetTokenId?: SortOrder
    contactId?: SortOrder
    commentId?: SortOrder
    feedbackContactId?: SortOrder
    favoriteId?: SortOrder
    productId?: SortOrder
    stockId?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    noteId?: SortOrder
    devisId?: SortOrder
    devisItemId?: SortOrder
    taskId?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    actionDetails?: SortOrder
    entityName?: SortOrder
  }

  export type ActivityLogMaxOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    userId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
    relatedUserId?: SortOrder
    accountId?: SortOrder
    sessionId?: SortOrder
    authenticatorId?: SortOrder
    invitationId?: SortOrder
    passwordResetTokenId?: SortOrder
    contactId?: SortOrder
    commentId?: SortOrder
    feedbackContactId?: SortOrder
    favoriteId?: SortOrder
    productId?: SortOrder
    stockId?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    noteId?: SortOrder
    devisId?: SortOrder
    devisItemId?: SortOrder
    taskId?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    actionDetails?: SortOrder
    entityName?: SortOrder
  }

  export type ActivityLogMinOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    userId?: SortOrder
    organisationId?: SortOrder
    createdByUserId?: SortOrder
    updatedByUserId?: SortOrder
    relatedUserId?: SortOrder
    accountId?: SortOrder
    sessionId?: SortOrder
    authenticatorId?: SortOrder
    invitationId?: SortOrder
    passwordResetTokenId?: SortOrder
    contactId?: SortOrder
    commentId?: SortOrder
    feedbackContactId?: SortOrder
    favoriteId?: SortOrder
    productId?: SortOrder
    stockId?: SortOrder
    categoryId?: SortOrder
    brandId?: SortOrder
    noteId?: SortOrder
    devisId?: SortOrder
    devisItemId?: SortOrder
    taskId?: SortOrder
    createdAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    actionDetails?: SortOrder
    entityName?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type AuthenticatorCreateNestedManyWithoutUserInput = {
    create?: XOR<AuthenticatorCreateWithoutUserInput, AuthenticatorUncheckedCreateWithoutUserInput> | AuthenticatorCreateWithoutUserInput[] | AuthenticatorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuthenticatorCreateOrConnectWithoutUserInput | AuthenticatorCreateOrConnectWithoutUserInput[]
    createMany?: AuthenticatorCreateManyUserInputEnvelope
    connect?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
  }

  export type OrganisationCreateNestedManyWithoutMembersInput = {
    create?: XOR<OrganisationCreateWithoutMembersInput, OrganisationUncheckedCreateWithoutMembersInput> | OrganisationCreateWithoutMembersInput[] | OrganisationUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutMembersInput | OrganisationCreateOrConnectWithoutMembersInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type OrganisationCreateNestedManyWithoutOwnerInput = {
    create?: XOR<OrganisationCreateWithoutOwnerInput, OrganisationUncheckedCreateWithoutOwnerInput> | OrganisationCreateWithoutOwnerInput[] | OrganisationUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutOwnerInput | OrganisationCreateOrConnectWithoutOwnerInput[]
    createMany?: OrganisationCreateManyOwnerInputEnvelope
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type InvitationCreateNestedManyWithoutInvitedByInput = {
    create?: XOR<InvitationCreateWithoutInvitedByInput, InvitationUncheckedCreateWithoutInvitedByInput> | InvitationCreateWithoutInvitedByInput[] | InvitationUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInvitedByInput | InvitationCreateOrConnectWithoutInvitedByInput[]
    createMany?: InvitationCreateManyInvitedByInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type PasswordResetTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
  }

  export type FeedbackContactCreateNestedManyWithoutUserInput = {
    create?: XOR<FeedbackContactCreateWithoutUserInput, FeedbackContactUncheckedCreateWithoutUserInput> | FeedbackContactCreateWithoutUserInput[] | FeedbackContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutUserInput | FeedbackContactCreateOrConnectWithoutUserInput[]
    createMany?: FeedbackContactCreateManyUserInputEnvelope
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutUserInput = {
    create?: XOR<NoteCreateWithoutUserInput, NoteUncheckedCreateWithoutUserInput> | NoteCreateWithoutUserInput[] | NoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUserInput | NoteCreateOrConnectWithoutUserInput[]
    createMany?: NoteCreateManyUserInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutCollaboratorsInput = {
    create?: XOR<NoteCreateWithoutCollaboratorsInput, NoteUncheckedCreateWithoutCollaboratorsInput> | NoteCreateWithoutCollaboratorsInput[] | NoteUncheckedCreateWithoutCollaboratorsInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCollaboratorsInput | NoteCreateOrConnectWithoutCollaboratorsInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ActivityLogCreateWithoutCreatedByInput, ActivityLogUncheckedCreateWithoutCreatedByInput> | ActivityLogCreateWithoutCreatedByInput[] | ActivityLogUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCreatedByInput | ActivityLogCreateOrConnectWithoutCreatedByInput[]
    createMany?: ActivityLogCreateManyCreatedByInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ActivityLogCreateWithoutUpdatedByInput, ActivityLogUncheckedCreateWithoutUpdatedByInput> | ActivityLogCreateWithoutUpdatedByInput[] | ActivityLogUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUpdatedByInput | ActivityLogCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ActivityLogCreateManyUpdatedByInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutRelatedUserInput = {
    create?: XOR<ActivityLogCreateWithoutRelatedUserInput, ActivityLogUncheckedCreateWithoutRelatedUserInput> | ActivityLogCreateWithoutRelatedUserInput[] | ActivityLogUncheckedCreateWithoutRelatedUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutRelatedUserInput | ActivityLogCreateOrConnectWithoutRelatedUserInput[]
    createMany?: ActivityLogCreateManyRelatedUserInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutUserInput = {
    create?: XOR<ActivityLogCreateWithoutUserInput, ActivityLogUncheckedCreateWithoutUserInput> | ActivityLogCreateWithoutUserInput[] | ActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUserInput | ActivityLogCreateOrConnectWithoutUserInput[]
    createMany?: ActivityLogCreateManyUserInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutUserInput = {
    create?: XOR<UserCreateWithoutUserInput, UserUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUsersInput = {
    create?: XOR<UserCreateWithoutUsersInput, UserUncheckedCreateWithoutUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<UserCreateWithoutCreatedByUserInput, UserUncheckedCreateWithoutCreatedByUserInput> | UserCreateWithoutCreatedByUserInput[] | UserUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByUserInput | UserCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: UserCreateManyCreatedByUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<UserCreateWithoutUpdatedByUserInput, UserUncheckedCreateWithoutUpdatedByUserInput> | UserCreateWithoutUpdatedByUserInput[] | UserUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByUserInput | UserCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: UserCreateManyUpdatedByUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<FavoriteCreateWithoutCreatedByUserInput, FavoriteUncheckedCreateWithoutCreatedByUserInput> | FavoriteCreateWithoutCreatedByUserInput[] | FavoriteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutCreatedByUserInput | FavoriteCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: FavoriteCreateManyCreatedByUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type OrganisationCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<OrganisationCreateWithoutCreatedByUserInput, OrganisationUncheckedCreateWithoutCreatedByUserInput> | OrganisationCreateWithoutCreatedByUserInput[] | OrganisationUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutCreatedByUserInput | OrganisationCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: OrganisationCreateManyCreatedByUserInputEnvelope
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type OrganisationCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<OrganisationCreateWithoutUpdatedByUserInput, OrganisationUncheckedCreateWithoutUpdatedByUserInput> | OrganisationCreateWithoutUpdatedByUserInput[] | OrganisationUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutUpdatedByUserInput | OrganisationCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: OrganisationCreateManyUpdatedByUserInputEnvelope
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type ContactCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ContactCreateWithoutCreatedByUserInput, ContactUncheckedCreateWithoutCreatedByUserInput> | ContactCreateWithoutCreatedByUserInput[] | ContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutCreatedByUserInput | ContactCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ContactCreateManyCreatedByUserInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type ContactCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ContactCreateWithoutUpdatedByUserInput, ContactUncheckedCreateWithoutUpdatedByUserInput> | ContactCreateWithoutUpdatedByUserInput[] | ContactUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUpdatedByUserInput | ContactCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ContactCreateManyUpdatedByUserInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<CommentCreateWithoutCreatedByUserInput, CommentUncheckedCreateWithoutCreatedByUserInput> | CommentCreateWithoutCreatedByUserInput[] | CommentUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutCreatedByUserInput | CommentCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: CommentCreateManyCreatedByUserInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ProductCreateWithoutCreatedByUserInput, ProductUncheckedCreateWithoutCreatedByUserInput> | ProductCreateWithoutCreatedByUserInput[] | ProductUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByUserInput | ProductCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ProductCreateManyCreatedByUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ProductCreateWithoutUpdatedByUserInput, ProductUncheckedCreateWithoutUpdatedByUserInput> | ProductCreateWithoutUpdatedByUserInput[] | ProductUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByUserInput | ProductCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ProductCreateManyUpdatedByUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type StockCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<StockCreateWithoutCreatedByUserInput, StockUncheckedCreateWithoutCreatedByUserInput> | StockCreateWithoutCreatedByUserInput[] | StockUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutCreatedByUserInput | StockCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: StockCreateManyCreatedByUserInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type StockCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<StockCreateWithoutUpdatedByUserInput, StockUncheckedCreateWithoutUpdatedByUserInput> | StockCreateWithoutUpdatedByUserInput[] | StockUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutUpdatedByUserInput | StockCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: StockCreateManyUpdatedByUserInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<BrandCreateWithoutCreatedByUserInput, BrandUncheckedCreateWithoutCreatedByUserInput> | BrandCreateWithoutCreatedByUserInput[] | BrandUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByUserInput | BrandCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: BrandCreateManyCreatedByUserInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<BrandCreateWithoutUpdatedByUserInput, BrandUncheckedCreateWithoutUpdatedByUserInput> | BrandCreateWithoutUpdatedByUserInput[] | BrandUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByUserInput | BrandCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: BrandCreateManyUpdatedByUserInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<NoteCreateWithoutCreatedByUserInput, NoteUncheckedCreateWithoutCreatedByUserInput> | NoteCreateWithoutCreatedByUserInput[] | NoteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByUserInput | NoteCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: NoteCreateManyCreatedByUserInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<NoteCreateWithoutUpdatedByUserInput, NoteUncheckedCreateWithoutUpdatedByUserInput> | NoteCreateWithoutUpdatedByUserInput[] | NoteUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByUserInput | NoteCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: NoteCreateManyUpdatedByUserInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type DevisCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<DevisCreateWithoutCreatedByUserInput, DevisUncheckedCreateWithoutCreatedByUserInput> | DevisCreateWithoutCreatedByUserInput[] | DevisUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByUserInput | DevisCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: DevisCreateManyCreatedByUserInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type DevisCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<DevisCreateWithoutUpdatedByUserInput, DevisUncheckedCreateWithoutUpdatedByUserInput> | DevisCreateWithoutUpdatedByUserInput[] | DevisUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutUpdatedByUserInput | DevisCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: DevisCreateManyUpdatedByUserInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type FeedbackContactCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<FeedbackContactCreateWithoutCreatedByUserInput, FeedbackContactUncheckedCreateWithoutCreatedByUserInput> | FeedbackContactCreateWithoutCreatedByUserInput[] | FeedbackContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutCreatedByUserInput | FeedbackContactCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: FeedbackContactCreateManyCreatedByUserInputEnvelope
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<TaskCreateWithoutCreatedByUserInput, TaskUncheckedCreateWithoutCreatedByUserInput> | TaskCreateWithoutCreatedByUserInput[] | TaskUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByUserInput | TaskCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: TaskCreateManyCreatedByUserInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<TaskCreateWithoutUpdatedByUserInput, TaskUncheckedCreateWithoutUpdatedByUserInput> | TaskCreateWithoutUpdatedByUserInput[] | TaskUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByUserInput | TaskCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: TaskCreateManyUpdatedByUserInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type DevisItemCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<DevisItemCreateWithoutCreatedByUserInput, DevisItemUncheckedCreateWithoutCreatedByUserInput> | DevisItemCreateWithoutCreatedByUserInput[] | DevisItemUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutCreatedByUserInput | DevisItemCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: DevisItemCreateManyCreatedByUserInputEnvelope
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
  }

  export type DevisCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<DevisCreateWithoutCreatedByInput, DevisUncheckedCreateWithoutCreatedByInput> | DevisCreateWithoutCreatedByInput[] | DevisUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByInput | DevisCreateOrConnectWithoutCreatedByInput[]
    createMany?: DevisCreateManyCreatedByInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type AuthenticatorUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AuthenticatorCreateWithoutUserInput, AuthenticatorUncheckedCreateWithoutUserInput> | AuthenticatorCreateWithoutUserInput[] | AuthenticatorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuthenticatorCreateOrConnectWithoutUserInput | AuthenticatorCreateOrConnectWithoutUserInput[]
    createMany?: AuthenticatorCreateManyUserInputEnvelope
    connect?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
  }

  export type OrganisationUncheckedCreateNestedManyWithoutMembersInput = {
    create?: XOR<OrganisationCreateWithoutMembersInput, OrganisationUncheckedCreateWithoutMembersInput> | OrganisationCreateWithoutMembersInput[] | OrganisationUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutMembersInput | OrganisationCreateOrConnectWithoutMembersInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type OrganisationUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<OrganisationCreateWithoutOwnerInput, OrganisationUncheckedCreateWithoutOwnerInput> | OrganisationCreateWithoutOwnerInput[] | OrganisationUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutOwnerInput | OrganisationCreateOrConnectWithoutOwnerInput[]
    createMany?: OrganisationCreateManyOwnerInputEnvelope
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type InvitationUncheckedCreateNestedManyWithoutInvitedByInput = {
    create?: XOR<InvitationCreateWithoutInvitedByInput, InvitationUncheckedCreateWithoutInvitedByInput> | InvitationCreateWithoutInvitedByInput[] | InvitationUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInvitedByInput | InvitationCreateOrConnectWithoutInvitedByInput[]
    createMany?: InvitationCreateManyInvitedByInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
  }

  export type FeedbackContactUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FeedbackContactCreateWithoutUserInput, FeedbackContactUncheckedCreateWithoutUserInput> | FeedbackContactCreateWithoutUserInput[] | FeedbackContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutUserInput | FeedbackContactCreateOrConnectWithoutUserInput[]
    createMany?: FeedbackContactCreateManyUserInputEnvelope
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NoteCreateWithoutUserInput, NoteUncheckedCreateWithoutUserInput> | NoteCreateWithoutUserInput[] | NoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUserInput | NoteCreateOrConnectWithoutUserInput[]
    createMany?: NoteCreateManyUserInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutCollaboratorsInput = {
    create?: XOR<NoteCreateWithoutCollaboratorsInput, NoteUncheckedCreateWithoutCollaboratorsInput> | NoteCreateWithoutCollaboratorsInput[] | NoteUncheckedCreateWithoutCollaboratorsInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCollaboratorsInput | NoteCreateOrConnectWithoutCollaboratorsInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutAssigneeInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ActivityLogCreateWithoutCreatedByInput, ActivityLogUncheckedCreateWithoutCreatedByInput> | ActivityLogCreateWithoutCreatedByInput[] | ActivityLogUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCreatedByInput | ActivityLogCreateOrConnectWithoutCreatedByInput[]
    createMany?: ActivityLogCreateManyCreatedByInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ActivityLogCreateWithoutUpdatedByInput, ActivityLogUncheckedCreateWithoutUpdatedByInput> | ActivityLogCreateWithoutUpdatedByInput[] | ActivityLogUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUpdatedByInput | ActivityLogCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ActivityLogCreateManyUpdatedByInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput = {
    create?: XOR<ActivityLogCreateWithoutRelatedUserInput, ActivityLogUncheckedCreateWithoutRelatedUserInput> | ActivityLogCreateWithoutRelatedUserInput[] | ActivityLogUncheckedCreateWithoutRelatedUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutRelatedUserInput | ActivityLogCreateOrConnectWithoutRelatedUserInput[]
    createMany?: ActivityLogCreateManyRelatedUserInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ActivityLogCreateWithoutUserInput, ActivityLogUncheckedCreateWithoutUserInput> | ActivityLogCreateWithoutUserInput[] | ActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUserInput | ActivityLogCreateOrConnectWithoutUserInput[]
    createMany?: ActivityLogCreateManyUserInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<UserCreateWithoutCreatedByUserInput, UserUncheckedCreateWithoutCreatedByUserInput> | UserCreateWithoutCreatedByUserInput[] | UserUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByUserInput | UserCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: UserCreateManyCreatedByUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<UserCreateWithoutUpdatedByUserInput, UserUncheckedCreateWithoutUpdatedByUserInput> | UserCreateWithoutUpdatedByUserInput[] | UserUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByUserInput | UserCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: UserCreateManyUpdatedByUserInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<FavoriteCreateWithoutCreatedByUserInput, FavoriteUncheckedCreateWithoutCreatedByUserInput> | FavoriteCreateWithoutCreatedByUserInput[] | FavoriteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutCreatedByUserInput | FavoriteCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: FavoriteCreateManyCreatedByUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<OrganisationCreateWithoutCreatedByUserInput, OrganisationUncheckedCreateWithoutCreatedByUserInput> | OrganisationCreateWithoutCreatedByUserInput[] | OrganisationUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutCreatedByUserInput | OrganisationCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: OrganisationCreateManyCreatedByUserInputEnvelope
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<OrganisationCreateWithoutUpdatedByUserInput, OrganisationUncheckedCreateWithoutUpdatedByUserInput> | OrganisationCreateWithoutUpdatedByUserInput[] | OrganisationUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutUpdatedByUserInput | OrganisationCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: OrganisationCreateManyUpdatedByUserInputEnvelope
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ContactCreateWithoutCreatedByUserInput, ContactUncheckedCreateWithoutCreatedByUserInput> | ContactCreateWithoutCreatedByUserInput[] | ContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutCreatedByUserInput | ContactCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ContactCreateManyCreatedByUserInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ContactCreateWithoutUpdatedByUserInput, ContactUncheckedCreateWithoutUpdatedByUserInput> | ContactCreateWithoutUpdatedByUserInput[] | ContactUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUpdatedByUserInput | ContactCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ContactCreateManyUpdatedByUserInputEnvelope
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<CommentCreateWithoutCreatedByUserInput, CommentUncheckedCreateWithoutCreatedByUserInput> | CommentCreateWithoutCreatedByUserInput[] | CommentUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutCreatedByUserInput | CommentCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: CommentCreateManyCreatedByUserInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ProductCreateWithoutCreatedByUserInput, ProductUncheckedCreateWithoutCreatedByUserInput> | ProductCreateWithoutCreatedByUserInput[] | ProductUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByUserInput | ProductCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ProductCreateManyCreatedByUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ProductCreateWithoutUpdatedByUserInput, ProductUncheckedCreateWithoutUpdatedByUserInput> | ProductCreateWithoutUpdatedByUserInput[] | ProductUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByUserInput | ProductCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ProductCreateManyUpdatedByUserInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type StockUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<StockCreateWithoutCreatedByUserInput, StockUncheckedCreateWithoutCreatedByUserInput> | StockCreateWithoutCreatedByUserInput[] | StockUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutCreatedByUserInput | StockCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: StockCreateManyCreatedByUserInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type StockUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<StockCreateWithoutUpdatedByUserInput, StockUncheckedCreateWithoutUpdatedByUserInput> | StockCreateWithoutUpdatedByUserInput[] | StockUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutUpdatedByUserInput | StockCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: StockCreateManyUpdatedByUserInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<BrandCreateWithoutCreatedByUserInput, BrandUncheckedCreateWithoutCreatedByUserInput> | BrandCreateWithoutCreatedByUserInput[] | BrandUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByUserInput | BrandCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: BrandCreateManyCreatedByUserInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<BrandCreateWithoutUpdatedByUserInput, BrandUncheckedCreateWithoutUpdatedByUserInput> | BrandCreateWithoutUpdatedByUserInput[] | BrandUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByUserInput | BrandCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: BrandCreateManyUpdatedByUserInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<NoteCreateWithoutCreatedByUserInput, NoteUncheckedCreateWithoutCreatedByUserInput> | NoteCreateWithoutCreatedByUserInput[] | NoteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByUserInput | NoteCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: NoteCreateManyCreatedByUserInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<NoteCreateWithoutUpdatedByUserInput, NoteUncheckedCreateWithoutUpdatedByUserInput> | NoteCreateWithoutUpdatedByUserInput[] | NoteUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByUserInput | NoteCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: NoteCreateManyUpdatedByUserInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type DevisUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<DevisCreateWithoutCreatedByUserInput, DevisUncheckedCreateWithoutCreatedByUserInput> | DevisCreateWithoutCreatedByUserInput[] | DevisUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByUserInput | DevisCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: DevisCreateManyCreatedByUserInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<DevisCreateWithoutUpdatedByUserInput, DevisUncheckedCreateWithoutUpdatedByUserInput> | DevisCreateWithoutUpdatedByUserInput[] | DevisUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutUpdatedByUserInput | DevisCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: DevisCreateManyUpdatedByUserInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<FeedbackContactCreateWithoutCreatedByUserInput, FeedbackContactUncheckedCreateWithoutCreatedByUserInput> | FeedbackContactCreateWithoutCreatedByUserInput[] | FeedbackContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutCreatedByUserInput | FeedbackContactCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: FeedbackContactCreateManyCreatedByUserInputEnvelope
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<TaskCreateWithoutCreatedByUserInput, TaskUncheckedCreateWithoutCreatedByUserInput> | TaskCreateWithoutCreatedByUserInput[] | TaskUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByUserInput | TaskCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: TaskCreateManyCreatedByUserInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<TaskCreateWithoutUpdatedByUserInput, TaskUncheckedCreateWithoutUpdatedByUserInput> | TaskCreateWithoutUpdatedByUserInput[] | TaskUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByUserInput | TaskCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: TaskCreateManyUpdatedByUserInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<DevisItemCreateWithoutCreatedByUserInput, DevisItemUncheckedCreateWithoutCreatedByUserInput> | DevisItemCreateWithoutCreatedByUserInput[] | DevisItemUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutCreatedByUserInput | DevisItemCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: DevisItemCreateManyCreatedByUserInputEnvelope
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
  }

  export type DevisUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<DevisCreateWithoutCreatedByInput, DevisUncheckedCreateWithoutCreatedByInput> | DevisCreateWithoutCreatedByInput[] | DevisUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByInput | DevisCreateOrConnectWithoutCreatedByInput[]
    createMany?: DevisCreateManyCreatedByInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type EnumAccessTypeFieldUpdateOperationsInput = {
    set?: $Enums.AccessType
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type AuthenticatorUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuthenticatorCreateWithoutUserInput, AuthenticatorUncheckedCreateWithoutUserInput> | AuthenticatorCreateWithoutUserInput[] | AuthenticatorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuthenticatorCreateOrConnectWithoutUserInput | AuthenticatorCreateOrConnectWithoutUserInput[]
    upsert?: AuthenticatorUpsertWithWhereUniqueWithoutUserInput | AuthenticatorUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuthenticatorCreateManyUserInputEnvelope
    set?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    disconnect?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    delete?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    connect?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    update?: AuthenticatorUpdateWithWhereUniqueWithoutUserInput | AuthenticatorUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuthenticatorUpdateManyWithWhereWithoutUserInput | AuthenticatorUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuthenticatorScalarWhereInput | AuthenticatorScalarWhereInput[]
  }

  export type OrganisationUpdateManyWithoutMembersNestedInput = {
    create?: XOR<OrganisationCreateWithoutMembersInput, OrganisationUncheckedCreateWithoutMembersInput> | OrganisationCreateWithoutMembersInput[] | OrganisationUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutMembersInput | OrganisationCreateOrConnectWithoutMembersInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutMembersInput | OrganisationUpsertWithWhereUniqueWithoutMembersInput[]
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutMembersInput | OrganisationUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutMembersInput | OrganisationUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type OrganisationUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<OrganisationCreateWithoutOwnerInput, OrganisationUncheckedCreateWithoutOwnerInput> | OrganisationCreateWithoutOwnerInput[] | OrganisationUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutOwnerInput | OrganisationCreateOrConnectWithoutOwnerInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutOwnerInput | OrganisationUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: OrganisationCreateManyOwnerInputEnvelope
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutOwnerInput | OrganisationUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutOwnerInput | OrganisationUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type InvitationUpdateManyWithoutInvitedByNestedInput = {
    create?: XOR<InvitationCreateWithoutInvitedByInput, InvitationUncheckedCreateWithoutInvitedByInput> | InvitationCreateWithoutInvitedByInput[] | InvitationUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInvitedByInput | InvitationCreateOrConnectWithoutInvitedByInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutInvitedByInput | InvitationUpsertWithWhereUniqueWithoutInvitedByInput[]
    createMany?: InvitationCreateManyInvitedByInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutInvitedByInput | InvitationUpdateWithWhereUniqueWithoutInvitedByInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutInvitedByInput | InvitationUpdateManyWithWhereWithoutInvitedByInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type PasswordResetTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    upsert?: PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput | PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    set?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    disconnect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    delete?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    update?: PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput | PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PasswordResetTokenUpdateManyWithWhereWithoutUserInput | PasswordResetTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
  }

  export type FeedbackContactUpdateManyWithoutUserNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutUserInput, FeedbackContactUncheckedCreateWithoutUserInput> | FeedbackContactCreateWithoutUserInput[] | FeedbackContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutUserInput | FeedbackContactCreateOrConnectWithoutUserInput[]
    upsert?: FeedbackContactUpsertWithWhereUniqueWithoutUserInput | FeedbackContactUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FeedbackContactCreateManyUserInputEnvelope
    set?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    disconnect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    delete?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    update?: FeedbackContactUpdateWithWhereUniqueWithoutUserInput | FeedbackContactUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FeedbackContactUpdateManyWithWhereWithoutUserInput | FeedbackContactUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutUserNestedInput = {
    create?: XOR<NoteCreateWithoutUserInput, NoteUncheckedCreateWithoutUserInput> | NoteCreateWithoutUserInput[] | NoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUserInput | NoteCreateOrConnectWithoutUserInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutUserInput | NoteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NoteCreateManyUserInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutUserInput | NoteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutUserInput | NoteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutCollaboratorsNestedInput = {
    create?: XOR<NoteCreateWithoutCollaboratorsInput, NoteUncheckedCreateWithoutCollaboratorsInput> | NoteCreateWithoutCollaboratorsInput[] | NoteUncheckedCreateWithoutCollaboratorsInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCollaboratorsInput | NoteCreateOrConnectWithoutCollaboratorsInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutCollaboratorsInput | NoteUpsertWithWhereUniqueWithoutCollaboratorsInput[]
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutCollaboratorsInput | NoteUpdateWithWhereUniqueWithoutCollaboratorsInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutCollaboratorsInput | NoteUpdateManyWithWhereWithoutCollaboratorsInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssigneeInput | TaskUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssigneeInput | TaskUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssigneeInput | TaskUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCreatedByInput | TaskUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCreatedByInput | TaskUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCreatedByInput | TaskUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ActivityLogCreateWithoutCreatedByInput, ActivityLogUncheckedCreateWithoutCreatedByInput> | ActivityLogCreateWithoutCreatedByInput[] | ActivityLogUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCreatedByInput | ActivityLogCreateOrConnectWithoutCreatedByInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutCreatedByInput | ActivityLogUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ActivityLogCreateManyCreatedByInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutCreatedByInput | ActivityLogUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutCreatedByInput | ActivityLogUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ActivityLogCreateWithoutUpdatedByInput, ActivityLogUncheckedCreateWithoutUpdatedByInput> | ActivityLogCreateWithoutUpdatedByInput[] | ActivityLogUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUpdatedByInput | ActivityLogCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutUpdatedByInput | ActivityLogUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ActivityLogCreateManyUpdatedByInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutUpdatedByInput | ActivityLogUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutUpdatedByInput | ActivityLogUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutRelatedUserNestedInput = {
    create?: XOR<ActivityLogCreateWithoutRelatedUserInput, ActivityLogUncheckedCreateWithoutRelatedUserInput> | ActivityLogCreateWithoutRelatedUserInput[] | ActivityLogUncheckedCreateWithoutRelatedUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutRelatedUserInput | ActivityLogCreateOrConnectWithoutRelatedUserInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutRelatedUserInput | ActivityLogUpsertWithWhereUniqueWithoutRelatedUserInput[]
    createMany?: ActivityLogCreateManyRelatedUserInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutRelatedUserInput | ActivityLogUpdateWithWhereUniqueWithoutRelatedUserInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutRelatedUserInput | ActivityLogUpdateManyWithWhereWithoutRelatedUserInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<ActivityLogCreateWithoutUserInput, ActivityLogUncheckedCreateWithoutUserInput> | ActivityLogCreateWithoutUserInput[] | ActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUserInput | ActivityLogCreateOrConnectWithoutUserInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutUserInput | ActivityLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ActivityLogCreateManyUserInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutUserInput | ActivityLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutUserInput | ActivityLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserCreateWithoutUserInput, UserUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserInput
    upsert?: UserUpsertWithoutUserInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserInput, UserUpdateWithoutUserInput>, UserUncheckedUpdateWithoutUserInput>
  }

  export type UserUpdateOneWithoutUsersNestedInput = {
    create?: XOR<UserCreateWithoutUsersInput, UserUncheckedCreateWithoutUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUsersInput
    upsert?: UserUpsertWithoutUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUsersInput, UserUpdateWithoutUsersInput>, UserUncheckedUpdateWithoutUsersInput>
  }

  export type UserUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByUserInput, UserUncheckedCreateWithoutCreatedByUserInput> | UserCreateWithoutCreatedByUserInput[] | UserUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByUserInput | UserCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByUserInput | UserUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: UserCreateManyCreatedByUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByUserInput | UserUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByUserInput | UserUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByUserInput, UserUncheckedCreateWithoutUpdatedByUserInput> | UserCreateWithoutUpdatedByUserInput[] | UserUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByUserInput | UserCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByUserInput | UserUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: UserCreateManyUpdatedByUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByUserInput | UserUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByUserInput | UserUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutCreatedByUserInput, FavoriteUncheckedCreateWithoutCreatedByUserInput> | FavoriteCreateWithoutCreatedByUserInput[] | FavoriteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutCreatedByUserInput | FavoriteCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutCreatedByUserInput | FavoriteUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: FavoriteCreateManyCreatedByUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutCreatedByUserInput | FavoriteUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutCreatedByUserInput | FavoriteUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type OrganisationUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<OrganisationCreateWithoutCreatedByUserInput, OrganisationUncheckedCreateWithoutCreatedByUserInput> | OrganisationCreateWithoutCreatedByUserInput[] | OrganisationUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutCreatedByUserInput | OrganisationCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutCreatedByUserInput | OrganisationUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: OrganisationCreateManyCreatedByUserInputEnvelope
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutCreatedByUserInput | OrganisationUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutCreatedByUserInput | OrganisationUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type OrganisationUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<OrganisationCreateWithoutUpdatedByUserInput, OrganisationUncheckedCreateWithoutUpdatedByUserInput> | OrganisationCreateWithoutUpdatedByUserInput[] | OrganisationUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutUpdatedByUserInput | OrganisationCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutUpdatedByUserInput | OrganisationUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: OrganisationCreateManyUpdatedByUserInputEnvelope
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutUpdatedByUserInput | OrganisationUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutUpdatedByUserInput | OrganisationUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type ContactUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ContactCreateWithoutCreatedByUserInput, ContactUncheckedCreateWithoutCreatedByUserInput> | ContactCreateWithoutCreatedByUserInput[] | ContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutCreatedByUserInput | ContactCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutCreatedByUserInput | ContactUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ContactCreateManyCreatedByUserInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutCreatedByUserInput | ContactUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutCreatedByUserInput | ContactUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type ContactUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ContactCreateWithoutUpdatedByUserInput, ContactUncheckedCreateWithoutUpdatedByUserInput> | ContactCreateWithoutUpdatedByUserInput[] | ContactUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUpdatedByUserInput | ContactCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutUpdatedByUserInput | ContactUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ContactCreateManyUpdatedByUserInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutUpdatedByUserInput | ContactUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutUpdatedByUserInput | ContactUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<CommentCreateWithoutCreatedByUserInput, CommentUncheckedCreateWithoutCreatedByUserInput> | CommentCreateWithoutCreatedByUserInput[] | CommentUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutCreatedByUserInput | CommentCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutCreatedByUserInput | CommentUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: CommentCreateManyCreatedByUserInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutCreatedByUserInput | CommentUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutCreatedByUserInput | CommentUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput | CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput | CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCreatedByUserInput | CategoryUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUpdatedByUserInput | CategoryUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ProductCreateWithoutCreatedByUserInput, ProductUncheckedCreateWithoutCreatedByUserInput> | ProductCreateWithoutCreatedByUserInput[] | ProductUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByUserInput | ProductCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCreatedByUserInput | ProductUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ProductCreateManyCreatedByUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCreatedByUserInput | ProductUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCreatedByUserInput | ProductUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ProductCreateWithoutUpdatedByUserInput, ProductUncheckedCreateWithoutUpdatedByUserInput> | ProductCreateWithoutUpdatedByUserInput[] | ProductUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByUserInput | ProductCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUpdatedByUserInput | ProductUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ProductCreateManyUpdatedByUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUpdatedByUserInput | ProductUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUpdatedByUserInput | ProductUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type StockUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<StockCreateWithoutCreatedByUserInput, StockUncheckedCreateWithoutCreatedByUserInput> | StockCreateWithoutCreatedByUserInput[] | StockUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutCreatedByUserInput | StockCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutCreatedByUserInput | StockUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: StockCreateManyCreatedByUserInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutCreatedByUserInput | StockUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: StockUpdateManyWithWhereWithoutCreatedByUserInput | StockUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type StockUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<StockCreateWithoutUpdatedByUserInput, StockUncheckedCreateWithoutUpdatedByUserInput> | StockCreateWithoutUpdatedByUserInput[] | StockUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutUpdatedByUserInput | StockCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutUpdatedByUserInput | StockUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: StockCreateManyUpdatedByUserInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutUpdatedByUserInput | StockUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: StockUpdateManyWithWhereWithoutUpdatedByUserInput | StockUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<BrandCreateWithoutCreatedByUserInput, BrandUncheckedCreateWithoutCreatedByUserInput> | BrandCreateWithoutCreatedByUserInput[] | BrandUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByUserInput | BrandCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutCreatedByUserInput | BrandUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: BrandCreateManyCreatedByUserInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutCreatedByUserInput | BrandUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutCreatedByUserInput | BrandUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<BrandCreateWithoutUpdatedByUserInput, BrandUncheckedCreateWithoutUpdatedByUserInput> | BrandCreateWithoutUpdatedByUserInput[] | BrandUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByUserInput | BrandCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutUpdatedByUserInput | BrandUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: BrandCreateManyUpdatedByUserInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutUpdatedByUserInput | BrandUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutUpdatedByUserInput | BrandUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<NoteCreateWithoutCreatedByUserInput, NoteUncheckedCreateWithoutCreatedByUserInput> | NoteCreateWithoutCreatedByUserInput[] | NoteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByUserInput | NoteCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutCreatedByUserInput | NoteUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: NoteCreateManyCreatedByUserInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutCreatedByUserInput | NoteUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutCreatedByUserInput | NoteUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<NoteCreateWithoutUpdatedByUserInput, NoteUncheckedCreateWithoutUpdatedByUserInput> | NoteCreateWithoutUpdatedByUserInput[] | NoteUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByUserInput | NoteCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutUpdatedByUserInput | NoteUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: NoteCreateManyUpdatedByUserInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutUpdatedByUserInput | NoteUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutUpdatedByUserInput | NoteUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type DevisUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<DevisCreateWithoutCreatedByUserInput, DevisUncheckedCreateWithoutCreatedByUserInput> | DevisCreateWithoutCreatedByUserInput[] | DevisUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByUserInput | DevisCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutCreatedByUserInput | DevisUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: DevisCreateManyCreatedByUserInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutCreatedByUserInput | DevisUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutCreatedByUserInput | DevisUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type DevisUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<DevisCreateWithoutUpdatedByUserInput, DevisUncheckedCreateWithoutUpdatedByUserInput> | DevisCreateWithoutUpdatedByUserInput[] | DevisUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutUpdatedByUserInput | DevisCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutUpdatedByUserInput | DevisUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: DevisCreateManyUpdatedByUserInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutUpdatedByUserInput | DevisUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutUpdatedByUserInput | DevisUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type FeedbackContactUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutCreatedByUserInput, FeedbackContactUncheckedCreateWithoutCreatedByUserInput> | FeedbackContactCreateWithoutCreatedByUserInput[] | FeedbackContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutCreatedByUserInput | FeedbackContactCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: FeedbackContactUpsertWithWhereUniqueWithoutCreatedByUserInput | FeedbackContactUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: FeedbackContactCreateManyCreatedByUserInputEnvelope
    set?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    disconnect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    delete?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    update?: FeedbackContactUpdateWithWhereUniqueWithoutCreatedByUserInput | FeedbackContactUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: FeedbackContactUpdateManyWithWhereWithoutCreatedByUserInput | FeedbackContactUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<TaskCreateWithoutCreatedByUserInput, TaskUncheckedCreateWithoutCreatedByUserInput> | TaskCreateWithoutCreatedByUserInput[] | TaskUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByUserInput | TaskCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCreatedByUserInput | TaskUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: TaskCreateManyCreatedByUserInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCreatedByUserInput | TaskUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCreatedByUserInput | TaskUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<TaskCreateWithoutUpdatedByUserInput, TaskUncheckedCreateWithoutUpdatedByUserInput> | TaskCreateWithoutUpdatedByUserInput[] | TaskUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByUserInput | TaskCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutUpdatedByUserInput | TaskUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: TaskCreateManyUpdatedByUserInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutUpdatedByUserInput | TaskUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutUpdatedByUserInput | TaskUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type DevisItemUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<DevisItemCreateWithoutCreatedByUserInput, DevisItemUncheckedCreateWithoutCreatedByUserInput> | DevisItemCreateWithoutCreatedByUserInput[] | DevisItemUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutCreatedByUserInput | DevisItemCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: DevisItemUpsertWithWhereUniqueWithoutCreatedByUserInput | DevisItemUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: DevisItemCreateManyCreatedByUserInputEnvelope
    set?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    disconnect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    delete?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    update?: DevisItemUpdateWithWhereUniqueWithoutCreatedByUserInput | DevisItemUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: DevisItemUpdateManyWithWhereWithoutCreatedByUserInput | DevisItemUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
  }

  export type DevisUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<DevisCreateWithoutCreatedByInput, DevisUncheckedCreateWithoutCreatedByInput> | DevisCreateWithoutCreatedByInput[] | DevisUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByInput | DevisCreateOrConnectWithoutCreatedByInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutCreatedByInput | DevisUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: DevisCreateManyCreatedByInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutCreatedByInput | DevisUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutCreatedByInput | DevisUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type AuthenticatorUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuthenticatorCreateWithoutUserInput, AuthenticatorUncheckedCreateWithoutUserInput> | AuthenticatorCreateWithoutUserInput[] | AuthenticatorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuthenticatorCreateOrConnectWithoutUserInput | AuthenticatorCreateOrConnectWithoutUserInput[]
    upsert?: AuthenticatorUpsertWithWhereUniqueWithoutUserInput | AuthenticatorUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuthenticatorCreateManyUserInputEnvelope
    set?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    disconnect?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    delete?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    connect?: AuthenticatorWhereUniqueInput | AuthenticatorWhereUniqueInput[]
    update?: AuthenticatorUpdateWithWhereUniqueWithoutUserInput | AuthenticatorUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuthenticatorUpdateManyWithWhereWithoutUserInput | AuthenticatorUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuthenticatorScalarWhereInput | AuthenticatorScalarWhereInput[]
  }

  export type OrganisationUncheckedUpdateManyWithoutMembersNestedInput = {
    create?: XOR<OrganisationCreateWithoutMembersInput, OrganisationUncheckedCreateWithoutMembersInput> | OrganisationCreateWithoutMembersInput[] | OrganisationUncheckedCreateWithoutMembersInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutMembersInput | OrganisationCreateOrConnectWithoutMembersInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutMembersInput | OrganisationUpsertWithWhereUniqueWithoutMembersInput[]
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutMembersInput | OrganisationUpdateWithWhereUniqueWithoutMembersInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutMembersInput | OrganisationUpdateManyWithWhereWithoutMembersInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type OrganisationUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<OrganisationCreateWithoutOwnerInput, OrganisationUncheckedCreateWithoutOwnerInput> | OrganisationCreateWithoutOwnerInput[] | OrganisationUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutOwnerInput | OrganisationCreateOrConnectWithoutOwnerInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutOwnerInput | OrganisationUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: OrganisationCreateManyOwnerInputEnvelope
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutOwnerInput | OrganisationUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutOwnerInput | OrganisationUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type InvitationUncheckedUpdateManyWithoutInvitedByNestedInput = {
    create?: XOR<InvitationCreateWithoutInvitedByInput, InvitationUncheckedCreateWithoutInvitedByInput> | InvitationCreateWithoutInvitedByInput[] | InvitationUncheckedCreateWithoutInvitedByInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutInvitedByInput | InvitationCreateOrConnectWithoutInvitedByInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutInvitedByInput | InvitationUpsertWithWhereUniqueWithoutInvitedByInput[]
    createMany?: InvitationCreateManyInvitedByInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutInvitedByInput | InvitationUpdateWithWhereUniqueWithoutInvitedByInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutInvitedByInput | InvitationUpdateManyWithWhereWithoutInvitedByInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput> | PasswordResetTokenCreateWithoutUserInput[] | PasswordResetTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutUserInput | PasswordResetTokenCreateOrConnectWithoutUserInput[]
    upsert?: PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput | PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PasswordResetTokenCreateManyUserInputEnvelope
    set?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    disconnect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    delete?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    connect?: PasswordResetTokenWhereUniqueInput | PasswordResetTokenWhereUniqueInput[]
    update?: PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput | PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PasswordResetTokenUpdateManyWithWhereWithoutUserInput | PasswordResetTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
  }

  export type FeedbackContactUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutUserInput, FeedbackContactUncheckedCreateWithoutUserInput> | FeedbackContactCreateWithoutUserInput[] | FeedbackContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutUserInput | FeedbackContactCreateOrConnectWithoutUserInput[]
    upsert?: FeedbackContactUpsertWithWhereUniqueWithoutUserInput | FeedbackContactUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FeedbackContactCreateManyUserInputEnvelope
    set?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    disconnect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    delete?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    update?: FeedbackContactUpdateWithWhereUniqueWithoutUserInput | FeedbackContactUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FeedbackContactUpdateManyWithWhereWithoutUserInput | FeedbackContactUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NoteCreateWithoutUserInput, NoteUncheckedCreateWithoutUserInput> | NoteCreateWithoutUserInput[] | NoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUserInput | NoteCreateOrConnectWithoutUserInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutUserInput | NoteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NoteCreateManyUserInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutUserInput | NoteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutUserInput | NoteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput = {
    create?: XOR<NoteCreateWithoutCollaboratorsInput, NoteUncheckedCreateWithoutCollaboratorsInput> | NoteCreateWithoutCollaboratorsInput[] | NoteUncheckedCreateWithoutCollaboratorsInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCollaboratorsInput | NoteCreateOrConnectWithoutCollaboratorsInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutCollaboratorsInput | NoteUpsertWithWhereUniqueWithoutCollaboratorsInput[]
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutCollaboratorsInput | NoteUpdateWithWhereUniqueWithoutCollaboratorsInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutCollaboratorsInput | NoteUpdateManyWithWhereWithoutCollaboratorsInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutAssigneeNestedInput = {
    create?: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput> | TaskCreateWithoutAssigneeInput[] | TaskUncheckedCreateWithoutAssigneeInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutAssigneeInput | TaskCreateOrConnectWithoutAssigneeInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutAssigneeInput | TaskUpsertWithWhereUniqueWithoutAssigneeInput[]
    createMany?: TaskCreateManyAssigneeInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutAssigneeInput | TaskUpdateWithWhereUniqueWithoutAssigneeInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutAssigneeInput | TaskUpdateManyWithWhereWithoutAssigneeInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput> | TaskCreateWithoutCreatedByInput[] | TaskUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByInput | TaskCreateOrConnectWithoutCreatedByInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCreatedByInput | TaskUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: TaskCreateManyCreatedByInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCreatedByInput | TaskUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCreatedByInput | TaskUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ActivityLogCreateWithoutCreatedByInput, ActivityLogUncheckedCreateWithoutCreatedByInput> | ActivityLogCreateWithoutCreatedByInput[] | ActivityLogUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCreatedByInput | ActivityLogCreateOrConnectWithoutCreatedByInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutCreatedByInput | ActivityLogUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ActivityLogCreateManyCreatedByInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutCreatedByInput | ActivityLogUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutCreatedByInput | ActivityLogUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ActivityLogCreateWithoutUpdatedByInput, ActivityLogUncheckedCreateWithoutUpdatedByInput> | ActivityLogCreateWithoutUpdatedByInput[] | ActivityLogUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUpdatedByInput | ActivityLogCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutUpdatedByInput | ActivityLogUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ActivityLogCreateManyUpdatedByInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutUpdatedByInput | ActivityLogUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutUpdatedByInput | ActivityLogUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput = {
    create?: XOR<ActivityLogCreateWithoutRelatedUserInput, ActivityLogUncheckedCreateWithoutRelatedUserInput> | ActivityLogCreateWithoutRelatedUserInput[] | ActivityLogUncheckedCreateWithoutRelatedUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutRelatedUserInput | ActivityLogCreateOrConnectWithoutRelatedUserInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutRelatedUserInput | ActivityLogUpsertWithWhereUniqueWithoutRelatedUserInput[]
    createMany?: ActivityLogCreateManyRelatedUserInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutRelatedUserInput | ActivityLogUpdateWithWhereUniqueWithoutRelatedUserInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutRelatedUserInput | ActivityLogUpdateManyWithWhereWithoutRelatedUserInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ActivityLogCreateWithoutUserInput, ActivityLogUncheckedCreateWithoutUserInput> | ActivityLogCreateWithoutUserInput[] | ActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutUserInput | ActivityLogCreateOrConnectWithoutUserInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutUserInput | ActivityLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ActivityLogCreateManyUserInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutUserInput | ActivityLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutUserInput | ActivityLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByUserInput, UserUncheckedCreateWithoutCreatedByUserInput> | UserCreateWithoutCreatedByUserInput[] | UserUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByUserInput | UserCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByUserInput | UserUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: UserCreateManyCreatedByUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByUserInput | UserUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByUserInput | UserUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByUserInput, UserUncheckedCreateWithoutUpdatedByUserInput> | UserCreateWithoutUpdatedByUserInput[] | UserUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByUserInput | UserCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByUserInput | UserUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: UserCreateManyUpdatedByUserInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByUserInput | UserUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByUserInput | UserUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutCreatedByUserInput, FavoriteUncheckedCreateWithoutCreatedByUserInput> | FavoriteCreateWithoutCreatedByUserInput[] | FavoriteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutCreatedByUserInput | FavoriteCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutCreatedByUserInput | FavoriteUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: FavoriteCreateManyCreatedByUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutCreatedByUserInput | FavoriteUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutCreatedByUserInput | FavoriteUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<OrganisationCreateWithoutCreatedByUserInput, OrganisationUncheckedCreateWithoutCreatedByUserInput> | OrganisationCreateWithoutCreatedByUserInput[] | OrganisationUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutCreatedByUserInput | OrganisationCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutCreatedByUserInput | OrganisationUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: OrganisationCreateManyCreatedByUserInputEnvelope
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutCreatedByUserInput | OrganisationUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutCreatedByUserInput | OrganisationUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<OrganisationCreateWithoutUpdatedByUserInput, OrganisationUncheckedCreateWithoutUpdatedByUserInput> | OrganisationCreateWithoutUpdatedByUserInput[] | OrganisationUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutUpdatedByUserInput | OrganisationCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutUpdatedByUserInput | OrganisationUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: OrganisationCreateManyUpdatedByUserInputEnvelope
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutUpdatedByUserInput | OrganisationUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutUpdatedByUserInput | OrganisationUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ContactCreateWithoutCreatedByUserInput, ContactUncheckedCreateWithoutCreatedByUserInput> | ContactCreateWithoutCreatedByUserInput[] | ContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutCreatedByUserInput | ContactCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutCreatedByUserInput | ContactUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ContactCreateManyCreatedByUserInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutCreatedByUserInput | ContactUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutCreatedByUserInput | ContactUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ContactCreateWithoutUpdatedByUserInput, ContactUncheckedCreateWithoutUpdatedByUserInput> | ContactCreateWithoutUpdatedByUserInput[] | ContactUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutUpdatedByUserInput | ContactCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutUpdatedByUserInput | ContactUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ContactCreateManyUpdatedByUserInputEnvelope
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutUpdatedByUserInput | ContactUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutUpdatedByUserInput | ContactUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<CommentCreateWithoutCreatedByUserInput, CommentUncheckedCreateWithoutCreatedByUserInput> | CommentCreateWithoutCreatedByUserInput[] | CommentUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutCreatedByUserInput | CommentCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutCreatedByUserInput | CommentUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: CommentCreateManyCreatedByUserInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutCreatedByUserInput | CommentUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutCreatedByUserInput | CommentUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput> | CategoryCreateWithoutCreatedByUserInput[] | CategoryUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByUserInput | CategoryCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput | CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: CategoryCreateManyCreatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput | CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCreatedByUserInput | CategoryUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput> | CategoryCreateWithoutUpdatedByUserInput[] | CategoryUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByUserInput | CategoryCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: CategoryCreateManyUpdatedByUserInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput | CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUpdatedByUserInput | CategoryUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ProductCreateWithoutCreatedByUserInput, ProductUncheckedCreateWithoutCreatedByUserInput> | ProductCreateWithoutCreatedByUserInput[] | ProductUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByUserInput | ProductCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCreatedByUserInput | ProductUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ProductCreateManyCreatedByUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCreatedByUserInput | ProductUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCreatedByUserInput | ProductUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ProductCreateWithoutUpdatedByUserInput, ProductUncheckedCreateWithoutUpdatedByUserInput> | ProductCreateWithoutUpdatedByUserInput[] | ProductUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByUserInput | ProductCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUpdatedByUserInput | ProductUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ProductCreateManyUpdatedByUserInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUpdatedByUserInput | ProductUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUpdatedByUserInput | ProductUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type StockUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<StockCreateWithoutCreatedByUserInput, StockUncheckedCreateWithoutCreatedByUserInput> | StockCreateWithoutCreatedByUserInput[] | StockUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutCreatedByUserInput | StockCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutCreatedByUserInput | StockUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: StockCreateManyCreatedByUserInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutCreatedByUserInput | StockUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: StockUpdateManyWithWhereWithoutCreatedByUserInput | StockUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<StockCreateWithoutUpdatedByUserInput, StockUncheckedCreateWithoutUpdatedByUserInput> | StockCreateWithoutUpdatedByUserInput[] | StockUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: StockCreateOrConnectWithoutUpdatedByUserInput | StockCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutUpdatedByUserInput | StockUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: StockCreateManyUpdatedByUserInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutUpdatedByUserInput | StockUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: StockUpdateManyWithWhereWithoutUpdatedByUserInput | StockUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<BrandCreateWithoutCreatedByUserInput, BrandUncheckedCreateWithoutCreatedByUserInput> | BrandCreateWithoutCreatedByUserInput[] | BrandUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByUserInput | BrandCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutCreatedByUserInput | BrandUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: BrandCreateManyCreatedByUserInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutCreatedByUserInput | BrandUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutCreatedByUserInput | BrandUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<BrandCreateWithoutUpdatedByUserInput, BrandUncheckedCreateWithoutUpdatedByUserInput> | BrandCreateWithoutUpdatedByUserInput[] | BrandUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByUserInput | BrandCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutUpdatedByUserInput | BrandUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: BrandCreateManyUpdatedByUserInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutUpdatedByUserInput | BrandUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutUpdatedByUserInput | BrandUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<NoteCreateWithoutCreatedByUserInput, NoteUncheckedCreateWithoutCreatedByUserInput> | NoteCreateWithoutCreatedByUserInput[] | NoteUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutCreatedByUserInput | NoteCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutCreatedByUserInput | NoteUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: NoteCreateManyCreatedByUserInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutCreatedByUserInput | NoteUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutCreatedByUserInput | NoteUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<NoteCreateWithoutUpdatedByUserInput, NoteUncheckedCreateWithoutUpdatedByUserInput> | NoteCreateWithoutUpdatedByUserInput[] | NoteUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutUpdatedByUserInput | NoteCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutUpdatedByUserInput | NoteUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: NoteCreateManyUpdatedByUserInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutUpdatedByUserInput | NoteUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutUpdatedByUserInput | NoteUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<DevisCreateWithoutCreatedByUserInput, DevisUncheckedCreateWithoutCreatedByUserInput> | DevisCreateWithoutCreatedByUserInput[] | DevisUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByUserInput | DevisCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutCreatedByUserInput | DevisUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: DevisCreateManyCreatedByUserInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutCreatedByUserInput | DevisUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutCreatedByUserInput | DevisUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<DevisCreateWithoutUpdatedByUserInput, DevisUncheckedCreateWithoutUpdatedByUserInput> | DevisCreateWithoutUpdatedByUserInput[] | DevisUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutUpdatedByUserInput | DevisCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutUpdatedByUserInput | DevisUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: DevisCreateManyUpdatedByUserInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutUpdatedByUserInput | DevisUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutUpdatedByUserInput | DevisUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutCreatedByUserInput, FeedbackContactUncheckedCreateWithoutCreatedByUserInput> | FeedbackContactCreateWithoutCreatedByUserInput[] | FeedbackContactUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutCreatedByUserInput | FeedbackContactCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: FeedbackContactUpsertWithWhereUniqueWithoutCreatedByUserInput | FeedbackContactUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: FeedbackContactCreateManyCreatedByUserInputEnvelope
    set?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    disconnect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    delete?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    update?: FeedbackContactUpdateWithWhereUniqueWithoutCreatedByUserInput | FeedbackContactUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: FeedbackContactUpdateManyWithWhereWithoutCreatedByUserInput | FeedbackContactUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<TaskCreateWithoutCreatedByUserInput, TaskUncheckedCreateWithoutCreatedByUserInput> | TaskCreateWithoutCreatedByUserInput[] | TaskUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutCreatedByUserInput | TaskCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutCreatedByUserInput | TaskUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: TaskCreateManyCreatedByUserInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutCreatedByUserInput | TaskUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutCreatedByUserInput | TaskUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<TaskCreateWithoutUpdatedByUserInput, TaskUncheckedCreateWithoutUpdatedByUserInput> | TaskCreateWithoutUpdatedByUserInput[] | TaskUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutUpdatedByUserInput | TaskCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutUpdatedByUserInput | TaskUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: TaskCreateManyUpdatedByUserInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutUpdatedByUserInput | TaskUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutUpdatedByUserInput | TaskUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<DevisItemCreateWithoutCreatedByUserInput, DevisItemUncheckedCreateWithoutCreatedByUserInput> | DevisItemCreateWithoutCreatedByUserInput[] | DevisItemUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutCreatedByUserInput | DevisItemCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: DevisItemUpsertWithWhereUniqueWithoutCreatedByUserInput | DevisItemUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: DevisItemCreateManyCreatedByUserInputEnvelope
    set?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    disconnect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    delete?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    update?: DevisItemUpdateWithWhereUniqueWithoutCreatedByUserInput | DevisItemUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: DevisItemUpdateManyWithWhereWithoutCreatedByUserInput | DevisItemUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
  }

  export type DevisUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<DevisCreateWithoutCreatedByInput, DevisUncheckedCreateWithoutCreatedByInput> | DevisCreateWithoutCreatedByInput[] | DevisUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutCreatedByInput | DevisCreateOrConnectWithoutCreatedByInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutCreatedByInput | DevisUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: DevisCreateManyCreatedByInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutCreatedByInput | DevisUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutCreatedByInput | DevisUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutOwnedOrganisationsInput = {
    create?: XOR<UserCreateWithoutOwnedOrganisationsInput, UserUncheckedCreateWithoutOwnedOrganisationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedOrganisationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutOrganisationsInput = {
    create?: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput> | UserCreateWithoutOrganisationsInput[] | UserUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationsInput | UserCreateOrConnectWithoutOrganisationsInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InvitationCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<InvitationCreateWithoutOrganisationInput, InvitationUncheckedCreateWithoutOrganisationInput> | InvitationCreateWithoutOrganisationInput[] | InvitationUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganisationInput | InvitationCreateOrConnectWithoutOrganisationInput[]
    createMany?: InvitationCreateManyOrganisationInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<ProductCreateWithoutOrganisationInput, ProductUncheckedCreateWithoutOrganisationInput> | ProductCreateWithoutOrganisationInput[] | ProductUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganisationInput | ProductCreateOrConnectWithoutOrganisationInput[]
    createMany?: ProductCreateManyOrganisationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type StockCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<StockCreateWithoutOrganisationInput, StockUncheckedCreateWithoutOrganisationInput> | StockCreateWithoutOrganisationInput[] | StockUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: StockCreateOrConnectWithoutOrganisationInput | StockCreateOrConnectWithoutOrganisationInput[]
    createMany?: StockCreateManyOrganisationInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type ContactCreateNestedManyWithoutOrganisationsInput = {
    create?: XOR<ContactCreateWithoutOrganisationsInput, ContactUncheckedCreateWithoutOrganisationsInput> | ContactCreateWithoutOrganisationsInput[] | ContactUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutOrganisationsInput | ContactCreateOrConnectWithoutOrganisationsInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<CategoryCreateWithoutOrganisationInput, CategoryUncheckedCreateWithoutOrganisationInput> | CategoryCreateWithoutOrganisationInput[] | CategoryUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutOrganisationInput | CategoryCreateOrConnectWithoutOrganisationInput[]
    createMany?: CategoryCreateManyOrganisationInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<BrandCreateWithoutOrganisationInput, BrandUncheckedCreateWithoutOrganisationInput> | BrandCreateWithoutOrganisationInput[] | BrandUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutOrganisationInput | BrandCreateOrConnectWithoutOrganisationInput[]
    createMany?: BrandCreateManyOrganisationInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<NoteCreateWithoutOrganisationInput, NoteUncheckedCreateWithoutOrganisationInput> | NoteCreateWithoutOrganisationInput[] | NoteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutOrganisationInput | NoteCreateOrConnectWithoutOrganisationInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type DevisCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<DevisCreateWithoutOrganisationInput, DevisUncheckedCreateWithoutOrganisationInput> | DevisCreateWithoutOrganisationInput[] | DevisUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutOrganisationInput | DevisCreateOrConnectWithoutOrganisationInput[]
    createMany?: DevisCreateManyOrganisationInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type TaskCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<TaskCreateWithoutOrganisationInput, TaskUncheckedCreateWithoutOrganisationInput> | TaskCreateWithoutOrganisationInput[] | TaskUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrganisationInput | TaskCreateOrConnectWithoutOrganisationInput[]
    createMany?: TaskCreateManyOrganisationInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<FavoriteCreateWithoutOrganisationInput, FavoriteUncheckedCreateWithoutOrganisationInput> | FavoriteCreateWithoutOrganisationInput[] | FavoriteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutOrganisationInput | FavoriteCreateOrConnectWithoutOrganisationInput[]
    createMany?: FavoriteCreateManyOrganisationInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<ActivityLogCreateWithoutOrganisationInput, ActivityLogUncheckedCreateWithoutOrganisationInput> | ActivityLogCreateWithoutOrganisationInput[] | ActivityLogUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutOrganisationInput | ActivityLogCreateOrConnectWithoutOrganisationInput[]
    createMany?: ActivityLogCreateManyOrganisationInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutOrganisationInput = {
    create?: XOR<UserCreateWithoutOrganisationInput, UserUncheckedCreateWithoutOrganisationInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrganisationsInput = {
    create?: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutOrganisationsInput = {
    create?: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput> | UserCreateWithoutOrganisationsInput[] | UserUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationsInput | UserCreateOrConnectWithoutOrganisationsInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InvitationUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<InvitationCreateWithoutOrganisationInput, InvitationUncheckedCreateWithoutOrganisationInput> | InvitationCreateWithoutOrganisationInput[] | InvitationUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganisationInput | InvitationCreateOrConnectWithoutOrganisationInput[]
    createMany?: InvitationCreateManyOrganisationInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<ProductCreateWithoutOrganisationInput, ProductUncheckedCreateWithoutOrganisationInput> | ProductCreateWithoutOrganisationInput[] | ProductUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganisationInput | ProductCreateOrConnectWithoutOrganisationInput[]
    createMany?: ProductCreateManyOrganisationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type StockUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<StockCreateWithoutOrganisationInput, StockUncheckedCreateWithoutOrganisationInput> | StockCreateWithoutOrganisationInput[] | StockUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: StockCreateOrConnectWithoutOrganisationInput | StockCreateOrConnectWithoutOrganisationInput[]
    createMany?: StockCreateManyOrganisationInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type ContactUncheckedCreateNestedManyWithoutOrganisationsInput = {
    create?: XOR<ContactCreateWithoutOrganisationsInput, ContactUncheckedCreateWithoutOrganisationsInput> | ContactCreateWithoutOrganisationsInput[] | ContactUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutOrganisationsInput | ContactCreateOrConnectWithoutOrganisationsInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<CategoryCreateWithoutOrganisationInput, CategoryUncheckedCreateWithoutOrganisationInput> | CategoryCreateWithoutOrganisationInput[] | CategoryUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutOrganisationInput | CategoryCreateOrConnectWithoutOrganisationInput[]
    createMany?: CategoryCreateManyOrganisationInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<BrandCreateWithoutOrganisationInput, BrandUncheckedCreateWithoutOrganisationInput> | BrandCreateWithoutOrganisationInput[] | BrandUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutOrganisationInput | BrandCreateOrConnectWithoutOrganisationInput[]
    createMany?: BrandCreateManyOrganisationInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<NoteCreateWithoutOrganisationInput, NoteUncheckedCreateWithoutOrganisationInput> | NoteCreateWithoutOrganisationInput[] | NoteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutOrganisationInput | NoteCreateOrConnectWithoutOrganisationInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type DevisUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<DevisCreateWithoutOrganisationInput, DevisUncheckedCreateWithoutOrganisationInput> | DevisCreateWithoutOrganisationInput[] | DevisUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutOrganisationInput | DevisCreateOrConnectWithoutOrganisationInput[]
    createMany?: DevisCreateManyOrganisationInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type TaskUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<TaskCreateWithoutOrganisationInput, TaskUncheckedCreateWithoutOrganisationInput> | TaskCreateWithoutOrganisationInput[] | TaskUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrganisationInput | TaskCreateOrConnectWithoutOrganisationInput[]
    createMany?: TaskCreateManyOrganisationInputEnvelope
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<FavoriteCreateWithoutOrganisationInput, FavoriteUncheckedCreateWithoutOrganisationInput> | FavoriteCreateWithoutOrganisationInput[] | FavoriteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutOrganisationInput | FavoriteCreateOrConnectWithoutOrganisationInput[]
    createMany?: FavoriteCreateManyOrganisationInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput = {
    create?: XOR<ActivityLogCreateWithoutOrganisationInput, ActivityLogUncheckedCreateWithoutOrganisationInput> | ActivityLogCreateWithoutOrganisationInput[] | ActivityLogUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutOrganisationInput | ActivityLogCreateOrConnectWithoutOrganisationInput[]
    createMany?: ActivityLogCreateManyOrganisationInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type EnumDomainFieldUpdateOperationsInput = {
    set?: $Enums.Domain
  }

  export type UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput = {
    create?: XOR<UserCreateWithoutOwnedOrganisationsInput, UserUncheckedCreateWithoutOwnedOrganisationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOwnedOrganisationsInput
    upsert?: UserUpsertWithoutOwnedOrganisationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOwnedOrganisationsInput, UserUpdateWithoutOwnedOrganisationsInput>, UserUncheckedUpdateWithoutOwnedOrganisationsInput>
  }

  export type UserUpdateManyWithoutOrganisationsNestedInput = {
    create?: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput> | UserCreateWithoutOrganisationsInput[] | UserUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationsInput | UserCreateOrConnectWithoutOrganisationsInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutOrganisationsInput | UserUpsertWithWhereUniqueWithoutOrganisationsInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutOrganisationsInput | UserUpdateWithWhereUniqueWithoutOrganisationsInput[]
    updateMany?: UserUpdateManyWithWhereWithoutOrganisationsInput | UserUpdateManyWithWhereWithoutOrganisationsInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InvitationUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<InvitationCreateWithoutOrganisationInput, InvitationUncheckedCreateWithoutOrganisationInput> | InvitationCreateWithoutOrganisationInput[] | InvitationUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganisationInput | InvitationCreateOrConnectWithoutOrganisationInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutOrganisationInput | InvitationUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: InvitationCreateManyOrganisationInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutOrganisationInput | InvitationUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutOrganisationInput | InvitationUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<ProductCreateWithoutOrganisationInput, ProductUncheckedCreateWithoutOrganisationInput> | ProductCreateWithoutOrganisationInput[] | ProductUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganisationInput | ProductCreateOrConnectWithoutOrganisationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOrganisationInput | ProductUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: ProductCreateManyOrganisationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOrganisationInput | ProductUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOrganisationInput | ProductUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type StockUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<StockCreateWithoutOrganisationInput, StockUncheckedCreateWithoutOrganisationInput> | StockCreateWithoutOrganisationInput[] | StockUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: StockCreateOrConnectWithoutOrganisationInput | StockCreateOrConnectWithoutOrganisationInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutOrganisationInput | StockUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: StockCreateManyOrganisationInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutOrganisationInput | StockUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: StockUpdateManyWithWhereWithoutOrganisationInput | StockUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type ContactUpdateManyWithoutOrganisationsNestedInput = {
    create?: XOR<ContactCreateWithoutOrganisationsInput, ContactUncheckedCreateWithoutOrganisationsInput> | ContactCreateWithoutOrganisationsInput[] | ContactUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutOrganisationsInput | ContactCreateOrConnectWithoutOrganisationsInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutOrganisationsInput | ContactUpsertWithWhereUniqueWithoutOrganisationsInput[]
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutOrganisationsInput | ContactUpdateWithWhereUniqueWithoutOrganisationsInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutOrganisationsInput | ContactUpdateManyWithWhereWithoutOrganisationsInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<CategoryCreateWithoutOrganisationInput, CategoryUncheckedCreateWithoutOrganisationInput> | CategoryCreateWithoutOrganisationInput[] | CategoryUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutOrganisationInput | CategoryCreateOrConnectWithoutOrganisationInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutOrganisationInput | CategoryUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: CategoryCreateManyOrganisationInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutOrganisationInput | CategoryUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutOrganisationInput | CategoryUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<BrandCreateWithoutOrganisationInput, BrandUncheckedCreateWithoutOrganisationInput> | BrandCreateWithoutOrganisationInput[] | BrandUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutOrganisationInput | BrandCreateOrConnectWithoutOrganisationInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutOrganisationInput | BrandUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: BrandCreateManyOrganisationInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutOrganisationInput | BrandUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutOrganisationInput | BrandUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<NoteCreateWithoutOrganisationInput, NoteUncheckedCreateWithoutOrganisationInput> | NoteCreateWithoutOrganisationInput[] | NoteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutOrganisationInput | NoteCreateOrConnectWithoutOrganisationInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutOrganisationInput | NoteUpsertWithWhereUniqueWithoutOrganisationInput[]
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutOrganisationInput | NoteUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutOrganisationInput | NoteUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type DevisUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<DevisCreateWithoutOrganisationInput, DevisUncheckedCreateWithoutOrganisationInput> | DevisCreateWithoutOrganisationInput[] | DevisUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutOrganisationInput | DevisCreateOrConnectWithoutOrganisationInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutOrganisationInput | DevisUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: DevisCreateManyOrganisationInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutOrganisationInput | DevisUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutOrganisationInput | DevisUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type TaskUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<TaskCreateWithoutOrganisationInput, TaskUncheckedCreateWithoutOrganisationInput> | TaskCreateWithoutOrganisationInput[] | TaskUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrganisationInput | TaskCreateOrConnectWithoutOrganisationInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutOrganisationInput | TaskUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: TaskCreateManyOrganisationInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutOrganisationInput | TaskUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutOrganisationInput | TaskUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<FavoriteCreateWithoutOrganisationInput, FavoriteUncheckedCreateWithoutOrganisationInput> | FavoriteCreateWithoutOrganisationInput[] | FavoriteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutOrganisationInput | FavoriteCreateOrConnectWithoutOrganisationInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutOrganisationInput | FavoriteUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: FavoriteCreateManyOrganisationInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutOrganisationInput | FavoriteUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutOrganisationInput | FavoriteUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<ActivityLogCreateWithoutOrganisationInput, ActivityLogUncheckedCreateWithoutOrganisationInput> | ActivityLogCreateWithoutOrganisationInput[] | ActivityLogUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutOrganisationInput | ActivityLogCreateOrConnectWithoutOrganisationInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutOrganisationInput | ActivityLogUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: ActivityLogCreateManyOrganisationInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutOrganisationInput | ActivityLogUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutOrganisationInput | ActivityLogUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutOrganisationNestedInput = {
    create?: XOR<UserCreateWithoutOrganisationInput, UserUncheckedCreateWithoutOrganisationInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationInput
    upsert?: UserUpsertWithoutOrganisationInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrganisationInput, UserUpdateWithoutOrganisationInput>, UserUncheckedUpdateWithoutOrganisationInput>
  }

  export type UserUpdateOneWithoutOrganisationsNestedInput = {
    create?: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationsInput
    upsert?: UserUpsertWithoutOrganisationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrganisationsInput, UserUpdateWithoutOrganisationsInput>, UserUncheckedUpdateWithoutOrganisationsInput>
  }

  export type UserUncheckedUpdateManyWithoutOrganisationsNestedInput = {
    create?: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput> | UserCreateWithoutOrganisationsInput[] | UserUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutOrganisationsInput | UserCreateOrConnectWithoutOrganisationsInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutOrganisationsInput | UserUpsertWithWhereUniqueWithoutOrganisationsInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutOrganisationsInput | UserUpdateWithWhereUniqueWithoutOrganisationsInput[]
    updateMany?: UserUpdateManyWithWhereWithoutOrganisationsInput | UserUpdateManyWithWhereWithoutOrganisationsInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InvitationUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<InvitationCreateWithoutOrganisationInput, InvitationUncheckedCreateWithoutOrganisationInput> | InvitationCreateWithoutOrganisationInput[] | InvitationUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganisationInput | InvitationCreateOrConnectWithoutOrganisationInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutOrganisationInput | InvitationUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: InvitationCreateManyOrganisationInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutOrganisationInput | InvitationUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutOrganisationInput | InvitationUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<ProductCreateWithoutOrganisationInput, ProductUncheckedCreateWithoutOrganisationInput> | ProductCreateWithoutOrganisationInput[] | ProductUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganisationInput | ProductCreateOrConnectWithoutOrganisationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOrganisationInput | ProductUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: ProductCreateManyOrganisationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOrganisationInput | ProductUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOrganisationInput | ProductUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type StockUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<StockCreateWithoutOrganisationInput, StockUncheckedCreateWithoutOrganisationInput> | StockCreateWithoutOrganisationInput[] | StockUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: StockCreateOrConnectWithoutOrganisationInput | StockCreateOrConnectWithoutOrganisationInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutOrganisationInput | StockUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: StockCreateManyOrganisationInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutOrganisationInput | StockUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: StockUpdateManyWithWhereWithoutOrganisationInput | StockUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type ContactUncheckedUpdateManyWithoutOrganisationsNestedInput = {
    create?: XOR<ContactCreateWithoutOrganisationsInput, ContactUncheckedCreateWithoutOrganisationsInput> | ContactCreateWithoutOrganisationsInput[] | ContactUncheckedCreateWithoutOrganisationsInput[]
    connectOrCreate?: ContactCreateOrConnectWithoutOrganisationsInput | ContactCreateOrConnectWithoutOrganisationsInput[]
    upsert?: ContactUpsertWithWhereUniqueWithoutOrganisationsInput | ContactUpsertWithWhereUniqueWithoutOrganisationsInput[]
    set?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    disconnect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    delete?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    connect?: ContactWhereUniqueInput | ContactWhereUniqueInput[]
    update?: ContactUpdateWithWhereUniqueWithoutOrganisationsInput | ContactUpdateWithWhereUniqueWithoutOrganisationsInput[]
    updateMany?: ContactUpdateManyWithWhereWithoutOrganisationsInput | ContactUpdateManyWithWhereWithoutOrganisationsInput[]
    deleteMany?: ContactScalarWhereInput | ContactScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<CategoryCreateWithoutOrganisationInput, CategoryUncheckedCreateWithoutOrganisationInput> | CategoryCreateWithoutOrganisationInput[] | CategoryUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutOrganisationInput | CategoryCreateOrConnectWithoutOrganisationInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutOrganisationInput | CategoryUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: CategoryCreateManyOrganisationInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutOrganisationInput | CategoryUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutOrganisationInput | CategoryUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<BrandCreateWithoutOrganisationInput, BrandUncheckedCreateWithoutOrganisationInput> | BrandCreateWithoutOrganisationInput[] | BrandUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutOrganisationInput | BrandCreateOrConnectWithoutOrganisationInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutOrganisationInput | BrandUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: BrandCreateManyOrganisationInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutOrganisationInput | BrandUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutOrganisationInput | BrandUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<NoteCreateWithoutOrganisationInput, NoteUncheckedCreateWithoutOrganisationInput> | NoteCreateWithoutOrganisationInput[] | NoteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutOrganisationInput | NoteCreateOrConnectWithoutOrganisationInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutOrganisationInput | NoteUpsertWithWhereUniqueWithoutOrganisationInput[]
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutOrganisationInput | NoteUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutOrganisationInput | NoteUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type DevisUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<DevisCreateWithoutOrganisationInput, DevisUncheckedCreateWithoutOrganisationInput> | DevisCreateWithoutOrganisationInput[] | DevisUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutOrganisationInput | DevisCreateOrConnectWithoutOrganisationInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutOrganisationInput | DevisUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: DevisCreateManyOrganisationInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutOrganisationInput | DevisUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutOrganisationInput | DevisUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type TaskUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<TaskCreateWithoutOrganisationInput, TaskUncheckedCreateWithoutOrganisationInput> | TaskCreateWithoutOrganisationInput[] | TaskUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: TaskCreateOrConnectWithoutOrganisationInput | TaskCreateOrConnectWithoutOrganisationInput[]
    upsert?: TaskUpsertWithWhereUniqueWithoutOrganisationInput | TaskUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: TaskCreateManyOrganisationInputEnvelope
    set?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    disconnect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    delete?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    connect?: TaskWhereUniqueInput | TaskWhereUniqueInput[]
    update?: TaskUpdateWithWhereUniqueWithoutOrganisationInput | TaskUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: TaskUpdateManyWithWhereWithoutOrganisationInput | TaskUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: TaskScalarWhereInput | TaskScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<FavoriteCreateWithoutOrganisationInput, FavoriteUncheckedCreateWithoutOrganisationInput> | FavoriteCreateWithoutOrganisationInput[] | FavoriteUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutOrganisationInput | FavoriteCreateOrConnectWithoutOrganisationInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutOrganisationInput | FavoriteUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: FavoriteCreateManyOrganisationInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutOrganisationInput | FavoriteUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutOrganisationInput | FavoriteUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput = {
    create?: XOR<ActivityLogCreateWithoutOrganisationInput, ActivityLogUncheckedCreateWithoutOrganisationInput> | ActivityLogCreateWithoutOrganisationInput[] | ActivityLogUncheckedCreateWithoutOrganisationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutOrganisationInput | ActivityLogCreateOrConnectWithoutOrganisationInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutOrganisationInput | ActivityLogUpsertWithWhereUniqueWithoutOrganisationInput[]
    createMany?: ActivityLogCreateManyOrganisationInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutOrganisationInput | ActivityLogUpdateWithWhereUniqueWithoutOrganisationInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutOrganisationInput | ActivityLogUpdateManyWithWhereWithoutOrganisationInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutAccountInput = {
    create?: XOR<ActivityLogCreateWithoutAccountInput, ActivityLogUncheckedCreateWithoutAccountInput> | ActivityLogCreateWithoutAccountInput[] | ActivityLogUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAccountInput | ActivityLogCreateOrConnectWithoutAccountInput[]
    createMany?: ActivityLogCreateManyAccountInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutAccountInput = {
    create?: XOR<ActivityLogCreateWithoutAccountInput, ActivityLogUncheckedCreateWithoutAccountInput> | ActivityLogCreateWithoutAccountInput[] | ActivityLogUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAccountInput | ActivityLogCreateOrConnectWithoutAccountInput[]
    createMany?: ActivityLogCreateManyAccountInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type ActivityLogUpdateManyWithoutAccountNestedInput = {
    create?: XOR<ActivityLogCreateWithoutAccountInput, ActivityLogUncheckedCreateWithoutAccountInput> | ActivityLogCreateWithoutAccountInput[] | ActivityLogUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAccountInput | ActivityLogCreateOrConnectWithoutAccountInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutAccountInput | ActivityLogUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: ActivityLogCreateManyAccountInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutAccountInput | ActivityLogUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutAccountInput | ActivityLogUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutAccountNestedInput = {
    create?: XOR<ActivityLogCreateWithoutAccountInput, ActivityLogUncheckedCreateWithoutAccountInput> | ActivityLogCreateWithoutAccountInput[] | ActivityLogUncheckedCreateWithoutAccountInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAccountInput | ActivityLogCreateOrConnectWithoutAccountInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutAccountInput | ActivityLogUpsertWithWhereUniqueWithoutAccountInput[]
    createMany?: ActivityLogCreateManyAccountInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutAccountInput | ActivityLogUpdateWithWhereUniqueWithoutAccountInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutAccountInput | ActivityLogUpdateManyWithWhereWithoutAccountInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutSessionInput = {
    create?: XOR<ActivityLogCreateWithoutSessionInput, ActivityLogUncheckedCreateWithoutSessionInput> | ActivityLogCreateWithoutSessionInput[] | ActivityLogUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutSessionInput | ActivityLogCreateOrConnectWithoutSessionInput[]
    createMany?: ActivityLogCreateManySessionInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutSessionInput = {
    create?: XOR<ActivityLogCreateWithoutSessionInput, ActivityLogUncheckedCreateWithoutSessionInput> | ActivityLogCreateWithoutSessionInput[] | ActivityLogUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutSessionInput | ActivityLogCreateOrConnectWithoutSessionInput[]
    createMany?: ActivityLogCreateManySessionInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type ActivityLogUpdateManyWithoutSessionNestedInput = {
    create?: XOR<ActivityLogCreateWithoutSessionInput, ActivityLogUncheckedCreateWithoutSessionInput> | ActivityLogCreateWithoutSessionInput[] | ActivityLogUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutSessionInput | ActivityLogCreateOrConnectWithoutSessionInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutSessionInput | ActivityLogUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: ActivityLogCreateManySessionInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutSessionInput | ActivityLogUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutSessionInput | ActivityLogUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutSessionNestedInput = {
    create?: XOR<ActivityLogCreateWithoutSessionInput, ActivityLogUncheckedCreateWithoutSessionInput> | ActivityLogCreateWithoutSessionInput[] | ActivityLogUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutSessionInput | ActivityLogCreateOrConnectWithoutSessionInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutSessionInput | ActivityLogUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: ActivityLogCreateManySessionInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutSessionInput | ActivityLogUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutSessionInput | ActivityLogUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAuthenticatorsInput = {
    create?: XOR<UserCreateWithoutAuthenticatorsInput, UserUncheckedCreateWithoutAuthenticatorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuthenticatorsInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutAuthenticatorInput = {
    create?: XOR<ActivityLogCreateWithoutAuthenticatorInput, ActivityLogUncheckedCreateWithoutAuthenticatorInput> | ActivityLogCreateWithoutAuthenticatorInput[] | ActivityLogUncheckedCreateWithoutAuthenticatorInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAuthenticatorInput | ActivityLogCreateOrConnectWithoutAuthenticatorInput[]
    createMany?: ActivityLogCreateManyAuthenticatorInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutAuthenticatorInput = {
    create?: XOR<ActivityLogCreateWithoutAuthenticatorInput, ActivityLogUncheckedCreateWithoutAuthenticatorInput> | ActivityLogCreateWithoutAuthenticatorInput[] | ActivityLogUncheckedCreateWithoutAuthenticatorInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAuthenticatorInput | ActivityLogCreateOrConnectWithoutAuthenticatorInput[]
    createMany?: ActivityLogCreateManyAuthenticatorInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutAuthenticatorsNestedInput = {
    create?: XOR<UserCreateWithoutAuthenticatorsInput, UserUncheckedCreateWithoutAuthenticatorsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuthenticatorsInput
    upsert?: UserUpsertWithoutAuthenticatorsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuthenticatorsInput, UserUpdateWithoutAuthenticatorsInput>, UserUncheckedUpdateWithoutAuthenticatorsInput>
  }

  export type ActivityLogUpdateManyWithoutAuthenticatorNestedInput = {
    create?: XOR<ActivityLogCreateWithoutAuthenticatorInput, ActivityLogUncheckedCreateWithoutAuthenticatorInput> | ActivityLogCreateWithoutAuthenticatorInput[] | ActivityLogUncheckedCreateWithoutAuthenticatorInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAuthenticatorInput | ActivityLogCreateOrConnectWithoutAuthenticatorInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutAuthenticatorInput | ActivityLogUpsertWithWhereUniqueWithoutAuthenticatorInput[]
    createMany?: ActivityLogCreateManyAuthenticatorInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutAuthenticatorInput | ActivityLogUpdateWithWhereUniqueWithoutAuthenticatorInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutAuthenticatorInput | ActivityLogUpdateManyWithWhereWithoutAuthenticatorInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutAuthenticatorNestedInput = {
    create?: XOR<ActivityLogCreateWithoutAuthenticatorInput, ActivityLogUncheckedCreateWithoutAuthenticatorInput> | ActivityLogCreateWithoutAuthenticatorInput[] | ActivityLogUncheckedCreateWithoutAuthenticatorInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutAuthenticatorInput | ActivityLogCreateOrConnectWithoutAuthenticatorInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutAuthenticatorInput | ActivityLogUpsertWithWhereUniqueWithoutAuthenticatorInput[]
    createMany?: ActivityLogCreateManyAuthenticatorInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutAuthenticatorInput | ActivityLogUpdateWithWhereUniqueWithoutAuthenticatorInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutAuthenticatorInput | ActivityLogUpdateManyWithWhereWithoutAuthenticatorInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutInvitationsInput = {
    create?: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvitationsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganisationCreateNestedOneWithoutInvitationsInput = {
    create?: XOR<OrganisationCreateWithoutInvitationsInput, OrganisationUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutInvitationsInput
    connect?: OrganisationWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutInvitationInput = {
    create?: XOR<ActivityLogCreateWithoutInvitationInput, ActivityLogUncheckedCreateWithoutInvitationInput> | ActivityLogCreateWithoutInvitationInput[] | ActivityLogUncheckedCreateWithoutInvitationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutInvitationInput | ActivityLogCreateOrConnectWithoutInvitationInput[]
    createMany?: ActivityLogCreateManyInvitationInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutInvitationInput = {
    create?: XOR<ActivityLogCreateWithoutInvitationInput, ActivityLogUncheckedCreateWithoutInvitationInput> | ActivityLogCreateWithoutInvitationInput[] | ActivityLogUncheckedCreateWithoutInvitationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutInvitationInput | ActivityLogCreateOrConnectWithoutInvitationInput[]
    createMany?: ActivityLogCreateManyInvitationInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutInvitationsNestedInput = {
    create?: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvitationsInput
    upsert?: UserUpsertWithoutInvitationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvitationsInput, UserUpdateWithoutInvitationsInput>, UserUncheckedUpdateWithoutInvitationsInput>
  }

  export type OrganisationUpdateOneRequiredWithoutInvitationsNestedInput = {
    create?: XOR<OrganisationCreateWithoutInvitationsInput, OrganisationUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutInvitationsInput
    upsert?: OrganisationUpsertWithoutInvitationsInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutInvitationsInput, OrganisationUpdateWithoutInvitationsInput>, OrganisationUncheckedUpdateWithoutInvitationsInput>
  }

  export type ActivityLogUpdateManyWithoutInvitationNestedInput = {
    create?: XOR<ActivityLogCreateWithoutInvitationInput, ActivityLogUncheckedCreateWithoutInvitationInput> | ActivityLogCreateWithoutInvitationInput[] | ActivityLogUncheckedCreateWithoutInvitationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutInvitationInput | ActivityLogCreateOrConnectWithoutInvitationInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutInvitationInput | ActivityLogUpsertWithWhereUniqueWithoutInvitationInput[]
    createMany?: ActivityLogCreateManyInvitationInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutInvitationInput | ActivityLogUpdateWithWhereUniqueWithoutInvitationInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutInvitationInput | ActivityLogUpdateManyWithWhereWithoutInvitationInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutInvitationNestedInput = {
    create?: XOR<ActivityLogCreateWithoutInvitationInput, ActivityLogUncheckedCreateWithoutInvitationInput> | ActivityLogCreateWithoutInvitationInput[] | ActivityLogUncheckedCreateWithoutInvitationInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutInvitationInput | ActivityLogCreateOrConnectWithoutInvitationInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutInvitationInput | ActivityLogUpsertWithWhereUniqueWithoutInvitationInput[]
    createMany?: ActivityLogCreateManyInvitationInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutInvitationInput | ActivityLogUpdateWithWhereUniqueWithoutInvitationInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutInvitationInput | ActivityLogUpdateManyWithWhereWithoutInvitationInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutPasswordResetTokensInput = {
    create?: XOR<UserCreateWithoutPasswordResetTokensInput, UserUncheckedCreateWithoutPasswordResetTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutPasswordResetTokensInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutPasswordResetTokenInput = {
    create?: XOR<ActivityLogCreateWithoutPasswordResetTokenInput, ActivityLogUncheckedCreateWithoutPasswordResetTokenInput> | ActivityLogCreateWithoutPasswordResetTokenInput[] | ActivityLogUncheckedCreateWithoutPasswordResetTokenInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutPasswordResetTokenInput | ActivityLogCreateOrConnectWithoutPasswordResetTokenInput[]
    createMany?: ActivityLogCreateManyPasswordResetTokenInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutPasswordResetTokenInput = {
    create?: XOR<ActivityLogCreateWithoutPasswordResetTokenInput, ActivityLogUncheckedCreateWithoutPasswordResetTokenInput> | ActivityLogCreateWithoutPasswordResetTokenInput[] | ActivityLogUncheckedCreateWithoutPasswordResetTokenInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutPasswordResetTokenInput | ActivityLogCreateOrConnectWithoutPasswordResetTokenInput[]
    createMany?: ActivityLogCreateManyPasswordResetTokenInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutPasswordResetTokensNestedInput = {
    create?: XOR<UserCreateWithoutPasswordResetTokensInput, UserUncheckedCreateWithoutPasswordResetTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutPasswordResetTokensInput
    upsert?: UserUpsertWithoutPasswordResetTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPasswordResetTokensInput, UserUpdateWithoutPasswordResetTokensInput>, UserUncheckedUpdateWithoutPasswordResetTokensInput>
  }

  export type ActivityLogUpdateManyWithoutPasswordResetTokenNestedInput = {
    create?: XOR<ActivityLogCreateWithoutPasswordResetTokenInput, ActivityLogUncheckedCreateWithoutPasswordResetTokenInput> | ActivityLogCreateWithoutPasswordResetTokenInput[] | ActivityLogUncheckedCreateWithoutPasswordResetTokenInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutPasswordResetTokenInput | ActivityLogCreateOrConnectWithoutPasswordResetTokenInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutPasswordResetTokenInput | ActivityLogUpsertWithWhereUniqueWithoutPasswordResetTokenInput[]
    createMany?: ActivityLogCreateManyPasswordResetTokenInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutPasswordResetTokenInput | ActivityLogUpdateWithWhereUniqueWithoutPasswordResetTokenInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutPasswordResetTokenInput | ActivityLogUpdateManyWithWhereWithoutPasswordResetTokenInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutPasswordResetTokenNestedInput = {
    create?: XOR<ActivityLogCreateWithoutPasswordResetTokenInput, ActivityLogUncheckedCreateWithoutPasswordResetTokenInput> | ActivityLogCreateWithoutPasswordResetTokenInput[] | ActivityLogUncheckedCreateWithoutPasswordResetTokenInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutPasswordResetTokenInput | ActivityLogCreateOrConnectWithoutPasswordResetTokenInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutPasswordResetTokenInput | ActivityLogUpsertWithWhereUniqueWithoutPasswordResetTokenInput[]
    createMany?: ActivityLogCreateManyPasswordResetTokenInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutPasswordResetTokenInput | ActivityLogUpdateWithWhereUniqueWithoutPasswordResetTokenInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutPasswordResetTokenInput | ActivityLogUpdateManyWithWhereWithoutPasswordResetTokenInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type OrganisationCreateNestedManyWithoutContactInput = {
    create?: XOR<OrganisationCreateWithoutContactInput, OrganisationUncheckedCreateWithoutContactInput> | OrganisationCreateWithoutContactInput[] | OrganisationUncheckedCreateWithoutContactInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutContactInput | OrganisationCreateOrConnectWithoutContactInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutContactInput = {
    create?: XOR<CommentCreateWithoutContactInput, CommentUncheckedCreateWithoutContactInput> | CommentCreateWithoutContactInput[] | CommentUncheckedCreateWithoutContactInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutContactInput | CommentCreateOrConnectWithoutContactInput[]
    createMany?: CommentCreateManyContactInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type FeedbackContactCreateNestedManyWithoutContactInput = {
    create?: XOR<FeedbackContactCreateWithoutContactInput, FeedbackContactUncheckedCreateWithoutContactInput> | FeedbackContactCreateWithoutContactInput[] | FeedbackContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutContactInput | FeedbackContactCreateOrConnectWithoutContactInput[]
    createMany?: FeedbackContactCreateManyContactInputEnvelope
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
  }

  export type NoteCreateNestedManyWithoutContactInput = {
    create?: XOR<NoteCreateWithoutContactInput, NoteUncheckedCreateWithoutContactInput> | NoteCreateWithoutContactInput[] | NoteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutContactInput | NoteCreateOrConnectWithoutContactInput[]
    createMany?: NoteCreateManyContactInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type DevisCreateNestedManyWithoutContactInput = {
    create?: XOR<DevisCreateWithoutContactInput, DevisUncheckedCreateWithoutContactInput> | DevisCreateWithoutContactInput[] | DevisUncheckedCreateWithoutContactInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutContactInput | DevisCreateOrConnectWithoutContactInput[]
    createMany?: DevisCreateManyContactInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutContactInput = {
    create?: XOR<FavoriteCreateWithoutContactInput, FavoriteUncheckedCreateWithoutContactInput> | FavoriteCreateWithoutContactInput[] | FavoriteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutContactInput | FavoriteCreateOrConnectWithoutContactInput[]
    createMany?: FavoriteCreateManyContactInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutContactInput = {
    create?: XOR<ActivityLogCreateWithoutContactInput, ActivityLogUncheckedCreateWithoutContactInput> | ActivityLogCreateWithoutContactInput[] | ActivityLogUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutContactInput | ActivityLogCreateOrConnectWithoutContactInput[]
    createMany?: ActivityLogCreateManyContactInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutContactInput = {
    create?: XOR<UserCreateWithoutContactInput, UserUncheckedCreateWithoutContactInput>
    connectOrCreate?: UserCreateOrConnectWithoutContactInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutContactsInput = {
    create?: XOR<UserCreateWithoutContactsInput, UserUncheckedCreateWithoutContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutContactsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganisationUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<OrganisationCreateWithoutContactInput, OrganisationUncheckedCreateWithoutContactInput> | OrganisationCreateWithoutContactInput[] | OrganisationUncheckedCreateWithoutContactInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutContactInput | OrganisationCreateOrConnectWithoutContactInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<CommentCreateWithoutContactInput, CommentUncheckedCreateWithoutContactInput> | CommentCreateWithoutContactInput[] | CommentUncheckedCreateWithoutContactInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutContactInput | CommentCreateOrConnectWithoutContactInput[]
    createMany?: CommentCreateManyContactInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type FeedbackContactUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<FeedbackContactCreateWithoutContactInput, FeedbackContactUncheckedCreateWithoutContactInput> | FeedbackContactCreateWithoutContactInput[] | FeedbackContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutContactInput | FeedbackContactCreateOrConnectWithoutContactInput[]
    createMany?: FeedbackContactCreateManyContactInputEnvelope
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
  }

  export type NoteUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<NoteCreateWithoutContactInput, NoteUncheckedCreateWithoutContactInput> | NoteCreateWithoutContactInput[] | NoteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutContactInput | NoteCreateOrConnectWithoutContactInput[]
    createMany?: NoteCreateManyContactInputEnvelope
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
  }

  export type DevisUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<DevisCreateWithoutContactInput, DevisUncheckedCreateWithoutContactInput> | DevisCreateWithoutContactInput[] | DevisUncheckedCreateWithoutContactInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutContactInput | DevisCreateOrConnectWithoutContactInput[]
    createMany?: DevisCreateManyContactInputEnvelope
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<FavoriteCreateWithoutContactInput, FavoriteUncheckedCreateWithoutContactInput> | FavoriteCreateWithoutContactInput[] | FavoriteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutContactInput | FavoriteCreateOrConnectWithoutContactInput[]
    createMany?: FavoriteCreateManyContactInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutContactInput = {
    create?: XOR<ActivityLogCreateWithoutContactInput, ActivityLogUncheckedCreateWithoutContactInput> | ActivityLogCreateWithoutContactInput[] | ActivityLogUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutContactInput | ActivityLogCreateOrConnectWithoutContactInput[]
    createMany?: ActivityLogCreateManyContactInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type EnumStatus_ContactFieldUpdateOperationsInput = {
    set?: $Enums.Status_Contact
  }

  export type EnumNiveauFieldUpdateOperationsInput = {
    set?: $Enums.Niveau
  }

  export type OrganisationUpdateManyWithoutContactNestedInput = {
    create?: XOR<OrganisationCreateWithoutContactInput, OrganisationUncheckedCreateWithoutContactInput> | OrganisationCreateWithoutContactInput[] | OrganisationUncheckedCreateWithoutContactInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutContactInput | OrganisationCreateOrConnectWithoutContactInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutContactInput | OrganisationUpsertWithWhereUniqueWithoutContactInput[]
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutContactInput | OrganisationUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutContactInput | OrganisationUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutContactNestedInput = {
    create?: XOR<CommentCreateWithoutContactInput, CommentUncheckedCreateWithoutContactInput> | CommentCreateWithoutContactInput[] | CommentUncheckedCreateWithoutContactInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutContactInput | CommentCreateOrConnectWithoutContactInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutContactInput | CommentUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: CommentCreateManyContactInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutContactInput | CommentUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutContactInput | CommentUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type FeedbackContactUpdateManyWithoutContactNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutContactInput, FeedbackContactUncheckedCreateWithoutContactInput> | FeedbackContactCreateWithoutContactInput[] | FeedbackContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutContactInput | FeedbackContactCreateOrConnectWithoutContactInput[]
    upsert?: FeedbackContactUpsertWithWhereUniqueWithoutContactInput | FeedbackContactUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: FeedbackContactCreateManyContactInputEnvelope
    set?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    disconnect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    delete?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    update?: FeedbackContactUpdateWithWhereUniqueWithoutContactInput | FeedbackContactUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: FeedbackContactUpdateManyWithWhereWithoutContactInput | FeedbackContactUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
  }

  export type NoteUpdateManyWithoutContactNestedInput = {
    create?: XOR<NoteCreateWithoutContactInput, NoteUncheckedCreateWithoutContactInput> | NoteCreateWithoutContactInput[] | NoteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutContactInput | NoteCreateOrConnectWithoutContactInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutContactInput | NoteUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: NoteCreateManyContactInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutContactInput | NoteUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutContactInput | NoteUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type DevisUpdateManyWithoutContactNestedInput = {
    create?: XOR<DevisCreateWithoutContactInput, DevisUncheckedCreateWithoutContactInput> | DevisCreateWithoutContactInput[] | DevisUncheckedCreateWithoutContactInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutContactInput | DevisCreateOrConnectWithoutContactInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutContactInput | DevisUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: DevisCreateManyContactInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutContactInput | DevisUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutContactInput | DevisUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutContactNestedInput = {
    create?: XOR<FavoriteCreateWithoutContactInput, FavoriteUncheckedCreateWithoutContactInput> | FavoriteCreateWithoutContactInput[] | FavoriteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutContactInput | FavoriteCreateOrConnectWithoutContactInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutContactInput | FavoriteUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: FavoriteCreateManyContactInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutContactInput | FavoriteUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutContactInput | FavoriteUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutContactNestedInput = {
    create?: XOR<ActivityLogCreateWithoutContactInput, ActivityLogUncheckedCreateWithoutContactInput> | ActivityLogCreateWithoutContactInput[] | ActivityLogUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutContactInput | ActivityLogCreateOrConnectWithoutContactInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutContactInput | ActivityLogUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: ActivityLogCreateManyContactInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutContactInput | ActivityLogUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutContactInput | ActivityLogUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutContactNestedInput = {
    create?: XOR<UserCreateWithoutContactInput, UserUncheckedCreateWithoutContactInput>
    connectOrCreate?: UserCreateOrConnectWithoutContactInput
    upsert?: UserUpsertWithoutContactInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutContactInput, UserUpdateWithoutContactInput>, UserUncheckedUpdateWithoutContactInput>
  }

  export type UserUpdateOneWithoutContactsNestedInput = {
    create?: XOR<UserCreateWithoutContactsInput, UserUncheckedCreateWithoutContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutContactsInput
    upsert?: UserUpsertWithoutContactsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutContactsInput, UserUpdateWithoutContactsInput>, UserUncheckedUpdateWithoutContactsInput>
  }

  export type OrganisationUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<OrganisationCreateWithoutContactInput, OrganisationUncheckedCreateWithoutContactInput> | OrganisationCreateWithoutContactInput[] | OrganisationUncheckedCreateWithoutContactInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutContactInput | OrganisationCreateOrConnectWithoutContactInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutContactInput | OrganisationUpsertWithWhereUniqueWithoutContactInput[]
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutContactInput | OrganisationUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutContactInput | OrganisationUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<CommentCreateWithoutContactInput, CommentUncheckedCreateWithoutContactInput> | CommentCreateWithoutContactInput[] | CommentUncheckedCreateWithoutContactInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutContactInput | CommentCreateOrConnectWithoutContactInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutContactInput | CommentUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: CommentCreateManyContactInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutContactInput | CommentUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutContactInput | CommentUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type FeedbackContactUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutContactInput, FeedbackContactUncheckedCreateWithoutContactInput> | FeedbackContactCreateWithoutContactInput[] | FeedbackContactUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutContactInput | FeedbackContactCreateOrConnectWithoutContactInput[]
    upsert?: FeedbackContactUpsertWithWhereUniqueWithoutContactInput | FeedbackContactUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: FeedbackContactCreateManyContactInputEnvelope
    set?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    disconnect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    delete?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    connect?: FeedbackContactWhereUniqueInput | FeedbackContactWhereUniqueInput[]
    update?: FeedbackContactUpdateWithWhereUniqueWithoutContactInput | FeedbackContactUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: FeedbackContactUpdateManyWithWhereWithoutContactInput | FeedbackContactUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
  }

  export type NoteUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<NoteCreateWithoutContactInput, NoteUncheckedCreateWithoutContactInput> | NoteCreateWithoutContactInput[] | NoteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: NoteCreateOrConnectWithoutContactInput | NoteCreateOrConnectWithoutContactInput[]
    upsert?: NoteUpsertWithWhereUniqueWithoutContactInput | NoteUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: NoteCreateManyContactInputEnvelope
    set?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    disconnect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    delete?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    connect?: NoteWhereUniqueInput | NoteWhereUniqueInput[]
    update?: NoteUpdateWithWhereUniqueWithoutContactInput | NoteUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: NoteUpdateManyWithWhereWithoutContactInput | NoteUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: NoteScalarWhereInput | NoteScalarWhereInput[]
  }

  export type DevisUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<DevisCreateWithoutContactInput, DevisUncheckedCreateWithoutContactInput> | DevisCreateWithoutContactInput[] | DevisUncheckedCreateWithoutContactInput[]
    connectOrCreate?: DevisCreateOrConnectWithoutContactInput | DevisCreateOrConnectWithoutContactInput[]
    upsert?: DevisUpsertWithWhereUniqueWithoutContactInput | DevisUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: DevisCreateManyContactInputEnvelope
    set?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    disconnect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    delete?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    connect?: DevisWhereUniqueInput | DevisWhereUniqueInput[]
    update?: DevisUpdateWithWhereUniqueWithoutContactInput | DevisUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: DevisUpdateManyWithWhereWithoutContactInput | DevisUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: DevisScalarWhereInput | DevisScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<FavoriteCreateWithoutContactInput, FavoriteUncheckedCreateWithoutContactInput> | FavoriteCreateWithoutContactInput[] | FavoriteUncheckedCreateWithoutContactInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutContactInput | FavoriteCreateOrConnectWithoutContactInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutContactInput | FavoriteUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: FavoriteCreateManyContactInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutContactInput | FavoriteUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutContactInput | FavoriteUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutContactNestedInput = {
    create?: XOR<ActivityLogCreateWithoutContactInput, ActivityLogUncheckedCreateWithoutContactInput> | ActivityLogCreateWithoutContactInput[] | ActivityLogUncheckedCreateWithoutContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutContactInput | ActivityLogCreateOrConnectWithoutContactInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutContactInput | ActivityLogUpsertWithWhereUniqueWithoutContactInput[]
    createMany?: ActivityLogCreateManyContactInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutContactInput | ActivityLogUpdateWithWhereUniqueWithoutContactInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutContactInput | ActivityLogUpdateManyWithWhereWithoutContactInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ContactCreateNestedOneWithoutCommentsInput = {
    create?: XOR<ContactCreateWithoutCommentsInput, ContactUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: ContactCreateOrConnectWithoutCommentsInput
    connect?: ContactWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutCommentInput = {
    create?: XOR<ActivityLogCreateWithoutCommentInput, ActivityLogUncheckedCreateWithoutCommentInput> | ActivityLogCreateWithoutCommentInput[] | ActivityLogUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCommentInput | ActivityLogCreateOrConnectWithoutCommentInput[]
    createMany?: ActivityLogCreateManyCommentInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCommentInput = {
    create?: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<ActivityLogCreateWithoutCommentInput, ActivityLogUncheckedCreateWithoutCommentInput> | ActivityLogCreateWithoutCommentInput[] | ActivityLogUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCommentInput | ActivityLogCreateOrConnectWithoutCommentInput[]
    createMany?: ActivityLogCreateManyCommentInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ContactUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<ContactCreateWithoutCommentsInput, ContactUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: ContactCreateOrConnectWithoutCommentsInput
    upsert?: ContactUpsertWithoutCommentsInput
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutCommentsInput, ContactUpdateWithoutCommentsInput>, ContactUncheckedUpdateWithoutCommentsInput>
  }

  export type ActivityLogUpdateManyWithoutCommentNestedInput = {
    create?: XOR<ActivityLogCreateWithoutCommentInput, ActivityLogUncheckedCreateWithoutCommentInput> | ActivityLogCreateWithoutCommentInput[] | ActivityLogUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCommentInput | ActivityLogCreateOrConnectWithoutCommentInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutCommentInput | ActivityLogUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: ActivityLogCreateManyCommentInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutCommentInput | ActivityLogUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutCommentInput | ActivityLogUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCommentNestedInput = {
    create?: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentInput
    upsert?: UserUpsertWithoutCommentInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentInput, UserUpdateWithoutCommentInput>, UserUncheckedUpdateWithoutCommentInput>
  }

  export type ActivityLogUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<ActivityLogCreateWithoutCommentInput, ActivityLogUncheckedCreateWithoutCommentInput> | ActivityLogCreateWithoutCommentInput[] | ActivityLogUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCommentInput | ActivityLogCreateOrConnectWithoutCommentInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutCommentInput | ActivityLogUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: ActivityLogCreateManyCommentInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutCommentInput | ActivityLogUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutCommentInput | ActivityLogUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ContactCreateNestedOneWithoutFeedbackContactInput = {
    create?: XOR<ContactCreateWithoutFeedbackContactInput, ContactUncheckedCreateWithoutFeedbackContactInput>
    connectOrCreate?: ContactCreateOrConnectWithoutFeedbackContactInput
    connect?: ContactWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFeedbackContactInput = {
    create?: XOR<UserCreateWithoutFeedbackContactInput, UserUncheckedCreateWithoutFeedbackContactInput>
    connectOrCreate?: UserCreateOrConnectWithoutFeedbackContactInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutFeedbackContactInput = {
    create?: XOR<ActivityLogCreateWithoutFeedbackContactInput, ActivityLogUncheckedCreateWithoutFeedbackContactInput> | ActivityLogCreateWithoutFeedbackContactInput[] | ActivityLogUncheckedCreateWithoutFeedbackContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFeedbackContactInput | ActivityLogCreateOrConnectWithoutFeedbackContactInput[]
    createMany?: ActivityLogCreateManyFeedbackContactInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutFeedbackContactsInput = {
    create?: XOR<UserCreateWithoutFeedbackContactsInput, UserUncheckedCreateWithoutFeedbackContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFeedbackContactsInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutFeedbackContactInput = {
    create?: XOR<ActivityLogCreateWithoutFeedbackContactInput, ActivityLogUncheckedCreateWithoutFeedbackContactInput> | ActivityLogCreateWithoutFeedbackContactInput[] | ActivityLogUncheckedCreateWithoutFeedbackContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFeedbackContactInput | ActivityLogCreateOrConnectWithoutFeedbackContactInput[]
    createMany?: ActivityLogCreateManyFeedbackContactInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ContactUpdateOneRequiredWithoutFeedbackContactNestedInput = {
    create?: XOR<ContactCreateWithoutFeedbackContactInput, ContactUncheckedCreateWithoutFeedbackContactInput>
    connectOrCreate?: ContactCreateOrConnectWithoutFeedbackContactInput
    upsert?: ContactUpsertWithoutFeedbackContactInput
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutFeedbackContactInput, ContactUpdateWithoutFeedbackContactInput>, ContactUncheckedUpdateWithoutFeedbackContactInput>
  }

  export type UserUpdateOneRequiredWithoutFeedbackContactNestedInput = {
    create?: XOR<UserCreateWithoutFeedbackContactInput, UserUncheckedCreateWithoutFeedbackContactInput>
    connectOrCreate?: UserCreateOrConnectWithoutFeedbackContactInput
    upsert?: UserUpsertWithoutFeedbackContactInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFeedbackContactInput, UserUpdateWithoutFeedbackContactInput>, UserUncheckedUpdateWithoutFeedbackContactInput>
  }

  export type ActivityLogUpdateManyWithoutFeedbackContactNestedInput = {
    create?: XOR<ActivityLogCreateWithoutFeedbackContactInput, ActivityLogUncheckedCreateWithoutFeedbackContactInput> | ActivityLogCreateWithoutFeedbackContactInput[] | ActivityLogUncheckedCreateWithoutFeedbackContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFeedbackContactInput | ActivityLogCreateOrConnectWithoutFeedbackContactInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutFeedbackContactInput | ActivityLogUpsertWithWhereUniqueWithoutFeedbackContactInput[]
    createMany?: ActivityLogCreateManyFeedbackContactInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutFeedbackContactInput | ActivityLogUpdateWithWhereUniqueWithoutFeedbackContactInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutFeedbackContactInput | ActivityLogUpdateManyWithWhereWithoutFeedbackContactInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutFeedbackContactsNestedInput = {
    create?: XOR<UserCreateWithoutFeedbackContactsInput, UserUncheckedCreateWithoutFeedbackContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFeedbackContactsInput
    upsert?: UserUpsertWithoutFeedbackContactsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFeedbackContactsInput, UserUpdateWithoutFeedbackContactsInput>, UserUncheckedUpdateWithoutFeedbackContactsInput>
  }

  export type ActivityLogUncheckedUpdateManyWithoutFeedbackContactNestedInput = {
    create?: XOR<ActivityLogCreateWithoutFeedbackContactInput, ActivityLogUncheckedCreateWithoutFeedbackContactInput> | ActivityLogCreateWithoutFeedbackContactInput[] | ActivityLogUncheckedCreateWithoutFeedbackContactInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFeedbackContactInput | ActivityLogCreateOrConnectWithoutFeedbackContactInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutFeedbackContactInput | ActivityLogUpsertWithWhereUniqueWithoutFeedbackContactInput[]
    createMany?: ActivityLogCreateManyFeedbackContactInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutFeedbackContactInput | ActivityLogUpdateWithWhereUniqueWithoutFeedbackContactInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutFeedbackContactInput | ActivityLogUpdateManyWithWhereWithoutFeedbackContactInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ContactCreateNestedOneWithoutFavoriteInput = {
    create?: XOR<ContactCreateWithoutFavoriteInput, ContactUncheckedCreateWithoutFavoriteInput>
    connectOrCreate?: ContactCreateOrConnectWithoutFavoriteInput
    connect?: ContactWhereUniqueInput
  }

  export type OrganisationCreateNestedOneWithoutFavoriteInput = {
    create?: XOR<OrganisationCreateWithoutFavoriteInput, OrganisationUncheckedCreateWithoutFavoriteInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutFavoriteInput
    connect?: OrganisationWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutFavoriteInput = {
    create?: XOR<ActivityLogCreateWithoutFavoriteInput, ActivityLogUncheckedCreateWithoutFavoriteInput> | ActivityLogCreateWithoutFavoriteInput[] | ActivityLogUncheckedCreateWithoutFavoriteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFavoriteInput | ActivityLogCreateOrConnectWithoutFavoriteInput[]
    createMany?: ActivityLogCreateManyFavoriteInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutFavoriteInput = {
    create?: XOR<UserCreateWithoutFavoriteInput, UserUncheckedCreateWithoutFavoriteInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoriteInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutFavoriteInput = {
    create?: XOR<ActivityLogCreateWithoutFavoriteInput, ActivityLogUncheckedCreateWithoutFavoriteInput> | ActivityLogCreateWithoutFavoriteInput[] | ActivityLogUncheckedCreateWithoutFavoriteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFavoriteInput | ActivityLogCreateOrConnectWithoutFavoriteInput[]
    createMany?: ActivityLogCreateManyFavoriteInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ContactUpdateOneRequiredWithoutFavoriteNestedInput = {
    create?: XOR<ContactCreateWithoutFavoriteInput, ContactUncheckedCreateWithoutFavoriteInput>
    connectOrCreate?: ContactCreateOrConnectWithoutFavoriteInput
    upsert?: ContactUpsertWithoutFavoriteInput
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutFavoriteInput, ContactUpdateWithoutFavoriteInput>, ContactUncheckedUpdateWithoutFavoriteInput>
  }

  export type OrganisationUpdateOneRequiredWithoutFavoriteNestedInput = {
    create?: XOR<OrganisationCreateWithoutFavoriteInput, OrganisationUncheckedCreateWithoutFavoriteInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutFavoriteInput
    upsert?: OrganisationUpsertWithoutFavoriteInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutFavoriteInput, OrganisationUpdateWithoutFavoriteInput>, OrganisationUncheckedUpdateWithoutFavoriteInput>
  }

  export type ActivityLogUpdateManyWithoutFavoriteNestedInput = {
    create?: XOR<ActivityLogCreateWithoutFavoriteInput, ActivityLogUncheckedCreateWithoutFavoriteInput> | ActivityLogCreateWithoutFavoriteInput[] | ActivityLogUncheckedCreateWithoutFavoriteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFavoriteInput | ActivityLogCreateOrConnectWithoutFavoriteInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutFavoriteInput | ActivityLogUpsertWithWhereUniqueWithoutFavoriteInput[]
    createMany?: ActivityLogCreateManyFavoriteInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutFavoriteInput | ActivityLogUpdateWithWhereUniqueWithoutFavoriteInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutFavoriteInput | ActivityLogUpdateManyWithWhereWithoutFavoriteInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutFavoriteNestedInput = {
    create?: XOR<UserCreateWithoutFavoriteInput, UserUncheckedCreateWithoutFavoriteInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoriteInput
    upsert?: UserUpsertWithoutFavoriteInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavoriteInput, UserUpdateWithoutFavoriteInput>, UserUncheckedUpdateWithoutFavoriteInput>
  }

  export type ActivityLogUncheckedUpdateManyWithoutFavoriteNestedInput = {
    create?: XOR<ActivityLogCreateWithoutFavoriteInput, ActivityLogUncheckedCreateWithoutFavoriteInput> | ActivityLogCreateWithoutFavoriteInput[] | ActivityLogUncheckedCreateWithoutFavoriteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutFavoriteInput | ActivityLogCreateOrConnectWithoutFavoriteInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutFavoriteInput | ActivityLogUpsertWithWhereUniqueWithoutFavoriteInput[]
    createMany?: ActivityLogCreateManyFavoriteInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutFavoriteInput | ActivityLogUpdateWithWhereUniqueWithoutFavoriteInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutFavoriteInput | ActivityLogUpdateManyWithWhereWithoutFavoriteInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ProductCreateimagesInput = {
    set: string[]
  }

  export type OrganisationCreateNestedOneWithoutProductInput = {
    create?: XOR<OrganisationCreateWithoutProductInput, OrganisationUncheckedCreateWithoutProductInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutProductInput
    connect?: OrganisationWhereUniqueInput
  }

  export type BrandCreateNestedOneWithoutProductInput = {
    create?: XOR<BrandCreateWithoutProductInput, BrandUncheckedCreateWithoutProductInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductInput
    connect?: BrandWhereUniqueInput
  }

  export type StockCreateNestedManyWithoutProductInput = {
    create?: XOR<StockCreateWithoutProductInput, StockUncheckedCreateWithoutProductInput> | StockCreateWithoutProductInput[] | StockUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductInput | StockCreateOrConnectWithoutProductInput[]
    createMany?: StockCreateManyProductInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutProductInput = {
    create?: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput> | CategoryCreateWithoutProductInput[] | CategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductInput | CategoryCreateOrConnectWithoutProductInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type DevisItemCreateNestedManyWithoutProductInput = {
    create?: XOR<DevisItemCreateWithoutProductInput, DevisItemUncheckedCreateWithoutProductInput> | DevisItemCreateWithoutProductInput[] | DevisItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutProductInput | DevisItemCreateOrConnectWithoutProductInput[]
    createMany?: DevisItemCreateManyProductInputEnvelope
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutProductInput = {
    create?: XOR<ActivityLogCreateWithoutProductInput, ActivityLogUncheckedCreateWithoutProductInput> | ActivityLogCreateWithoutProductInput[] | ActivityLogUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutProductInput | ActivityLogCreateOrConnectWithoutProductInput[]
    createMany?: ActivityLogCreateManyProductInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutProductInput = {
    create?: XOR<UserCreateWithoutProductInput, UserUncheckedCreateWithoutProductInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutProductsInput = {
    create?: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductsInput
    connect?: UserWhereUniqueInput
  }

  export type StockUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<StockCreateWithoutProductInput, StockUncheckedCreateWithoutProductInput> | StockCreateWithoutProductInput[] | StockUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductInput | StockCreateOrConnectWithoutProductInput[]
    createMany?: StockCreateManyProductInputEnvelope
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput> | CategoryCreateWithoutProductInput[] | CategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductInput | CategoryCreateOrConnectWithoutProductInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type DevisItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<DevisItemCreateWithoutProductInput, DevisItemUncheckedCreateWithoutProductInput> | DevisItemCreateWithoutProductInput[] | DevisItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutProductInput | DevisItemCreateOrConnectWithoutProductInput[]
    createMany?: DevisItemCreateManyProductInputEnvelope
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ActivityLogCreateWithoutProductInput, ActivityLogUncheckedCreateWithoutProductInput> | ActivityLogCreateWithoutProductInput[] | ActivityLogUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutProductInput | ActivityLogCreateOrConnectWithoutProductInput[]
    createMany?: ActivityLogCreateManyProductInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type OrganisationUpdateOneRequiredWithoutProductNestedInput = {
    create?: XOR<OrganisationCreateWithoutProductInput, OrganisationUncheckedCreateWithoutProductInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutProductInput
    upsert?: OrganisationUpsertWithoutProductInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutProductInput, OrganisationUpdateWithoutProductInput>, OrganisationUncheckedUpdateWithoutProductInput>
  }

  export type BrandUpdateOneWithoutProductNestedInput = {
    create?: XOR<BrandCreateWithoutProductInput, BrandUncheckedCreateWithoutProductInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductInput
    upsert?: BrandUpsertWithoutProductInput
    disconnect?: BrandWhereInput | boolean
    delete?: BrandWhereInput | boolean
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutProductInput, BrandUpdateWithoutProductInput>, BrandUncheckedUpdateWithoutProductInput>
  }

  export type StockUpdateManyWithoutProductNestedInput = {
    create?: XOR<StockCreateWithoutProductInput, StockUncheckedCreateWithoutProductInput> | StockCreateWithoutProductInput[] | StockUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductInput | StockCreateOrConnectWithoutProductInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutProductInput | StockUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: StockCreateManyProductInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutProductInput | StockUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: StockUpdateManyWithWhereWithoutProductInput | StockUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutProductNestedInput = {
    create?: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput> | CategoryCreateWithoutProductInput[] | CategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductInput | CategoryCreateOrConnectWithoutProductInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutProductInput | CategoryUpsertWithWhereUniqueWithoutProductInput[]
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutProductInput | CategoryUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutProductInput | CategoryUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type DevisItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<DevisItemCreateWithoutProductInput, DevisItemUncheckedCreateWithoutProductInput> | DevisItemCreateWithoutProductInput[] | DevisItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutProductInput | DevisItemCreateOrConnectWithoutProductInput[]
    upsert?: DevisItemUpsertWithWhereUniqueWithoutProductInput | DevisItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: DevisItemCreateManyProductInputEnvelope
    set?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    disconnect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    delete?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    update?: DevisItemUpdateWithWhereUniqueWithoutProductInput | DevisItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: DevisItemUpdateManyWithWhereWithoutProductInput | DevisItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutProductNestedInput = {
    create?: XOR<ActivityLogCreateWithoutProductInput, ActivityLogUncheckedCreateWithoutProductInput> | ActivityLogCreateWithoutProductInput[] | ActivityLogUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutProductInput | ActivityLogCreateOrConnectWithoutProductInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutProductInput | ActivityLogUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ActivityLogCreateManyProductInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutProductInput | ActivityLogUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutProductInput | ActivityLogUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutProductNestedInput = {
    create?: XOR<UserCreateWithoutProductInput, UserUncheckedCreateWithoutProductInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductInput
    upsert?: UserUpsertWithoutProductInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductInput, UserUpdateWithoutProductInput>, UserUncheckedUpdateWithoutProductInput>
  }

  export type UserUpdateOneWithoutProductsNestedInput = {
    create?: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutProductsInput
    upsert?: UserUpsertWithoutProductsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProductsInput, UserUpdateWithoutProductsInput>, UserUncheckedUpdateWithoutProductsInput>
  }

  export type StockUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<StockCreateWithoutProductInput, StockUncheckedCreateWithoutProductInput> | StockCreateWithoutProductInput[] | StockUncheckedCreateWithoutProductInput[]
    connectOrCreate?: StockCreateOrConnectWithoutProductInput | StockCreateOrConnectWithoutProductInput[]
    upsert?: StockUpsertWithWhereUniqueWithoutProductInput | StockUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: StockCreateManyProductInputEnvelope
    set?: StockWhereUniqueInput | StockWhereUniqueInput[]
    disconnect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    delete?: StockWhereUniqueInput | StockWhereUniqueInput[]
    connect?: StockWhereUniqueInput | StockWhereUniqueInput[]
    update?: StockUpdateWithWhereUniqueWithoutProductInput | StockUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: StockUpdateManyWithWhereWithoutProductInput | StockUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: StockScalarWhereInput | StockScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput> | CategoryCreateWithoutProductInput[] | CategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductInput | CategoryCreateOrConnectWithoutProductInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutProductInput | CategoryUpsertWithWhereUniqueWithoutProductInput[]
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutProductInput | CategoryUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutProductInput | CategoryUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type DevisItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<DevisItemCreateWithoutProductInput, DevisItemUncheckedCreateWithoutProductInput> | DevisItemCreateWithoutProductInput[] | DevisItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutProductInput | DevisItemCreateOrConnectWithoutProductInput[]
    upsert?: DevisItemUpsertWithWhereUniqueWithoutProductInput | DevisItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: DevisItemCreateManyProductInputEnvelope
    set?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    disconnect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    delete?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    update?: DevisItemUpdateWithWhereUniqueWithoutProductInput | DevisItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: DevisItemUpdateManyWithWhereWithoutProductInput | DevisItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ActivityLogCreateWithoutProductInput, ActivityLogUncheckedCreateWithoutProductInput> | ActivityLogCreateWithoutProductInput[] | ActivityLogUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutProductInput | ActivityLogCreateOrConnectWithoutProductInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutProductInput | ActivityLogUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ActivityLogCreateManyProductInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutProductInput | ActivityLogUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutProductInput | ActivityLogUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutStockInput = {
    create?: XOR<ProductCreateWithoutStockInput, ProductUncheckedCreateWithoutStockInput>
    connectOrCreate?: ProductCreateOrConnectWithoutStockInput
    connect?: ProductWhereUniqueInput
  }

  export type OrganisationCreateNestedOneWithoutStockInput = {
    create?: XOR<OrganisationCreateWithoutStockInput, OrganisationUncheckedCreateWithoutStockInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutStockInput
    connect?: OrganisationWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutStockInput = {
    create?: XOR<ActivityLogCreateWithoutStockInput, ActivityLogUncheckedCreateWithoutStockInput> | ActivityLogCreateWithoutStockInput[] | ActivityLogUncheckedCreateWithoutStockInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutStockInput | ActivityLogCreateOrConnectWithoutStockInput[]
    createMany?: ActivityLogCreateManyStockInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutStockInput = {
    create?: XOR<UserCreateWithoutStockInput, UserUncheckedCreateWithoutStockInput>
    connectOrCreate?: UserCreateOrConnectWithoutStockInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStocksInput = {
    create?: XOR<UserCreateWithoutStocksInput, UserUncheckedCreateWithoutStocksInput>
    connectOrCreate?: UserCreateOrConnectWithoutStocksInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutStockInput = {
    create?: XOR<ActivityLogCreateWithoutStockInput, ActivityLogUncheckedCreateWithoutStockInput> | ActivityLogCreateWithoutStockInput[] | ActivityLogUncheckedCreateWithoutStockInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutStockInput | ActivityLogCreateOrConnectWithoutStockInput[]
    createMany?: ActivityLogCreateManyStockInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ProductUpdateOneRequiredWithoutStockNestedInput = {
    create?: XOR<ProductCreateWithoutStockInput, ProductUncheckedCreateWithoutStockInput>
    connectOrCreate?: ProductCreateOrConnectWithoutStockInput
    upsert?: ProductUpsertWithoutStockInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutStockInput, ProductUpdateWithoutStockInput>, ProductUncheckedUpdateWithoutStockInput>
  }

  export type OrganisationUpdateOneRequiredWithoutStockNestedInput = {
    create?: XOR<OrganisationCreateWithoutStockInput, OrganisationUncheckedCreateWithoutStockInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutStockInput
    upsert?: OrganisationUpsertWithoutStockInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutStockInput, OrganisationUpdateWithoutStockInput>, OrganisationUncheckedUpdateWithoutStockInput>
  }

  export type ActivityLogUpdateManyWithoutStockNestedInput = {
    create?: XOR<ActivityLogCreateWithoutStockInput, ActivityLogUncheckedCreateWithoutStockInput> | ActivityLogCreateWithoutStockInput[] | ActivityLogUncheckedCreateWithoutStockInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutStockInput | ActivityLogCreateOrConnectWithoutStockInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutStockInput | ActivityLogUpsertWithWhereUniqueWithoutStockInput[]
    createMany?: ActivityLogCreateManyStockInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutStockInput | ActivityLogUpdateWithWhereUniqueWithoutStockInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutStockInput | ActivityLogUpdateManyWithWhereWithoutStockInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutStockNestedInput = {
    create?: XOR<UserCreateWithoutStockInput, UserUncheckedCreateWithoutStockInput>
    connectOrCreate?: UserCreateOrConnectWithoutStockInput
    upsert?: UserUpsertWithoutStockInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStockInput, UserUpdateWithoutStockInput>, UserUncheckedUpdateWithoutStockInput>
  }

  export type UserUpdateOneWithoutStocksNestedInput = {
    create?: XOR<UserCreateWithoutStocksInput, UserUncheckedCreateWithoutStocksInput>
    connectOrCreate?: UserCreateOrConnectWithoutStocksInput
    upsert?: UserUpsertWithoutStocksInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStocksInput, UserUpdateWithoutStocksInput>, UserUncheckedUpdateWithoutStocksInput>
  }

  export type ActivityLogUncheckedUpdateManyWithoutStockNestedInput = {
    create?: XOR<ActivityLogCreateWithoutStockInput, ActivityLogUncheckedCreateWithoutStockInput> | ActivityLogCreateWithoutStockInput[] | ActivityLogUncheckedCreateWithoutStockInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutStockInput | ActivityLogCreateOrConnectWithoutStockInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutStockInput | ActivityLogUpsertWithWhereUniqueWithoutStockInput[]
    createMany?: ActivityLogCreateManyStockInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutStockInput | ActivityLogUpdateWithWhereUniqueWithoutStockInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutStockInput | ActivityLogUpdateManyWithWhereWithoutStockInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type OrganisationCreateNestedOneWithoutCategoryInput = {
    create?: XOR<OrganisationCreateWithoutCategoryInput, OrganisationUncheckedCreateWithoutCategoryInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutCategoryInput
    connect?: OrganisationWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutChildrenInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ActivityLogCreateWithoutCategoryInput, ActivityLogUncheckedCreateWithoutCategoryInput> | ActivityLogCreateWithoutCategoryInput[] | ActivityLogUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCategoryInput | ActivityLogCreateOrConnectWithoutCategoryInput[]
    createMany?: ActivityLogCreateManyCategoryInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutCategoryInput = {
    create?: XOR<BrandCreateWithoutCategoryInput, BrandUncheckedCreateWithoutCategoryInput> | BrandCreateWithoutCategoryInput[] | BrandUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCategoryInput | BrandCreateOrConnectWithoutCategoryInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCategoryInput = {
    create?: XOR<UserCreateWithoutCategoryInput, UserUncheckedCreateWithoutCategoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategoryInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCategorysInput = {
    create?: XOR<UserCreateWithoutCategorysInput, UserUncheckedCreateWithoutCategorysInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategorysInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ActivityLogCreateWithoutCategoryInput, ActivityLogUncheckedCreateWithoutCategoryInput> | ActivityLogCreateWithoutCategoryInput[] | ActivityLogUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCategoryInput | ActivityLogCreateOrConnectWithoutCategoryInput[]
    createMany?: ActivityLogCreateManyCategoryInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<BrandCreateWithoutCategoryInput, BrandUncheckedCreateWithoutCategoryInput> | BrandCreateWithoutCategoryInput[] | BrandUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCategoryInput | BrandCreateOrConnectWithoutCategoryInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type OrganisationUpdateOneRequiredWithoutCategoryNestedInput = {
    create?: XOR<OrganisationCreateWithoutCategoryInput, OrganisationUncheckedCreateWithoutCategoryInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutCategoryInput
    upsert?: OrganisationUpsertWithoutCategoryInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutCategoryInput, OrganisationUpdateWithoutCategoryInput>, OrganisationUncheckedUpdateWithoutCategoryInput>
  }

  export type CategoryUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenInput
    upsert?: CategoryUpsertWithoutChildrenInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutChildrenInput, CategoryUpdateWithoutChildrenInput>, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ActivityLogCreateWithoutCategoryInput, ActivityLogUncheckedCreateWithoutCategoryInput> | ActivityLogCreateWithoutCategoryInput[] | ActivityLogUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCategoryInput | ActivityLogCreateOrConnectWithoutCategoryInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutCategoryInput | ActivityLogUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ActivityLogCreateManyCategoryInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutCategoryInput | ActivityLogUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutCategoryInput | ActivityLogUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoriesInput | ProductUpsertWithWhereUniqueWithoutCategoriesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoriesInput | ProductUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoriesInput | ProductUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<BrandCreateWithoutCategoryInput, BrandUncheckedCreateWithoutCategoryInput> | BrandCreateWithoutCategoryInput[] | BrandUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCategoryInput | BrandCreateOrConnectWithoutCategoryInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutCategoryInput | BrandUpsertWithWhereUniqueWithoutCategoryInput[]
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutCategoryInput | BrandUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutCategoryInput | BrandUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCategoryNestedInput = {
    create?: XOR<UserCreateWithoutCategoryInput, UserUncheckedCreateWithoutCategoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategoryInput
    upsert?: UserUpsertWithoutCategoryInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCategoryInput, UserUpdateWithoutCategoryInput>, UserUncheckedUpdateWithoutCategoryInput>
  }

  export type UserUpdateOneWithoutCategorysNestedInput = {
    create?: XOR<UserCreateWithoutCategorysInput, UserUncheckedCreateWithoutCategorysInput>
    connectOrCreate?: UserCreateOrConnectWithoutCategorysInput
    upsert?: UserUpsertWithoutCategorysInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCategorysInput, UserUpdateWithoutCategorysInput>, UserUncheckedUpdateWithoutCategorysInput>
  }

  export type CategoryUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput> | CategoryCreateWithoutParentInput[] | CategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentInput | CategoryCreateOrConnectWithoutParentInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentInput | CategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CategoryCreateManyParentInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentInput | CategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentInput | CategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ActivityLogCreateWithoutCategoryInput, ActivityLogUncheckedCreateWithoutCategoryInput> | ActivityLogCreateWithoutCategoryInput[] | ActivityLogUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutCategoryInput | ActivityLogCreateOrConnectWithoutCategoryInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutCategoryInput | ActivityLogUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ActivityLogCreateManyCategoryInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutCategoryInput | ActivityLogUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutCategoryInput | ActivityLogUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoriesInput | ProductUpsertWithWhereUniqueWithoutCategoriesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoriesInput | ProductUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoriesInput | ProductUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<BrandCreateWithoutCategoryInput, BrandUncheckedCreateWithoutCategoryInput> | BrandCreateWithoutCategoryInput[] | BrandUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCategoryInput | BrandCreateOrConnectWithoutCategoryInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutCategoryInput | BrandUpsertWithWhereUniqueWithoutCategoryInput[]
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutCategoryInput | BrandUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutCategoryInput | BrandUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type OrganisationCreateNestedOneWithoutBrandInput = {
    create?: XOR<OrganisationCreateWithoutBrandInput, OrganisationUncheckedCreateWithoutBrandInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutBrandInput
    connect?: OrganisationWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutBrandInput = {
    create?: XOR<ActivityLogCreateWithoutBrandInput, ActivityLogUncheckedCreateWithoutBrandInput> | ActivityLogCreateWithoutBrandInput[] | ActivityLogUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutBrandInput | ActivityLogCreateOrConnectWithoutBrandInput[]
    createMany?: ActivityLogCreateManyBrandInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutBrandInput = {
    create?: XOR<CategoryCreateWithoutBrandInput, CategoryUncheckedCreateWithoutBrandInput> | CategoryCreateWithoutBrandInput[] | CategoryUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutBrandInput | CategoryCreateOrConnectWithoutBrandInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutBrandInput = {
    create?: XOR<UserCreateWithoutBrandInput, UserUncheckedCreateWithoutBrandInput>
    connectOrCreate?: UserCreateOrConnectWithoutBrandInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBrandsInput = {
    create?: XOR<UserCreateWithoutBrandsInput, UserUncheckedCreateWithoutBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBrandsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ActivityLogCreateWithoutBrandInput, ActivityLogUncheckedCreateWithoutBrandInput> | ActivityLogCreateWithoutBrandInput[] | ActivityLogUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutBrandInput | ActivityLogCreateOrConnectWithoutBrandInput[]
    createMany?: ActivityLogCreateManyBrandInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<CategoryCreateWithoutBrandInput, CategoryUncheckedCreateWithoutBrandInput> | CategoryCreateWithoutBrandInput[] | CategoryUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutBrandInput | CategoryCreateOrConnectWithoutBrandInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type OrganisationUpdateOneRequiredWithoutBrandNestedInput = {
    create?: XOR<OrganisationCreateWithoutBrandInput, OrganisationUncheckedCreateWithoutBrandInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutBrandInput
    upsert?: OrganisationUpsertWithoutBrandInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutBrandInput, OrganisationUpdateWithoutBrandInput>, OrganisationUncheckedUpdateWithoutBrandInput>
  }

  export type ActivityLogUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ActivityLogCreateWithoutBrandInput, ActivityLogUncheckedCreateWithoutBrandInput> | ActivityLogCreateWithoutBrandInput[] | ActivityLogUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutBrandInput | ActivityLogCreateOrConnectWithoutBrandInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutBrandInput | ActivityLogUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ActivityLogCreateManyBrandInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutBrandInput | ActivityLogUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutBrandInput | ActivityLogUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutBrandNestedInput = {
    create?: XOR<CategoryCreateWithoutBrandInput, CategoryUncheckedCreateWithoutBrandInput> | CategoryCreateWithoutBrandInput[] | CategoryUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutBrandInput | CategoryCreateOrConnectWithoutBrandInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutBrandInput | CategoryUpsertWithWhereUniqueWithoutBrandInput[]
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutBrandInput | CategoryUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutBrandInput | CategoryUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type UserUpdateOneWithoutBrandNestedInput = {
    create?: XOR<UserCreateWithoutBrandInput, UserUncheckedCreateWithoutBrandInput>
    connectOrCreate?: UserCreateOrConnectWithoutBrandInput
    upsert?: UserUpsertWithoutBrandInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBrandInput, UserUpdateWithoutBrandInput>, UserUncheckedUpdateWithoutBrandInput>
  }

  export type UserUpdateOneWithoutBrandsNestedInput = {
    create?: XOR<UserCreateWithoutBrandsInput, UserUncheckedCreateWithoutBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBrandsInput
    upsert?: UserUpsertWithoutBrandsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBrandsInput, UserUpdateWithoutBrandsInput>, UserUncheckedUpdateWithoutBrandsInput>
  }

  export type ProductUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ActivityLogCreateWithoutBrandInput, ActivityLogUncheckedCreateWithoutBrandInput> | ActivityLogCreateWithoutBrandInput[] | ActivityLogUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutBrandInput | ActivityLogCreateOrConnectWithoutBrandInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutBrandInput | ActivityLogUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ActivityLogCreateManyBrandInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutBrandInput | ActivityLogUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutBrandInput | ActivityLogUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<CategoryCreateWithoutBrandInput, CategoryUncheckedCreateWithoutBrandInput> | CategoryCreateWithoutBrandInput[] | CategoryUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutBrandInput | CategoryCreateOrConnectWithoutBrandInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutBrandInput | CategoryUpsertWithWhereUniqueWithoutBrandInput[]
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutBrandInput | CategoryUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutBrandInput | CategoryUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutNotesInput = {
    create?: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotesInput
    connect?: UserWhereUniqueInput
  }

  export type ContactCreateNestedOneWithoutNotesInput = {
    create?: XOR<ContactCreateWithoutNotesInput, ContactUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ContactCreateOrConnectWithoutNotesInput
    connect?: ContactWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCollaboratedNotesInput = {
    create?: XOR<UserCreateWithoutCollaboratedNotesInput, UserUncheckedCreateWithoutCollaboratedNotesInput> | UserCreateWithoutCollaboratedNotesInput[] | UserUncheckedCreateWithoutCollaboratedNotesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCollaboratedNotesInput | UserCreateOrConnectWithoutCollaboratedNotesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutNoteInput = {
    create?: XOR<ActivityLogCreateWithoutNoteInput, ActivityLogUncheckedCreateWithoutNoteInput> | ActivityLogCreateWithoutNoteInput[] | ActivityLogUncheckedCreateWithoutNoteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutNoteInput | ActivityLogCreateOrConnectWithoutNoteInput[]
    createMany?: ActivityLogCreateManyNoteInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type OrganisationCreateNestedManyWithoutNotesInput = {
    create?: XOR<OrganisationCreateWithoutNotesInput, OrganisationUncheckedCreateWithoutNotesInput> | OrganisationCreateWithoutNotesInput[] | OrganisationUncheckedCreateWithoutNotesInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutNotesInput | OrganisationCreateOrConnectWithoutNotesInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutNoteInput = {
    create?: XOR<UserCreateWithoutNoteInput, UserUncheckedCreateWithoutNoteInput>
    connectOrCreate?: UserCreateOrConnectWithoutNoteInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotesInput = {
    create?: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput = {
    create?: XOR<UserCreateWithoutCollaboratedNotesInput, UserUncheckedCreateWithoutCollaboratedNotesInput> | UserCreateWithoutCollaboratedNotesInput[] | UserUncheckedCreateWithoutCollaboratedNotesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCollaboratedNotesInput | UserCreateOrConnectWithoutCollaboratedNotesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutNoteInput = {
    create?: XOR<ActivityLogCreateWithoutNoteInput, ActivityLogUncheckedCreateWithoutNoteInput> | ActivityLogCreateWithoutNoteInput[] | ActivityLogUncheckedCreateWithoutNoteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutNoteInput | ActivityLogCreateOrConnectWithoutNoteInput[]
    createMany?: ActivityLogCreateManyNoteInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type OrganisationUncheckedCreateNestedManyWithoutNotesInput = {
    create?: XOR<OrganisationCreateWithoutNotesInput, OrganisationUncheckedCreateWithoutNotesInput> | OrganisationCreateWithoutNotesInput[] | OrganisationUncheckedCreateWithoutNotesInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutNotesInput | OrganisationCreateOrConnectWithoutNotesInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutNotesNestedInput = {
    create?: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotesInput
    upsert?: UserUpsertWithoutNotesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotesInput, UserUpdateWithoutNotesInput>, UserUncheckedUpdateWithoutNotesInput>
  }

  export type ContactUpdateOneRequiredWithoutNotesNestedInput = {
    create?: XOR<ContactCreateWithoutNotesInput, ContactUncheckedCreateWithoutNotesInput>
    connectOrCreate?: ContactCreateOrConnectWithoutNotesInput
    upsert?: ContactUpsertWithoutNotesInput
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutNotesInput, ContactUpdateWithoutNotesInput>, ContactUncheckedUpdateWithoutNotesInput>
  }

  export type UserUpdateManyWithoutCollaboratedNotesNestedInput = {
    create?: XOR<UserCreateWithoutCollaboratedNotesInput, UserUncheckedCreateWithoutCollaboratedNotesInput> | UserCreateWithoutCollaboratedNotesInput[] | UserUncheckedCreateWithoutCollaboratedNotesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCollaboratedNotesInput | UserCreateOrConnectWithoutCollaboratedNotesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCollaboratedNotesInput | UserUpsertWithWhereUniqueWithoutCollaboratedNotesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCollaboratedNotesInput | UserUpdateWithWhereUniqueWithoutCollaboratedNotesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCollaboratedNotesInput | UserUpdateManyWithWhereWithoutCollaboratedNotesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutNoteNestedInput = {
    create?: XOR<ActivityLogCreateWithoutNoteInput, ActivityLogUncheckedCreateWithoutNoteInput> | ActivityLogCreateWithoutNoteInput[] | ActivityLogUncheckedCreateWithoutNoteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutNoteInput | ActivityLogCreateOrConnectWithoutNoteInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutNoteInput | ActivityLogUpsertWithWhereUniqueWithoutNoteInput[]
    createMany?: ActivityLogCreateManyNoteInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutNoteInput | ActivityLogUpdateWithWhereUniqueWithoutNoteInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutNoteInput | ActivityLogUpdateManyWithWhereWithoutNoteInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type OrganisationUpdateManyWithoutNotesNestedInput = {
    create?: XOR<OrganisationCreateWithoutNotesInput, OrganisationUncheckedCreateWithoutNotesInput> | OrganisationCreateWithoutNotesInput[] | OrganisationUncheckedCreateWithoutNotesInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutNotesInput | OrganisationCreateOrConnectWithoutNotesInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutNotesInput | OrganisationUpsertWithWhereUniqueWithoutNotesInput[]
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutNotesInput | OrganisationUpdateWithWhereUniqueWithoutNotesInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutNotesInput | OrganisationUpdateManyWithWhereWithoutNotesInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutNoteNestedInput = {
    create?: XOR<UserCreateWithoutNoteInput, UserUncheckedCreateWithoutNoteInput>
    connectOrCreate?: UserCreateOrConnectWithoutNoteInput
    upsert?: UserUpsertWithoutNoteInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNoteInput, UserUpdateWithoutNoteInput>, UserUncheckedUpdateWithoutNoteInput>
  }

  export type UserUpdateOneWithoutNotesNestedInput = {
    create?: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotesInput
    upsert?: UserUpsertWithoutNotesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotesInput, UserUpdateWithoutNotesInput>, UserUncheckedUpdateWithoutNotesInput>
  }

  export type UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput = {
    create?: XOR<UserCreateWithoutCollaboratedNotesInput, UserUncheckedCreateWithoutCollaboratedNotesInput> | UserCreateWithoutCollaboratedNotesInput[] | UserUncheckedCreateWithoutCollaboratedNotesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCollaboratedNotesInput | UserCreateOrConnectWithoutCollaboratedNotesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCollaboratedNotesInput | UserUpsertWithWhereUniqueWithoutCollaboratedNotesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCollaboratedNotesInput | UserUpdateWithWhereUniqueWithoutCollaboratedNotesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCollaboratedNotesInput | UserUpdateManyWithWhereWithoutCollaboratedNotesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutNoteNestedInput = {
    create?: XOR<ActivityLogCreateWithoutNoteInput, ActivityLogUncheckedCreateWithoutNoteInput> | ActivityLogCreateWithoutNoteInput[] | ActivityLogUncheckedCreateWithoutNoteInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutNoteInput | ActivityLogCreateOrConnectWithoutNoteInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutNoteInput | ActivityLogUpsertWithWhereUniqueWithoutNoteInput[]
    createMany?: ActivityLogCreateManyNoteInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutNoteInput | ActivityLogUpdateWithWhereUniqueWithoutNoteInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutNoteInput | ActivityLogUpdateManyWithWhereWithoutNoteInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type OrganisationUncheckedUpdateManyWithoutNotesNestedInput = {
    create?: XOR<OrganisationCreateWithoutNotesInput, OrganisationUncheckedCreateWithoutNotesInput> | OrganisationCreateWithoutNotesInput[] | OrganisationUncheckedCreateWithoutNotesInput[]
    connectOrCreate?: OrganisationCreateOrConnectWithoutNotesInput | OrganisationCreateOrConnectWithoutNotesInput[]
    upsert?: OrganisationUpsertWithWhereUniqueWithoutNotesInput | OrganisationUpsertWithWhereUniqueWithoutNotesInput[]
    set?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    disconnect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    delete?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    connect?: OrganisationWhereUniqueInput | OrganisationWhereUniqueInput[]
    update?: OrganisationUpdateWithWhereUniqueWithoutNotesInput | OrganisationUpdateWithWhereUniqueWithoutNotesInput[]
    updateMany?: OrganisationUpdateManyWithWhereWithoutNotesInput | OrganisationUpdateManyWithWhereWithoutNotesInput[]
    deleteMany?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
  }

  export type OrganisationCreateNestedOneWithoutDevisInput = {
    create?: XOR<OrganisationCreateWithoutDevisInput, OrganisationUncheckedCreateWithoutDevisInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutDevisInput
    connect?: OrganisationWhereUniqueInput
  }

  export type ContactCreateNestedOneWithoutDevisInput = {
    create?: XOR<ContactCreateWithoutDevisInput, ContactUncheckedCreateWithoutDevisInput>
    connectOrCreate?: ContactCreateOrConnectWithoutDevisInput
    connect?: ContactWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDevisInput = {
    create?: XOR<UserCreateWithoutDevisInput, UserUncheckedCreateWithoutDevisInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevisInput
    connect?: UserWhereUniqueInput
  }

  export type DevisItemCreateNestedManyWithoutDevisInput = {
    create?: XOR<DevisItemCreateWithoutDevisInput, DevisItemUncheckedCreateWithoutDevisInput> | DevisItemCreateWithoutDevisInput[] | DevisItemUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutDevisInput | DevisItemCreateOrConnectWithoutDevisInput[]
    createMany?: DevisItemCreateManyDevisInputEnvelope
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
  }

  export type ActivityLogCreateNestedManyWithoutDevisInput = {
    create?: XOR<ActivityLogCreateWithoutDevisInput, ActivityLogUncheckedCreateWithoutDevisInput> | ActivityLogCreateWithoutDevisInput[] | ActivityLogUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisInput | ActivityLogCreateOrConnectWithoutDevisInput[]
    createMany?: ActivityLogCreateManyDevisInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutDevissInput = {
    create?: XOR<UserCreateWithoutDevissInput, UserUncheckedCreateWithoutDevissInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevissInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedDevissInput = {
    create?: XOR<UserCreateWithoutUpdatedDevissInput, UserUncheckedCreateWithoutUpdatedDevissInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedDevissInput
    connect?: UserWhereUniqueInput
  }

  export type DevisItemUncheckedCreateNestedManyWithoutDevisInput = {
    create?: XOR<DevisItemCreateWithoutDevisInput, DevisItemUncheckedCreateWithoutDevisInput> | DevisItemCreateWithoutDevisInput[] | DevisItemUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutDevisInput | DevisItemCreateOrConnectWithoutDevisInput[]
    createMany?: DevisItemCreateManyDevisInputEnvelope
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutDevisInput = {
    create?: XOR<ActivityLogCreateWithoutDevisInput, ActivityLogUncheckedCreateWithoutDevisInput> | ActivityLogCreateWithoutDevisInput[] | ActivityLogUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisInput | ActivityLogCreateOrConnectWithoutDevisInput[]
    createMany?: ActivityLogCreateManyDevisInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type EnumTaxTypeFieldUpdateOperationsInput = {
    set?: $Enums.TaxType
  }

  export type EnumDevisStatusFieldUpdateOperationsInput = {
    set?: $Enums.DevisStatus
  }

  export type OrganisationUpdateOneRequiredWithoutDevisNestedInput = {
    create?: XOR<OrganisationCreateWithoutDevisInput, OrganisationUncheckedCreateWithoutDevisInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutDevisInput
    upsert?: OrganisationUpsertWithoutDevisInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutDevisInput, OrganisationUpdateWithoutDevisInput>, OrganisationUncheckedUpdateWithoutDevisInput>
  }

  export type ContactUpdateOneRequiredWithoutDevisNestedInput = {
    create?: XOR<ContactCreateWithoutDevisInput, ContactUncheckedCreateWithoutDevisInput>
    connectOrCreate?: ContactCreateOrConnectWithoutDevisInput
    upsert?: ContactUpsertWithoutDevisInput
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutDevisInput, ContactUpdateWithoutDevisInput>, ContactUncheckedUpdateWithoutDevisInput>
  }

  export type UserUpdateOneRequiredWithoutDevisNestedInput = {
    create?: XOR<UserCreateWithoutDevisInput, UserUncheckedCreateWithoutDevisInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevisInput
    upsert?: UserUpsertWithoutDevisInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDevisInput, UserUpdateWithoutDevisInput>, UserUncheckedUpdateWithoutDevisInput>
  }

  export type DevisItemUpdateManyWithoutDevisNestedInput = {
    create?: XOR<DevisItemCreateWithoutDevisInput, DevisItemUncheckedCreateWithoutDevisInput> | DevisItemCreateWithoutDevisInput[] | DevisItemUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutDevisInput | DevisItemCreateOrConnectWithoutDevisInput[]
    upsert?: DevisItemUpsertWithWhereUniqueWithoutDevisInput | DevisItemUpsertWithWhereUniqueWithoutDevisInput[]
    createMany?: DevisItemCreateManyDevisInputEnvelope
    set?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    disconnect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    delete?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    update?: DevisItemUpdateWithWhereUniqueWithoutDevisInput | DevisItemUpdateWithWhereUniqueWithoutDevisInput[]
    updateMany?: DevisItemUpdateManyWithWhereWithoutDevisInput | DevisItemUpdateManyWithWhereWithoutDevisInput[]
    deleteMany?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
  }

  export type ActivityLogUpdateManyWithoutDevisNestedInput = {
    create?: XOR<ActivityLogCreateWithoutDevisInput, ActivityLogUncheckedCreateWithoutDevisInput> | ActivityLogCreateWithoutDevisInput[] | ActivityLogUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisInput | ActivityLogCreateOrConnectWithoutDevisInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutDevisInput | ActivityLogUpsertWithWhereUniqueWithoutDevisInput[]
    createMany?: ActivityLogCreateManyDevisInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutDevisInput | ActivityLogUpdateWithWhereUniqueWithoutDevisInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutDevisInput | ActivityLogUpdateManyWithWhereWithoutDevisInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutDevissNestedInput = {
    create?: XOR<UserCreateWithoutDevissInput, UserUncheckedCreateWithoutDevissInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevissInput
    upsert?: UserUpsertWithoutDevissInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDevissInput, UserUpdateWithoutDevissInput>, UserUncheckedUpdateWithoutDevissInput>
  }

  export type UserUpdateOneWithoutUpdatedDevissNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedDevissInput, UserUncheckedCreateWithoutUpdatedDevissInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedDevissInput
    upsert?: UserUpsertWithoutUpdatedDevissInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedDevissInput, UserUpdateWithoutUpdatedDevissInput>, UserUncheckedUpdateWithoutUpdatedDevissInput>
  }

  export type DevisItemUncheckedUpdateManyWithoutDevisNestedInput = {
    create?: XOR<DevisItemCreateWithoutDevisInput, DevisItemUncheckedCreateWithoutDevisInput> | DevisItemCreateWithoutDevisInput[] | DevisItemUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: DevisItemCreateOrConnectWithoutDevisInput | DevisItemCreateOrConnectWithoutDevisInput[]
    upsert?: DevisItemUpsertWithWhereUniqueWithoutDevisInput | DevisItemUpsertWithWhereUniqueWithoutDevisInput[]
    createMany?: DevisItemCreateManyDevisInputEnvelope
    set?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    disconnect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    delete?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    connect?: DevisItemWhereUniqueInput | DevisItemWhereUniqueInput[]
    update?: DevisItemUpdateWithWhereUniqueWithoutDevisInput | DevisItemUpdateWithWhereUniqueWithoutDevisInput[]
    updateMany?: DevisItemUpdateManyWithWhereWithoutDevisInput | DevisItemUpdateManyWithWhereWithoutDevisInput[]
    deleteMany?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
  }

  export type ActivityLogUncheckedUpdateManyWithoutDevisNestedInput = {
    create?: XOR<ActivityLogCreateWithoutDevisInput, ActivityLogUncheckedCreateWithoutDevisInput> | ActivityLogCreateWithoutDevisInput[] | ActivityLogUncheckedCreateWithoutDevisInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisInput | ActivityLogCreateOrConnectWithoutDevisInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutDevisInput | ActivityLogUpsertWithWhereUniqueWithoutDevisInput[]
    createMany?: ActivityLogCreateManyDevisInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutDevisInput | ActivityLogUpdateWithWhereUniqueWithoutDevisInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutDevisInput | ActivityLogUpdateManyWithWhereWithoutDevisInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type DevisCreateNestedOneWithoutItemsInput = {
    create?: XOR<DevisCreateWithoutItemsInput, DevisUncheckedCreateWithoutItemsInput>
    connectOrCreate?: DevisCreateOrConnectWithoutItemsInput
    connect?: DevisWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutDevisItemInput = {
    create?: XOR<ProductCreateWithoutDevisItemInput, ProductUncheckedCreateWithoutDevisItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutDevisItemInput
    connect?: ProductWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutDevisItemInput = {
    create?: XOR<ActivityLogCreateWithoutDevisItemInput, ActivityLogUncheckedCreateWithoutDevisItemInput> | ActivityLogCreateWithoutDevisItemInput[] | ActivityLogUncheckedCreateWithoutDevisItemInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisItemInput | ActivityLogCreateOrConnectWithoutDevisItemInput[]
    createMany?: ActivityLogCreateManyDevisItemInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutDevisItemsInput = {
    create?: XOR<UserCreateWithoutDevisItemsInput, UserUncheckedCreateWithoutDevisItemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevisItemsInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutDevisItemInput = {
    create?: XOR<ActivityLogCreateWithoutDevisItemInput, ActivityLogUncheckedCreateWithoutDevisItemInput> | ActivityLogCreateWithoutDevisItemInput[] | ActivityLogUncheckedCreateWithoutDevisItemInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisItemInput | ActivityLogCreateOrConnectWithoutDevisItemInput[]
    createMany?: ActivityLogCreateManyDevisItemInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type DevisUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<DevisCreateWithoutItemsInput, DevisUncheckedCreateWithoutItemsInput>
    connectOrCreate?: DevisCreateOrConnectWithoutItemsInput
    upsert?: DevisUpsertWithoutItemsInput
    connect?: DevisWhereUniqueInput
    update?: XOR<XOR<DevisUpdateToOneWithWhereWithoutItemsInput, DevisUpdateWithoutItemsInput>, DevisUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneWithoutDevisItemNestedInput = {
    create?: XOR<ProductCreateWithoutDevisItemInput, ProductUncheckedCreateWithoutDevisItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutDevisItemInput
    upsert?: ProductUpsertWithoutDevisItemInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutDevisItemInput, ProductUpdateWithoutDevisItemInput>, ProductUncheckedUpdateWithoutDevisItemInput>
  }

  export type ActivityLogUpdateManyWithoutDevisItemNestedInput = {
    create?: XOR<ActivityLogCreateWithoutDevisItemInput, ActivityLogUncheckedCreateWithoutDevisItemInput> | ActivityLogCreateWithoutDevisItemInput[] | ActivityLogUncheckedCreateWithoutDevisItemInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisItemInput | ActivityLogCreateOrConnectWithoutDevisItemInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutDevisItemInput | ActivityLogUpsertWithWhereUniqueWithoutDevisItemInput[]
    createMany?: ActivityLogCreateManyDevisItemInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutDevisItemInput | ActivityLogUpdateWithWhereUniqueWithoutDevisItemInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutDevisItemInput | ActivityLogUpdateManyWithWhereWithoutDevisItemInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutDevisItemsNestedInput = {
    create?: XOR<UserCreateWithoutDevisItemsInput, UserUncheckedCreateWithoutDevisItemsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevisItemsInput
    upsert?: UserUpsertWithoutDevisItemsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDevisItemsInput, UserUpdateWithoutDevisItemsInput>, UserUncheckedUpdateWithoutDevisItemsInput>
  }

  export type ActivityLogUncheckedUpdateManyWithoutDevisItemNestedInput = {
    create?: XOR<ActivityLogCreateWithoutDevisItemInput, ActivityLogUncheckedCreateWithoutDevisItemInput> | ActivityLogCreateWithoutDevisItemInput[] | ActivityLogUncheckedCreateWithoutDevisItemInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutDevisItemInput | ActivityLogCreateOrConnectWithoutDevisItemInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutDevisItemInput | ActivityLogUpsertWithWhereUniqueWithoutDevisItemInput[]
    createMany?: ActivityLogCreateManyDevisItemInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutDevisItemInput | ActivityLogUpdateWithWhereUniqueWithoutDevisItemInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutDevisItemInput | ActivityLogUpdateManyWithWhereWithoutDevisItemInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutTaskAssigneeInput = {
    create?: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskAssigneeInput
    connect?: UserWhereUniqueInput
  }

  export type OrganisationCreateNestedOneWithoutTaskInput = {
    create?: XOR<OrganisationCreateWithoutTaskInput, OrganisationUncheckedCreateWithoutTaskInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutTaskInput
    connect?: OrganisationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTaskCreatorInput = {
    create?: XOR<UserCreateWithoutTaskCreatorInput, UserUncheckedCreateWithoutTaskCreatorInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskCreatorInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogCreateNestedManyWithoutTaskInput = {
    create?: XOR<ActivityLogCreateWithoutTaskInput, ActivityLogUncheckedCreateWithoutTaskInput> | ActivityLogCreateWithoutTaskInput[] | ActivityLogUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutTaskInput | ActivityLogCreateOrConnectWithoutTaskInput[]
    createMany?: ActivityLogCreateManyTaskInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutTaskInput = {
    create?: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTasksInput = {
    create?: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutTasksInput
    connect?: UserWhereUniqueInput
  }

  export type ActivityLogUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<ActivityLogCreateWithoutTaskInput, ActivityLogUncheckedCreateWithoutTaskInput> | ActivityLogCreateWithoutTaskInput[] | ActivityLogUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutTaskInput | ActivityLogCreateOrConnectWithoutTaskInput[]
    createMany?: ActivityLogCreateManyTaskInputEnvelope
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
  }

  export type EnumTaskTypeFieldUpdateOperationsInput = {
    set?: $Enums.TaskType
  }

  export type EnumTaskStatusFieldUpdateOperationsInput = {
    set?: $Enums.TaskStatus
  }

  export type EnumTaskPriorityFieldUpdateOperationsInput = {
    set?: $Enums.TaskPriority
  }

  export type UserUpdateOneWithoutTaskAssigneeNestedInput = {
    create?: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskAssigneeInput
    upsert?: UserUpsertWithoutTaskAssigneeInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTaskAssigneeInput, UserUpdateWithoutTaskAssigneeInput>, UserUncheckedUpdateWithoutTaskAssigneeInput>
  }

  export type OrganisationUpdateOneRequiredWithoutTaskNestedInput = {
    create?: XOR<OrganisationCreateWithoutTaskInput, OrganisationUncheckedCreateWithoutTaskInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutTaskInput
    upsert?: OrganisationUpsertWithoutTaskInput
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutTaskInput, OrganisationUpdateWithoutTaskInput>, OrganisationUncheckedUpdateWithoutTaskInput>
  }

  export type UserUpdateOneRequiredWithoutTaskCreatorNestedInput = {
    create?: XOR<UserCreateWithoutTaskCreatorInput, UserUncheckedCreateWithoutTaskCreatorInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskCreatorInput
    upsert?: UserUpsertWithoutTaskCreatorInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTaskCreatorInput, UserUpdateWithoutTaskCreatorInput>, UserUncheckedUpdateWithoutTaskCreatorInput>
  }

  export type ActivityLogUpdateManyWithoutTaskNestedInput = {
    create?: XOR<ActivityLogCreateWithoutTaskInput, ActivityLogUncheckedCreateWithoutTaskInput> | ActivityLogCreateWithoutTaskInput[] | ActivityLogUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutTaskInput | ActivityLogCreateOrConnectWithoutTaskInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutTaskInput | ActivityLogUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: ActivityLogCreateManyTaskInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutTaskInput | ActivityLogUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutTaskInput | ActivityLogUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserUpdateOneWithoutTaskNestedInput = {
    create?: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskInput
    upsert?: UserUpsertWithoutTaskInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTaskInput, UserUpdateWithoutTaskInput>, UserUncheckedUpdateWithoutTaskInput>
  }

  export type UserUpdateOneWithoutTasksNestedInput = {
    create?: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutTasksInput
    upsert?: UserUpsertWithoutTasksInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTasksInput, UserUpdateWithoutTasksInput>, UserUncheckedUpdateWithoutTasksInput>
  }

  export type ActivityLogUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<ActivityLogCreateWithoutTaskInput, ActivityLogUncheckedCreateWithoutTaskInput> | ActivityLogCreateWithoutTaskInput[] | ActivityLogUncheckedCreateWithoutTaskInput[]
    connectOrCreate?: ActivityLogCreateOrConnectWithoutTaskInput | ActivityLogCreateOrConnectWithoutTaskInput[]
    upsert?: ActivityLogUpsertWithWhereUniqueWithoutTaskInput | ActivityLogUpsertWithWhereUniqueWithoutTaskInput[]
    createMany?: ActivityLogCreateManyTaskInputEnvelope
    set?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    disconnect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    delete?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    connect?: ActivityLogWhereUniqueInput | ActivityLogWhereUniqueInput[]
    update?: ActivityLogUpdateWithWhereUniqueWithoutTaskInput | ActivityLogUpdateWithWhereUniqueWithoutTaskInput[]
    updateMany?: ActivityLogUpdateManyWithWhereWithoutTaskInput | ActivityLogUpdateManyWithWhereWithoutTaskInput[]
    deleteMany?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAllActivityLogsInput = {
    create?: XOR<UserCreateWithoutAllActivityLogsInput, UserUncheckedCreateWithoutAllActivityLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAllActivityLogsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganisationCreateNestedOneWithoutActivityLogsInput = {
    create?: XOR<OrganisationCreateWithoutActivityLogsInput, OrganisationUncheckedCreateWithoutActivityLogsInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutActivityLogsInput
    connect?: OrganisationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedActivitiesInput = {
    create?: XOR<UserCreateWithoutCreatedActivitiesInput, UserUncheckedCreateWithoutCreatedActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedActivitiesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedActivitiesInput = {
    create?: XOR<UserCreateWithoutUpdatedActivitiesInput, UserUncheckedCreateWithoutUpdatedActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedActivitiesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRelatedActivitiesInput = {
    create?: XOR<UserCreateWithoutRelatedActivitiesInput, UserUncheckedCreateWithoutRelatedActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutRelatedActivitiesInput
    connect?: UserWhereUniqueInput
  }

  export type AccountCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<AccountCreateWithoutActivityLogInput, AccountUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: AccountCreateOrConnectWithoutActivityLogInput
    connect?: AccountWhereUniqueInput
  }

  export type SessionCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<SessionCreateWithoutActivityLogInput, SessionUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: SessionCreateOrConnectWithoutActivityLogInput
    connect?: SessionWhereUniqueInput
  }

  export type AuthenticatorCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<AuthenticatorCreateWithoutActivityLogInput, AuthenticatorUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: AuthenticatorCreateOrConnectWithoutActivityLogInput
    connect?: AuthenticatorWhereUniqueInput
  }

  export type InvitationCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<InvitationCreateWithoutActivityLogInput, InvitationUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: InvitationCreateOrConnectWithoutActivityLogInput
    connect?: InvitationWhereUniqueInput
  }

  export type PasswordResetTokenCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<PasswordResetTokenCreateWithoutActivityLogInput, PasswordResetTokenUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutActivityLogInput
    connect?: PasswordResetTokenWhereUniqueInput
  }

  export type ContactCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<ContactCreateWithoutActivityLogInput, ContactUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: ContactCreateOrConnectWithoutActivityLogInput
    connect?: ContactWhereUniqueInput
  }

  export type CommentCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<CommentCreateWithoutActivityLogInput, CommentUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: CommentCreateOrConnectWithoutActivityLogInput
    connect?: CommentWhereUniqueInput
  }

  export type FeedbackContactCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<FeedbackContactCreateWithoutActivityLogInput, FeedbackContactUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutActivityLogInput
    connect?: FeedbackContactWhereUniqueInput
  }

  export type FavoriteCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<FavoriteCreateWithoutActivityLogInput, FavoriteUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: FavoriteCreateOrConnectWithoutActivityLogInput
    connect?: FavoriteWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<ProductCreateWithoutActivityLogInput, ProductUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: ProductCreateOrConnectWithoutActivityLogInput
    connect?: ProductWhereUniqueInput
  }

  export type StockCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<StockCreateWithoutActivityLogInput, StockUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: StockCreateOrConnectWithoutActivityLogInput
    connect?: StockWhereUniqueInput
  }

  export type CategoryCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<CategoryCreateWithoutActivityLogInput, CategoryUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutActivityLogInput
    connect?: CategoryWhereUniqueInput
  }

  export type BrandCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<BrandCreateWithoutActivityLogInput, BrandUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: BrandCreateOrConnectWithoutActivityLogInput
    connect?: BrandWhereUniqueInput
  }

  export type NoteCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<NoteCreateWithoutActivityLogInput, NoteUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: NoteCreateOrConnectWithoutActivityLogInput
    connect?: NoteWhereUniqueInput
  }

  export type DevisCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<DevisCreateWithoutActivityLogInput, DevisUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: DevisCreateOrConnectWithoutActivityLogInput
    connect?: DevisWhereUniqueInput
  }

  export type DevisItemCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<DevisItemCreateWithoutActivityLogInput, DevisItemUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: DevisItemCreateOrConnectWithoutActivityLogInput
    connect?: DevisItemWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutActivityLogInput = {
    create?: XOR<TaskCreateWithoutActivityLogInput, TaskUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: TaskCreateOrConnectWithoutActivityLogInput
    connect?: TaskWhereUniqueInput
  }

  export type UserUpdateOneWithoutAllActivityLogsNestedInput = {
    create?: XOR<UserCreateWithoutAllActivityLogsInput, UserUncheckedCreateWithoutAllActivityLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAllActivityLogsInput
    upsert?: UserUpsertWithoutAllActivityLogsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAllActivityLogsInput, UserUpdateWithoutAllActivityLogsInput>, UserUncheckedUpdateWithoutAllActivityLogsInput>
  }

  export type OrganisationUpdateOneWithoutActivityLogsNestedInput = {
    create?: XOR<OrganisationCreateWithoutActivityLogsInput, OrganisationUncheckedCreateWithoutActivityLogsInput>
    connectOrCreate?: OrganisationCreateOrConnectWithoutActivityLogsInput
    upsert?: OrganisationUpsertWithoutActivityLogsInput
    disconnect?: OrganisationWhereInput | boolean
    delete?: OrganisationWhereInput | boolean
    connect?: OrganisationWhereUniqueInput
    update?: XOR<XOR<OrganisationUpdateToOneWithWhereWithoutActivityLogsInput, OrganisationUpdateWithoutActivityLogsInput>, OrganisationUncheckedUpdateWithoutActivityLogsInput>
  }

  export type UserUpdateOneWithoutCreatedActivitiesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedActivitiesInput, UserUncheckedCreateWithoutCreatedActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedActivitiesInput
    upsert?: UserUpsertWithoutCreatedActivitiesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedActivitiesInput, UserUpdateWithoutCreatedActivitiesInput>, UserUncheckedUpdateWithoutCreatedActivitiesInput>
  }

  export type UserUpdateOneWithoutUpdatedActivitiesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedActivitiesInput, UserUncheckedCreateWithoutUpdatedActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedActivitiesInput
    upsert?: UserUpsertWithoutUpdatedActivitiesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedActivitiesInput, UserUpdateWithoutUpdatedActivitiesInput>, UserUncheckedUpdateWithoutUpdatedActivitiesInput>
  }

  export type UserUpdateOneWithoutRelatedActivitiesNestedInput = {
    create?: XOR<UserCreateWithoutRelatedActivitiesInput, UserUncheckedCreateWithoutRelatedActivitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutRelatedActivitiesInput
    upsert?: UserUpsertWithoutRelatedActivitiesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRelatedActivitiesInput, UserUpdateWithoutRelatedActivitiesInput>, UserUncheckedUpdateWithoutRelatedActivitiesInput>
  }

  export type AccountUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<AccountCreateWithoutActivityLogInput, AccountUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: AccountCreateOrConnectWithoutActivityLogInput
    upsert?: AccountUpsertWithoutActivityLogInput
    disconnect?: AccountWhereInput | boolean
    delete?: AccountWhereInput | boolean
    connect?: AccountWhereUniqueInput
    update?: XOR<XOR<AccountUpdateToOneWithWhereWithoutActivityLogInput, AccountUpdateWithoutActivityLogInput>, AccountUncheckedUpdateWithoutActivityLogInput>
  }

  export type SessionUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<SessionCreateWithoutActivityLogInput, SessionUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: SessionCreateOrConnectWithoutActivityLogInput
    upsert?: SessionUpsertWithoutActivityLogInput
    disconnect?: SessionWhereInput | boolean
    delete?: SessionWhereInput | boolean
    connect?: SessionWhereUniqueInput
    update?: XOR<XOR<SessionUpdateToOneWithWhereWithoutActivityLogInput, SessionUpdateWithoutActivityLogInput>, SessionUncheckedUpdateWithoutActivityLogInput>
  }

  export type AuthenticatorUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<AuthenticatorCreateWithoutActivityLogInput, AuthenticatorUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: AuthenticatorCreateOrConnectWithoutActivityLogInput
    upsert?: AuthenticatorUpsertWithoutActivityLogInput
    disconnect?: AuthenticatorWhereInput | boolean
    delete?: AuthenticatorWhereInput | boolean
    connect?: AuthenticatorWhereUniqueInput
    update?: XOR<XOR<AuthenticatorUpdateToOneWithWhereWithoutActivityLogInput, AuthenticatorUpdateWithoutActivityLogInput>, AuthenticatorUncheckedUpdateWithoutActivityLogInput>
  }

  export type InvitationUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<InvitationCreateWithoutActivityLogInput, InvitationUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: InvitationCreateOrConnectWithoutActivityLogInput
    upsert?: InvitationUpsertWithoutActivityLogInput
    disconnect?: InvitationWhereInput | boolean
    delete?: InvitationWhereInput | boolean
    connect?: InvitationWhereUniqueInput
    update?: XOR<XOR<InvitationUpdateToOneWithWhereWithoutActivityLogInput, InvitationUpdateWithoutActivityLogInput>, InvitationUncheckedUpdateWithoutActivityLogInput>
  }

  export type PasswordResetTokenUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<PasswordResetTokenCreateWithoutActivityLogInput, PasswordResetTokenUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: PasswordResetTokenCreateOrConnectWithoutActivityLogInput
    upsert?: PasswordResetTokenUpsertWithoutActivityLogInput
    disconnect?: PasswordResetTokenWhereInput | boolean
    delete?: PasswordResetTokenWhereInput | boolean
    connect?: PasswordResetTokenWhereUniqueInput
    update?: XOR<XOR<PasswordResetTokenUpdateToOneWithWhereWithoutActivityLogInput, PasswordResetTokenUpdateWithoutActivityLogInput>, PasswordResetTokenUncheckedUpdateWithoutActivityLogInput>
  }

  export type ContactUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<ContactCreateWithoutActivityLogInput, ContactUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: ContactCreateOrConnectWithoutActivityLogInput
    upsert?: ContactUpsertWithoutActivityLogInput
    disconnect?: ContactWhereInput | boolean
    delete?: ContactWhereInput | boolean
    connect?: ContactWhereUniqueInput
    update?: XOR<XOR<ContactUpdateToOneWithWhereWithoutActivityLogInput, ContactUpdateWithoutActivityLogInput>, ContactUncheckedUpdateWithoutActivityLogInput>
  }

  export type CommentUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<CommentCreateWithoutActivityLogInput, CommentUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: CommentCreateOrConnectWithoutActivityLogInput
    upsert?: CommentUpsertWithoutActivityLogInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutActivityLogInput, CommentUpdateWithoutActivityLogInput>, CommentUncheckedUpdateWithoutActivityLogInput>
  }

  export type FeedbackContactUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<FeedbackContactCreateWithoutActivityLogInput, FeedbackContactUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: FeedbackContactCreateOrConnectWithoutActivityLogInput
    upsert?: FeedbackContactUpsertWithoutActivityLogInput
    disconnect?: FeedbackContactWhereInput | boolean
    delete?: FeedbackContactWhereInput | boolean
    connect?: FeedbackContactWhereUniqueInput
    update?: XOR<XOR<FeedbackContactUpdateToOneWithWhereWithoutActivityLogInput, FeedbackContactUpdateWithoutActivityLogInput>, FeedbackContactUncheckedUpdateWithoutActivityLogInput>
  }

  export type FavoriteUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<FavoriteCreateWithoutActivityLogInput, FavoriteUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: FavoriteCreateOrConnectWithoutActivityLogInput
    upsert?: FavoriteUpsertWithoutActivityLogInput
    disconnect?: FavoriteWhereInput | boolean
    delete?: FavoriteWhereInput | boolean
    connect?: FavoriteWhereUniqueInput
    update?: XOR<XOR<FavoriteUpdateToOneWithWhereWithoutActivityLogInput, FavoriteUpdateWithoutActivityLogInput>, FavoriteUncheckedUpdateWithoutActivityLogInput>
  }

  export type ProductUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<ProductCreateWithoutActivityLogInput, ProductUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: ProductCreateOrConnectWithoutActivityLogInput
    upsert?: ProductUpsertWithoutActivityLogInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutActivityLogInput, ProductUpdateWithoutActivityLogInput>, ProductUncheckedUpdateWithoutActivityLogInput>
  }

  export type StockUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<StockCreateWithoutActivityLogInput, StockUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: StockCreateOrConnectWithoutActivityLogInput
    upsert?: StockUpsertWithoutActivityLogInput
    disconnect?: StockWhereInput | boolean
    delete?: StockWhereInput | boolean
    connect?: StockWhereUniqueInput
    update?: XOR<XOR<StockUpdateToOneWithWhereWithoutActivityLogInput, StockUpdateWithoutActivityLogInput>, StockUncheckedUpdateWithoutActivityLogInput>
  }

  export type CategoryUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<CategoryCreateWithoutActivityLogInput, CategoryUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutActivityLogInput
    upsert?: CategoryUpsertWithoutActivityLogInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutActivityLogInput, CategoryUpdateWithoutActivityLogInput>, CategoryUncheckedUpdateWithoutActivityLogInput>
  }

  export type BrandUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<BrandCreateWithoutActivityLogInput, BrandUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: BrandCreateOrConnectWithoutActivityLogInput
    upsert?: BrandUpsertWithoutActivityLogInput
    disconnect?: BrandWhereInput | boolean
    delete?: BrandWhereInput | boolean
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutActivityLogInput, BrandUpdateWithoutActivityLogInput>, BrandUncheckedUpdateWithoutActivityLogInput>
  }

  export type NoteUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<NoteCreateWithoutActivityLogInput, NoteUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: NoteCreateOrConnectWithoutActivityLogInput
    upsert?: NoteUpsertWithoutActivityLogInput
    disconnect?: NoteWhereInput | boolean
    delete?: NoteWhereInput | boolean
    connect?: NoteWhereUniqueInput
    update?: XOR<XOR<NoteUpdateToOneWithWhereWithoutActivityLogInput, NoteUpdateWithoutActivityLogInput>, NoteUncheckedUpdateWithoutActivityLogInput>
  }

  export type DevisUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<DevisCreateWithoutActivityLogInput, DevisUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: DevisCreateOrConnectWithoutActivityLogInput
    upsert?: DevisUpsertWithoutActivityLogInput
    disconnect?: DevisWhereInput | boolean
    delete?: DevisWhereInput | boolean
    connect?: DevisWhereUniqueInput
    update?: XOR<XOR<DevisUpdateToOneWithWhereWithoutActivityLogInput, DevisUpdateWithoutActivityLogInput>, DevisUncheckedUpdateWithoutActivityLogInput>
  }

  export type DevisItemUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<DevisItemCreateWithoutActivityLogInput, DevisItemUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: DevisItemCreateOrConnectWithoutActivityLogInput
    upsert?: DevisItemUpsertWithoutActivityLogInput
    disconnect?: DevisItemWhereInput | boolean
    delete?: DevisItemWhereInput | boolean
    connect?: DevisItemWhereUniqueInput
    update?: XOR<XOR<DevisItemUpdateToOneWithWhereWithoutActivityLogInput, DevisItemUpdateWithoutActivityLogInput>, DevisItemUncheckedUpdateWithoutActivityLogInput>
  }

  export type TaskUpdateOneWithoutActivityLogNestedInput = {
    create?: XOR<TaskCreateWithoutActivityLogInput, TaskUncheckedCreateWithoutActivityLogInput>
    connectOrCreate?: TaskCreateOrConnectWithoutActivityLogInput
    upsert?: TaskUpsertWithoutActivityLogInput
    disconnect?: TaskWhereInput | boolean
    delete?: TaskWhereInput | boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<XOR<TaskUpdateToOneWithWhereWithoutActivityLogInput, TaskUpdateWithoutActivityLogInput>, TaskUncheckedUpdateWithoutActivityLogInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedEnumAccessTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AccessType | EnumAccessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccessTypeFilter<$PrismaModel> | $Enums.AccessType
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedEnumAccessTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccessType | EnumAccessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccessType[] | ListEnumAccessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAccessTypeWithAggregatesFilter<$PrismaModel> | $Enums.AccessType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccessTypeFilter<$PrismaModel>
    _max?: NestedEnumAccessTypeFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumDomainFilter<$PrismaModel = never> = {
    equals?: $Enums.Domain | EnumDomainFieldRefInput<$PrismaModel>
    in?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    notIn?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    not?: NestedEnumDomainFilter<$PrismaModel> | $Enums.Domain
  }

  export type NestedEnumDomainWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Domain | EnumDomainFieldRefInput<$PrismaModel>
    in?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    notIn?: $Enums.Domain[] | ListEnumDomainFieldRefInput<$PrismaModel>
    not?: NestedEnumDomainWithAggregatesFilter<$PrismaModel> | $Enums.Domain
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDomainFilter<$PrismaModel>
    _max?: NestedEnumDomainFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumStatus_ContactFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_Contact | EnumStatus_ContactFieldRefInput<$PrismaModel>
    in?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    not?: NestedEnumStatus_ContactFilter<$PrismaModel> | $Enums.Status_Contact
  }

  export type NestedEnumNiveauFilter<$PrismaModel = never> = {
    equals?: $Enums.Niveau | EnumNiveauFieldRefInput<$PrismaModel>
    in?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    notIn?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    not?: NestedEnumNiveauFilter<$PrismaModel> | $Enums.Niveau
  }

  export type NestedEnumStatus_ContactWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status_Contact | EnumStatus_ContactFieldRefInput<$PrismaModel>
    in?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status_Contact[] | ListEnumStatus_ContactFieldRefInput<$PrismaModel>
    not?: NestedEnumStatus_ContactWithAggregatesFilter<$PrismaModel> | $Enums.Status_Contact
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatus_ContactFilter<$PrismaModel>
    _max?: NestedEnumStatus_ContactFilter<$PrismaModel>
  }

  export type NestedEnumNiveauWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Niveau | EnumNiveauFieldRefInput<$PrismaModel>
    in?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    notIn?: $Enums.Niveau[] | ListEnumNiveauFieldRefInput<$PrismaModel>
    not?: NestedEnumNiveauWithAggregatesFilter<$PrismaModel> | $Enums.Niveau
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNiveauFilter<$PrismaModel>
    _max?: NestedEnumNiveauFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumTaxTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TaxType | EnumTaxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaxTypeFilter<$PrismaModel> | $Enums.TaxType
  }

  export type NestedEnumDevisStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DevisStatus | EnumDevisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDevisStatusFilter<$PrismaModel> | $Enums.DevisStatus
  }

  export type NestedEnumTaxTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaxType | EnumTaxTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaxType[] | ListEnumTaxTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaxTypeWithAggregatesFilter<$PrismaModel> | $Enums.TaxType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaxTypeFilter<$PrismaModel>
    _max?: NestedEnumTaxTypeFilter<$PrismaModel>
  }

  export type NestedEnumDevisStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DevisStatus | EnumDevisStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DevisStatus[] | ListEnumDevisStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDevisStatusWithAggregatesFilter<$PrismaModel> | $Enums.DevisStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDevisStatusFilter<$PrismaModel>
    _max?: NestedEnumDevisStatusFilter<$PrismaModel>
  }

  export type NestedEnumTaskTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTypeFilter<$PrismaModel> | $Enums.TaskType
  }

  export type NestedEnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type NestedEnumTaskPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityFilter<$PrismaModel> | $Enums.TaskPriority
  }

  export type NestedEnumTaskTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskType | EnumTaskTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskType[] | ListEnumTaskTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTypeWithAggregatesFilter<$PrismaModel> | $Enums.TaskType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskTypeFilter<$PrismaModel>
    _max?: NestedEnumTaskTypeFilter<$PrismaModel>
  }

  export type NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel> | $Enums.TaskPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskPriorityFilter<$PrismaModel>
    _max?: NestedEnumTaskPriorityFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    ActivityLog?: ActivityLogCreateNestedManyWithoutAccountInput
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutAccountInput
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ActivityLog?: ActivityLogCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AuthenticatorCreateWithoutUserInput = {
    id?: string
    credentialID: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
    ActivityLog?: ActivityLogCreateNestedManyWithoutAuthenticatorInput
  }

  export type AuthenticatorUncheckedCreateWithoutUserInput = {
    id?: string
    credentialID: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutAuthenticatorInput
  }

  export type AuthenticatorCreateOrConnectWithoutUserInput = {
    where: AuthenticatorWhereUniqueInput
    create: XOR<AuthenticatorCreateWithoutUserInput, AuthenticatorUncheckedCreateWithoutUserInput>
  }

  export type AuthenticatorCreateManyUserInputEnvelope = {
    data: AuthenticatorCreateManyUserInput | AuthenticatorCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrganisationCreateWithoutMembersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutMembersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutMembersInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutMembersInput, OrganisationUncheckedCreateWithoutMembersInput>
  }

  export type OrganisationCreateWithoutOwnerInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutOwnerInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutOwnerInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutOwnerInput, OrganisationUncheckedCreateWithoutOwnerInput>
  }

  export type OrganisationCreateManyOwnerInputEnvelope = {
    data: OrganisationCreateManyOwnerInput | OrganisationCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type InvitationCreateWithoutInvitedByInput = {
    id?: string
    email: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutInvitationsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutInvitationInput
  }

  export type InvitationUncheckedCreateWithoutInvitedByInput = {
    id?: string
    email: string
    organisationId: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutInvitationInput
  }

  export type InvitationCreateOrConnectWithoutInvitedByInput = {
    where: InvitationWhereUniqueInput
    create: XOR<InvitationCreateWithoutInvitedByInput, InvitationUncheckedCreateWithoutInvitedByInput>
  }

  export type InvitationCreateManyInvitedByInputEnvelope = {
    data: InvitationCreateManyInvitedByInput | InvitationCreateManyInvitedByInput[]
    skipDuplicates?: boolean
  }

  export type PasswordResetTokenCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    ActivityLog?: ActivityLogCreateNestedManyWithoutPasswordResetTokenInput
  }

  export type PasswordResetTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutPasswordResetTokenInput
  }

  export type PasswordResetTokenCreateOrConnectWithoutUserInput = {
    where: PasswordResetTokenWhereUniqueInput
    create: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput>
  }

  export type PasswordResetTokenCreateManyUserInputEnvelope = {
    data: PasswordResetTokenCreateManyUserInput | PasswordResetTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FeedbackContactCreateWithoutUserInput = {
    id?: string
    message: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutFeedbackContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFeedbackContactInput
    createdByUser?: UserCreateNestedOneWithoutFeedbackContactsInput
  }

  export type FeedbackContactUncheckedCreateWithoutUserInput = {
    id?: string
    message: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFeedbackContactInput
  }

  export type FeedbackContactCreateOrConnectWithoutUserInput = {
    where: FeedbackContactWhereUniqueInput
    create: XOR<FeedbackContactCreateWithoutUserInput, FeedbackContactUncheckedCreateWithoutUserInput>
  }

  export type FeedbackContactCreateManyUserInputEnvelope = {
    data: FeedbackContactCreateManyUserInput | FeedbackContactCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    contact: ContactCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteCreateOrConnectWithoutUserInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutUserInput, NoteUncheckedCreateWithoutUserInput>
  }

  export type NoteCreateManyUserInputEnvelope = {
    data: NoteCreateManyUserInput | NoteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutCollaboratorsInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    contact: ContactCreateNestedOneWithoutNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutCollaboratorsInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteCreateOrConnectWithoutCollaboratorsInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutCollaboratorsInput, NoteUncheckedCreateWithoutCollaboratorsInput>
  }

  export type TaskCreateWithoutAssigneeInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutTaskInput
    createdBy: UserCreateNestedOneWithoutTaskCreatorInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutTaskInput
    createdByUser?: UserCreateNestedOneWithoutTaskInput
    updatedByUser?: UserCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutAssigneeInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput>
  }

  export type TaskCreateManyAssigneeInputEnvelope = {
    data: TaskCreateManyAssigneeInput | TaskCreateManyAssigneeInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutCreatedByInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    organisation: OrganisationCreateNestedOneWithoutTaskInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutTaskInput
    createdByUser?: UserCreateNestedOneWithoutTaskInput
    updatedByUser?: UserCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutCreatedByInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutCreatedByInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput>
  }

  export type TaskCreateManyCreatedByInputEnvelope = {
    data: TaskCreateManyCreatedByInput | TaskCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutCreatedByInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutCreatedByInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutCreatedByInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutCreatedByInput, ActivityLogUncheckedCreateWithoutCreatedByInput>
  }

  export type ActivityLogCreateManyCreatedByInputEnvelope = {
    data: ActivityLogCreateManyCreatedByInput | ActivityLogCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutUpdatedByInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutUpdatedByInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutUpdatedByInput, ActivityLogUncheckedCreateWithoutUpdatedByInput>
  }

  export type ActivityLogCreateManyUpdatedByInputEnvelope = {
    data: ActivityLogCreateManyUpdatedByInput | ActivityLogCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutRelatedUserInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutRelatedUserInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutRelatedUserInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutRelatedUserInput, ActivityLogUncheckedCreateWithoutRelatedUserInput>
  }

  export type ActivityLogCreateManyRelatedUserInputEnvelope = {
    data: ActivityLogCreateManyRelatedUserInput | ActivityLogCreateManyRelatedUserInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutUserInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutUserInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutUserInput, ActivityLogUncheckedCreateWithoutUserInput>
  }

  export type ActivityLogCreateManyUserInputEnvelope = {
    data: ActivityLogCreateManyUserInput | ActivityLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserInput, UserUncheckedCreateWithoutUserInput>
  }

  export type UserCreateWithoutUsersInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutUsersInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUsersInput, UserUncheckedCreateWithoutUsersInput>
  }

  export type UserCreateWithoutCreatedByUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutCreatedByUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedByUserInput, UserUncheckedCreateWithoutCreatedByUserInput>
  }

  export type UserCreateManyCreatedByUserInputEnvelope = {
    data: UserCreateManyCreatedByUserInput | UserCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutUpdatedByUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedByUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedByUserInput, UserUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type UserCreateManyUpdatedByUserInputEnvelope = {
    data: UserCreateManyUpdatedByUserInput | UserCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutCreatedByUserInput = {
    id?: string
    contact: ContactCreateNestedOneWithoutFavoriteInput
    organisation: OrganisationCreateNestedOneWithoutFavoriteInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFavoriteInput
  }

  export type FavoriteUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    contactId: string
    organisationId: string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFavoriteInput
  }

  export type FavoriteCreateOrConnectWithoutCreatedByUserInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutCreatedByUserInput, FavoriteUncheckedCreateWithoutCreatedByUserInput>
  }

  export type FavoriteCreateManyCreatedByUserInputEnvelope = {
    data: FavoriteCreateManyCreatedByUserInput | FavoriteCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type OrganisationCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutCreatedByUserInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutCreatedByUserInput, OrganisationUncheckedCreateWithoutCreatedByUserInput>
  }

  export type OrganisationCreateManyCreatedByUserInputEnvelope = {
    data: OrganisationCreateManyCreatedByUserInput | OrganisationCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type OrganisationCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
  }

  export type OrganisationUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutUpdatedByUserInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutUpdatedByUserInput, OrganisationUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type OrganisationCreateManyUpdatedByUserInputEnvelope = {
    data: OrganisationCreateManyUpdatedByUserInput | OrganisationCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ContactCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutCreatedByUserInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutCreatedByUserInput, ContactUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ContactCreateManyCreatedByUserInputEnvelope = {
    data: ContactCreateManyCreatedByUserInput | ContactCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ContactCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
  }

  export type ContactUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutUpdatedByUserInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutUpdatedByUserInput, ContactUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ContactCreateManyUpdatedByUserInputEnvelope = {
    data: ContactCreateManyUpdatedByUserInput | ContactCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutCreatedByUserInput = {
    id?: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutCommentsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    content: string
    createdAt?: Date | string
    contactId: string
    updatedAt?: Date | string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutCreatedByUserInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutCreatedByUserInput, CommentUncheckedCreateWithoutCreatedByUserInput>
  }

  export type CommentCreateManyCreatedByUserInputEnvelope = {
    data: CommentCreateManyCreatedByUserInput | CommentCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCreatedByUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput>
  }

  export type CategoryCreateManyCreatedByUserInputEnvelope = {
    data: CategoryCreateManyCreatedByUserInput | CategoryCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutUpdatedByUserInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type CategoryCreateManyUpdatedByUserInputEnvelope = {
    data: CategoryCreateManyUpdatedByUserInput | CategoryCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCreatedByUserInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCreatedByUserInput, ProductUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ProductCreateManyCreatedByUserInputEnvelope = {
    data: ProductCreateManyCreatedByUserInput | ProductCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutUpdatedByUserInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUpdatedByUserInput, ProductUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ProductCreateManyUpdatedByUserInputEnvelope = {
    data: ProductCreateManyUpdatedByUserInput | ProductCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type StockCreateWithoutCreatedByUserInput = {
    id?: string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    product: ProductCreateNestedOneWithoutStockInput
    organisation: OrganisationCreateNestedOneWithoutStockInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutStockInput
    updatedByUser?: UserCreateNestedOneWithoutStocksInput
  }

  export type StockUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutCreatedByUserInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutCreatedByUserInput, StockUncheckedCreateWithoutCreatedByUserInput>
  }

  export type StockCreateManyCreatedByUserInputEnvelope = {
    data: StockCreateManyCreatedByUserInput | StockCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type StockCreateWithoutUpdatedByUserInput = {
    id?: string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    product: ProductCreateNestedOneWithoutStockInput
    organisation: OrganisationCreateNestedOneWithoutStockInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutStockInput
    createdByUser?: UserCreateNestedOneWithoutStockInput
  }

  export type StockUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutUpdatedByUserInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutUpdatedByUserInput, StockUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type StockCreateManyUpdatedByUserInputEnvelope = {
    data: StockCreateManyUpdatedByUserInput | StockCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type BrandCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutBrandInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutBrandInput
    Category?: CategoryCreateNestedManyWithoutBrandInput
    updatedByUser?: UserCreateNestedOneWithoutBrandsInput
    Product?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutBrandInput
    Category?: CategoryUncheckedCreateNestedManyWithoutBrandInput
    Product?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutCreatedByUserInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutCreatedByUserInput, BrandUncheckedCreateWithoutCreatedByUserInput>
  }

  export type BrandCreateManyCreatedByUserInputEnvelope = {
    data: BrandCreateManyCreatedByUserInput | BrandCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type BrandCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutBrandInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutBrandInput
    Category?: CategoryCreateNestedManyWithoutBrandInput
    createdByUser?: UserCreateNestedOneWithoutBrandInput
    Product?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutBrandInput
    Category?: CategoryUncheckedCreateNestedManyWithoutBrandInput
    Product?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutUpdatedByUserInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutUpdatedByUserInput, BrandUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type BrandCreateManyUpdatedByUserInputEnvelope = {
    data: BrandCreateManyUpdatedByUserInput | BrandCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutCreatedByUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    contact: ContactCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteCreateOrConnectWithoutCreatedByUserInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutCreatedByUserInput, NoteUncheckedCreateWithoutCreatedByUserInput>
  }

  export type NoteCreateManyCreatedByUserInputEnvelope = {
    data: NoteCreateManyCreatedByUserInput | NoteCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutUpdatedByUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    contact: ContactCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
  }

  export type NoteUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteCreateOrConnectWithoutUpdatedByUserInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutUpdatedByUserInput, NoteUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type NoteCreateManyUpdatedByUserInputEnvelope = {
    data: NoteCreateManyUpdatedByUserInput | NoteCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type DevisCreateWithoutCreatedByUserInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    contact: ContactCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    updatedByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutCreatedByUserInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutCreatedByUserInput, DevisUncheckedCreateWithoutCreatedByUserInput>
  }

  export type DevisCreateManyCreatedByUserInputEnvelope = {
    data: DevisCreateManyCreatedByUserInput | DevisCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type DevisCreateWithoutUpdatedByUserInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    contact: ContactCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
  }

  export type DevisUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutUpdatedByUserInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutUpdatedByUserInput, DevisUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type DevisCreateManyUpdatedByUserInputEnvelope = {
    data: DevisCreateManyUpdatedByUserInput | DevisCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type FeedbackContactCreateWithoutCreatedByUserInput = {
    id?: string
    message: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutFeedbackContactInput
    user: UserCreateNestedOneWithoutFeedbackContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFeedbackContactInput
  }

  export type FeedbackContactUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    message: string
    contactId: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFeedbackContactInput
  }

  export type FeedbackContactCreateOrConnectWithoutCreatedByUserInput = {
    where: FeedbackContactWhereUniqueInput
    create: XOR<FeedbackContactCreateWithoutCreatedByUserInput, FeedbackContactUncheckedCreateWithoutCreatedByUserInput>
  }

  export type FeedbackContactCreateManyCreatedByUserInputEnvelope = {
    data: FeedbackContactCreateManyCreatedByUserInput | FeedbackContactCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutCreatedByUserInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    organisation: OrganisationCreateNestedOneWithoutTaskInput
    createdBy: UserCreateNestedOneWithoutTaskCreatorInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutTaskInput
    updatedByUser?: UserCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutCreatedByUserInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutCreatedByUserInput, TaskUncheckedCreateWithoutCreatedByUserInput>
  }

  export type TaskCreateManyCreatedByUserInputEnvelope = {
    data: TaskCreateManyCreatedByUserInput | TaskCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutUpdatedByUserInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    organisation: OrganisationCreateNestedOneWithoutTaskInput
    createdBy: UserCreateNestedOneWithoutTaskCreatorInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutTaskInput
    createdByUser?: UserCreateNestedOneWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutUpdatedByUserInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutUpdatedByUserInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutUpdatedByUserInput, TaskUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type TaskCreateManyUpdatedByUserInputEnvelope = {
    data: TaskCreateManyUpdatedByUserInput | TaskCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type DevisItemCreateWithoutCreatedByUserInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devis: DevisCreateNestedOneWithoutItemsInput
    product?: ProductCreateNestedOneWithoutDevisItemInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisItemInput
  }

  export type DevisItemUncheckedCreateWithoutCreatedByUserInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    productId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisItemInput
  }

  export type DevisItemCreateOrConnectWithoutCreatedByUserInput = {
    where: DevisItemWhereUniqueInput
    create: XOR<DevisItemCreateWithoutCreatedByUserInput, DevisItemUncheckedCreateWithoutCreatedByUserInput>
  }

  export type DevisItemCreateManyCreatedByUserInputEnvelope = {
    data: DevisItemCreateManyCreatedByUserInput | DevisItemCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type DevisCreateWithoutCreatedByInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    contact: ContactCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateWithoutCreatedByInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutCreatedByInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutCreatedByInput, DevisUncheckedCreateWithoutCreatedByInput>
  }

  export type DevisCreateManyCreatedByInputEnvelope = {
    data: DevisCreateManyCreatedByInput | DevisCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
  }

  export type AuthenticatorUpsertWithWhereUniqueWithoutUserInput = {
    where: AuthenticatorWhereUniqueInput
    update: XOR<AuthenticatorUpdateWithoutUserInput, AuthenticatorUncheckedUpdateWithoutUserInput>
    create: XOR<AuthenticatorCreateWithoutUserInput, AuthenticatorUncheckedCreateWithoutUserInput>
  }

  export type AuthenticatorUpdateWithWhereUniqueWithoutUserInput = {
    where: AuthenticatorWhereUniqueInput
    data: XOR<AuthenticatorUpdateWithoutUserInput, AuthenticatorUncheckedUpdateWithoutUserInput>
  }

  export type AuthenticatorUpdateManyWithWhereWithoutUserInput = {
    where: AuthenticatorScalarWhereInput
    data: XOR<AuthenticatorUpdateManyMutationInput, AuthenticatorUncheckedUpdateManyWithoutUserInput>
  }

  export type AuthenticatorScalarWhereInput = {
    AND?: AuthenticatorScalarWhereInput | AuthenticatorScalarWhereInput[]
    OR?: AuthenticatorScalarWhereInput[]
    NOT?: AuthenticatorScalarWhereInput | AuthenticatorScalarWhereInput[]
    id?: StringFilter<"Authenticator"> | string
    credentialID?: StringFilter<"Authenticator"> | string
    userId?: StringFilter<"Authenticator"> | string
    providerAccountId?: StringFilter<"Authenticator"> | string
    credentialPublicKey?: StringFilter<"Authenticator"> | string
    counter?: IntFilter<"Authenticator"> | number
    credentialDeviceType?: StringFilter<"Authenticator"> | string
    credentialBackedUp?: BoolFilter<"Authenticator"> | boolean
    transports?: StringNullableFilter<"Authenticator"> | string | null
  }

  export type OrganisationUpsertWithWhereUniqueWithoutMembersInput = {
    where: OrganisationWhereUniqueInput
    update: XOR<OrganisationUpdateWithoutMembersInput, OrganisationUncheckedUpdateWithoutMembersInput>
    create: XOR<OrganisationCreateWithoutMembersInput, OrganisationUncheckedCreateWithoutMembersInput>
  }

  export type OrganisationUpdateWithWhereUniqueWithoutMembersInput = {
    where: OrganisationWhereUniqueInput
    data: XOR<OrganisationUpdateWithoutMembersInput, OrganisationUncheckedUpdateWithoutMembersInput>
  }

  export type OrganisationUpdateManyWithWhereWithoutMembersInput = {
    where: OrganisationScalarWhereInput
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyWithoutMembersInput>
  }

  export type OrganisationScalarWhereInput = {
    AND?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
    OR?: OrganisationScalarWhereInput[]
    NOT?: OrganisationScalarWhereInput | OrganisationScalarWhereInput[]
    id?: StringFilter<"Organisation"> | string
    name?: StringFilter<"Organisation"> | string
    slug?: StringFilter<"Organisation"> | string
    logo?: StringNullableFilter<"Organisation"> | string | null
    ownerId?: StringFilter<"Organisation"> | string
    createdAt?: DateTimeFilter<"Organisation"> | Date | string
    updatedAt?: DateTimeFilter<"Organisation"> | Date | string
    isArchived?: BoolFilter<"Organisation"> | boolean
    archivedAt?: DateTimeNullableFilter<"Organisation"> | Date | string | null
    archivedBy?: StringNullableFilter<"Organisation"> | string | null
    domain?: EnumDomainFilter<"Organisation"> | $Enums.Domain
    createdByUserId?: StringNullableFilter<"Organisation"> | string | null
    updatedByUserId?: StringNullableFilter<"Organisation"> | string | null
  }

  export type OrganisationUpsertWithWhereUniqueWithoutOwnerInput = {
    where: OrganisationWhereUniqueInput
    update: XOR<OrganisationUpdateWithoutOwnerInput, OrganisationUncheckedUpdateWithoutOwnerInput>
    create: XOR<OrganisationCreateWithoutOwnerInput, OrganisationUncheckedCreateWithoutOwnerInput>
  }

  export type OrganisationUpdateWithWhereUniqueWithoutOwnerInput = {
    where: OrganisationWhereUniqueInput
    data: XOR<OrganisationUpdateWithoutOwnerInput, OrganisationUncheckedUpdateWithoutOwnerInput>
  }

  export type OrganisationUpdateManyWithWhereWithoutOwnerInput = {
    where: OrganisationScalarWhereInput
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyWithoutOwnerInput>
  }

  export type InvitationUpsertWithWhereUniqueWithoutInvitedByInput = {
    where: InvitationWhereUniqueInput
    update: XOR<InvitationUpdateWithoutInvitedByInput, InvitationUncheckedUpdateWithoutInvitedByInput>
    create: XOR<InvitationCreateWithoutInvitedByInput, InvitationUncheckedCreateWithoutInvitedByInput>
  }

  export type InvitationUpdateWithWhereUniqueWithoutInvitedByInput = {
    where: InvitationWhereUniqueInput
    data: XOR<InvitationUpdateWithoutInvitedByInput, InvitationUncheckedUpdateWithoutInvitedByInput>
  }

  export type InvitationUpdateManyWithWhereWithoutInvitedByInput = {
    where: InvitationScalarWhereInput
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyWithoutInvitedByInput>
  }

  export type InvitationScalarWhereInput = {
    AND?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
    OR?: InvitationScalarWhereInput[]
    NOT?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
    id?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    organisationId?: StringFilter<"Invitation"> | string
    role?: EnumRoleFilter<"Invitation"> | $Enums.Role
    accessType?: EnumAccessTypeFilter<"Invitation"> | $Enums.AccessType
    invitedById?: StringFilter<"Invitation"> | string
    invitedAt?: DateTimeFilter<"Invitation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"Invitation"> | Date | string | null
    token?: StringFilter<"Invitation"> | string
    tokenExpiresAt?: DateTimeFilter<"Invitation"> | Date | string
    isArchived?: BoolFilter<"Invitation"> | boolean
    archivedAt?: DateTimeNullableFilter<"Invitation"> | Date | string | null
    archivedBy?: StringNullableFilter<"Invitation"> | string | null
  }

  export type PasswordResetTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: PasswordResetTokenWhereUniqueInput
    update: XOR<PasswordResetTokenUpdateWithoutUserInput, PasswordResetTokenUncheckedUpdateWithoutUserInput>
    create: XOR<PasswordResetTokenCreateWithoutUserInput, PasswordResetTokenUncheckedCreateWithoutUserInput>
  }

  export type PasswordResetTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: PasswordResetTokenWhereUniqueInput
    data: XOR<PasswordResetTokenUpdateWithoutUserInput, PasswordResetTokenUncheckedUpdateWithoutUserInput>
  }

  export type PasswordResetTokenUpdateManyWithWhereWithoutUserInput = {
    where: PasswordResetTokenScalarWhereInput
    data: XOR<PasswordResetTokenUpdateManyMutationInput, PasswordResetTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type PasswordResetTokenScalarWhereInput = {
    AND?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
    OR?: PasswordResetTokenScalarWhereInput[]
    NOT?: PasswordResetTokenScalarWhereInput | PasswordResetTokenScalarWhereInput[]
    id?: StringFilter<"PasswordResetToken"> | string
    userId?: StringFilter<"PasswordResetToken"> | string
    token?: StringFilter<"PasswordResetToken"> | string
    expiresAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
    createdAt?: DateTimeFilter<"PasswordResetToken"> | Date | string
  }

  export type FeedbackContactUpsertWithWhereUniqueWithoutUserInput = {
    where: FeedbackContactWhereUniqueInput
    update: XOR<FeedbackContactUpdateWithoutUserInput, FeedbackContactUncheckedUpdateWithoutUserInput>
    create: XOR<FeedbackContactCreateWithoutUserInput, FeedbackContactUncheckedCreateWithoutUserInput>
  }

  export type FeedbackContactUpdateWithWhereUniqueWithoutUserInput = {
    where: FeedbackContactWhereUniqueInput
    data: XOR<FeedbackContactUpdateWithoutUserInput, FeedbackContactUncheckedUpdateWithoutUserInput>
  }

  export type FeedbackContactUpdateManyWithWhereWithoutUserInput = {
    where: FeedbackContactScalarWhereInput
    data: XOR<FeedbackContactUpdateManyMutationInput, FeedbackContactUncheckedUpdateManyWithoutUserInput>
  }

  export type FeedbackContactScalarWhereInput = {
    AND?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
    OR?: FeedbackContactScalarWhereInput[]
    NOT?: FeedbackContactScalarWhereInput | FeedbackContactScalarWhereInput[]
    id?: StringFilter<"FeedbackContact"> | string
    message?: StringFilter<"FeedbackContact"> | string
    contactId?: StringFilter<"FeedbackContact"> | string
    userId?: StringFilter<"FeedbackContact"> | string
    createdAt?: DateTimeFilter<"FeedbackContact"> | Date | string
    updatedAt?: DateTimeFilter<"FeedbackContact"> | Date | string
    createdByUserId?: StringNullableFilter<"FeedbackContact"> | string | null
  }

  export type NoteUpsertWithWhereUniqueWithoutUserInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutUserInput, NoteUncheckedUpdateWithoutUserInput>
    create: XOR<NoteCreateWithoutUserInput, NoteUncheckedCreateWithoutUserInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutUserInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutUserInput, NoteUncheckedUpdateWithoutUserInput>
  }

  export type NoteUpdateManyWithWhereWithoutUserInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutUserInput>
  }

  export type NoteScalarWhereInput = {
    AND?: NoteScalarWhereInput | NoteScalarWhereInput[]
    OR?: NoteScalarWhereInput[]
    NOT?: NoteScalarWhereInput | NoteScalarWhereInput[]
    id?: StringFilter<"Note"> | string
    title?: StringFilter<"Note"> | string
    content?: StringFilter<"Note"> | string
    color?: StringFilter<"Note"> | string
    isPinned?: BoolFilter<"Note"> | boolean
    lastModified?: DateTimeFilter<"Note"> | Date | string
    userId?: StringFilter<"Note"> | string
    contactId?: StringFilter<"Note"> | string
    createdAt?: DateTimeFilter<"Note"> | Date | string
    updatedAt?: DateTimeFilter<"Note"> | Date | string
    isArchived?: BoolFilter<"Note"> | boolean
    archivedAt?: DateTimeNullableFilter<"Note"> | Date | string | null
    archivedBy?: StringNullableFilter<"Note"> | string | null
    createdByUserId?: StringNullableFilter<"Note"> | string | null
    updatedByUserId?: StringNullableFilter<"Note"> | string | null
  }

  export type NoteUpsertWithWhereUniqueWithoutCollaboratorsInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutCollaboratorsInput, NoteUncheckedUpdateWithoutCollaboratorsInput>
    create: XOR<NoteCreateWithoutCollaboratorsInput, NoteUncheckedCreateWithoutCollaboratorsInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutCollaboratorsInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutCollaboratorsInput, NoteUncheckedUpdateWithoutCollaboratorsInput>
  }

  export type NoteUpdateManyWithWhereWithoutCollaboratorsInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutCollaboratorsInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutAssigneeInput, TaskUncheckedUpdateWithoutAssigneeInput>
    create: XOR<TaskCreateWithoutAssigneeInput, TaskUncheckedCreateWithoutAssigneeInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutAssigneeInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutAssigneeInput, TaskUncheckedUpdateWithoutAssigneeInput>
  }

  export type TaskUpdateManyWithWhereWithoutAssigneeInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutAssigneeInput>
  }

  export type TaskScalarWhereInput = {
    AND?: TaskScalarWhereInput | TaskScalarWhereInput[]
    OR?: TaskScalarWhereInput[]
    NOT?: TaskScalarWhereInput | TaskScalarWhereInput[]
    id?: StringFilter<"Task"> | string
    title?: StringFilter<"Task"> | string
    description?: StringNullableFilter<"Task"> | string | null
    type?: EnumTaskTypeFilter<"Task"> | $Enums.TaskType
    status?: EnumTaskStatusFilter<"Task"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"Task"> | $Enums.TaskPriority
    assigneeId?: StringNullableFilter<"Task"> | string | null
    dueDate?: DateTimeNullableFilter<"Task"> | Date | string | null
    organisationId?: StringFilter<"Task"> | string
    createdById?: StringFilter<"Task"> | string
    createdAt?: DateTimeFilter<"Task"> | Date | string
    updatedAt?: DateTimeFilter<"Task"> | Date | string
    isArchived?: BoolFilter<"Task"> | boolean
    archivedAt?: DateTimeNullableFilter<"Task"> | Date | string | null
    archivedBy?: StringNullableFilter<"Task"> | string | null
    createdByUserId?: StringNullableFilter<"Task"> | string | null
    updatedByUserId?: StringNullableFilter<"Task"> | string | null
  }

  export type TaskUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutCreatedByInput, TaskUncheckedUpdateWithoutCreatedByInput>
    create: XOR<TaskCreateWithoutCreatedByInput, TaskUncheckedCreateWithoutCreatedByInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutCreatedByInput, TaskUncheckedUpdateWithoutCreatedByInput>
  }

  export type TaskUpdateManyWithWhereWithoutCreatedByInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutCreatedByInput, ActivityLogUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ActivityLogCreateWithoutCreatedByInput, ActivityLogUncheckedCreateWithoutCreatedByInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutCreatedByInput, ActivityLogUncheckedUpdateWithoutCreatedByInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutCreatedByInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ActivityLogScalarWhereInput = {
    AND?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
    OR?: ActivityLogScalarWhereInput[]
    NOT?: ActivityLogScalarWhereInput | ActivityLogScalarWhereInput[]
    id?: StringFilter<"ActivityLog"> | string
    action?: StringFilter<"ActivityLog"> | string
    entityType?: StringFilter<"ActivityLog"> | string
    entityId?: StringFilter<"ActivityLog"> | string
    oldData?: JsonNullableFilter<"ActivityLog">
    newData?: JsonNullableFilter<"ActivityLog">
    userId?: StringNullableFilter<"ActivityLog"> | string | null
    organisationId?: StringNullableFilter<"ActivityLog"> | string | null
    createdByUserId?: StringNullableFilter<"ActivityLog"> | string | null
    updatedByUserId?: StringNullableFilter<"ActivityLog"> | string | null
    relatedUserId?: StringNullableFilter<"ActivityLog"> | string | null
    accountId?: StringNullableFilter<"ActivityLog"> | string | null
    sessionId?: StringNullableFilter<"ActivityLog"> | string | null
    authenticatorId?: StringNullableFilter<"ActivityLog"> | string | null
    invitationId?: StringNullableFilter<"ActivityLog"> | string | null
    passwordResetTokenId?: StringNullableFilter<"ActivityLog"> | string | null
    contactId?: StringNullableFilter<"ActivityLog"> | string | null
    commentId?: StringNullableFilter<"ActivityLog"> | string | null
    feedbackContactId?: StringNullableFilter<"ActivityLog"> | string | null
    favoriteId?: StringNullableFilter<"ActivityLog"> | string | null
    productId?: StringNullableFilter<"ActivityLog"> | string | null
    stockId?: StringNullableFilter<"ActivityLog"> | string | null
    categoryId?: StringNullableFilter<"ActivityLog"> | string | null
    brandId?: StringNullableFilter<"ActivityLog"> | string | null
    noteId?: StringNullableFilter<"ActivityLog"> | string | null
    devisId?: StringNullableFilter<"ActivityLog"> | string | null
    devisItemId?: StringNullableFilter<"ActivityLog"> | string | null
    taskId?: StringNullableFilter<"ActivityLog"> | string | null
    createdAt?: DateTimeFilter<"ActivityLog"> | Date | string
    ipAddress?: StringNullableFilter<"ActivityLog"> | string | null
    userAgent?: StringNullableFilter<"ActivityLog"> | string | null
    actionDetails?: StringNullableFilter<"ActivityLog"> | string | null
    entityName?: StringNullableFilter<"ActivityLog"> | string | null
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutUpdatedByInput, ActivityLogUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ActivityLogCreateWithoutUpdatedByInput, ActivityLogUncheckedCreateWithoutUpdatedByInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutUpdatedByInput, ActivityLogUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutRelatedUserInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutRelatedUserInput, ActivityLogUncheckedUpdateWithoutRelatedUserInput>
    create: XOR<ActivityLogCreateWithoutRelatedUserInput, ActivityLogUncheckedCreateWithoutRelatedUserInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutRelatedUserInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutRelatedUserInput, ActivityLogUncheckedUpdateWithoutRelatedUserInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutRelatedUserInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutRelatedUserInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutUserInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutUserInput, ActivityLogUncheckedUpdateWithoutUserInput>
    create: XOR<ActivityLogCreateWithoutUserInput, ActivityLogUncheckedCreateWithoutUserInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutUserInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutUserInput, ActivityLogUncheckedUpdateWithoutUserInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutUserInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutUserInput>
  }

  export type UserUpsertWithoutUserInput = {
    update: XOR<UserUpdateWithoutUserInput, UserUncheckedUpdateWithoutUserInput>
    create: XOR<UserCreateWithoutUserInput, UserUncheckedCreateWithoutUserInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserInput, UserUncheckedUpdateWithoutUserInput>
  }

  export type UserUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutUsersInput = {
    update: XOR<UserUpdateWithoutUsersInput, UserUncheckedUpdateWithoutUsersInput>
    create: XOR<UserCreateWithoutUsersInput, UserUncheckedCreateWithoutUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUsersInput, UserUncheckedUpdateWithoutUsersInput>
  }

  export type UserUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCreatedByUserInput, UserUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<UserCreateWithoutCreatedByUserInput, UserUncheckedCreateWithoutCreatedByUserInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCreatedByUserInput, UserUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type UserUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    email?: StringFilter<"User"> | string
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    accessType?: EnumAccessTypeFilter<"User"> | $Enums.AccessType
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isArchived?: BoolFilter<"User"> | boolean
    archivedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    archivedBy?: StringNullableFilter<"User"> | string | null
    createdByUserId?: StringNullableFilter<"User"> | string | null
    updatedByUserId?: StringNullableFilter<"User"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUpdatedByUserInput, UserUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<UserCreateWithoutUpdatedByUserInput, UserUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUpdatedByUserInput, UserUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type UserUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type FavoriteUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutCreatedByUserInput, FavoriteUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<FavoriteCreateWithoutCreatedByUserInput, FavoriteUncheckedCreateWithoutCreatedByUserInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutCreatedByUserInput, FavoriteUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type FavoriteScalarWhereInput = {
    AND?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    OR?: FavoriteScalarWhereInput[]
    NOT?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    id?: StringFilter<"Favorite"> | string
    contactId?: StringFilter<"Favorite"> | string
    organisationId?: StringFilter<"Favorite"> | string
    createdByUserId?: StringNullableFilter<"Favorite"> | string | null
  }

  export type OrganisationUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: OrganisationWhereUniqueInput
    update: XOR<OrganisationUpdateWithoutCreatedByUserInput, OrganisationUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<OrganisationCreateWithoutCreatedByUserInput, OrganisationUncheckedCreateWithoutCreatedByUserInput>
  }

  export type OrganisationUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: OrganisationWhereUniqueInput
    data: XOR<OrganisationUpdateWithoutCreatedByUserInput, OrganisationUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type OrganisationUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: OrganisationScalarWhereInput
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type OrganisationUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: OrganisationWhereUniqueInput
    update: XOR<OrganisationUpdateWithoutUpdatedByUserInput, OrganisationUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<OrganisationCreateWithoutUpdatedByUserInput, OrganisationUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type OrganisationUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: OrganisationWhereUniqueInput
    data: XOR<OrganisationUpdateWithoutUpdatedByUserInput, OrganisationUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type OrganisationUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: OrganisationScalarWhereInput
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type ContactUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutCreatedByUserInput, ContactUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<ContactCreateWithoutCreatedByUserInput, ContactUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutCreatedByUserInput, ContactUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type ContactUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type ContactScalarWhereInput = {
    AND?: ContactScalarWhereInput | ContactScalarWhereInput[]
    OR?: ContactScalarWhereInput[]
    NOT?: ContactScalarWhereInput | ContactScalarWhereInput[]
    id?: StringFilter<"Contact"> | string
    name?: StringFilter<"Contact"> | string
    logo?: StringNullableFilter<"Contact"> | string | null
    adresse?: StringNullableFilter<"Contact"> | string | null
    status_contact?: EnumStatus_ContactFilter<"Contact"> | $Enums.Status_Contact
    email?: StringNullableFilter<"Contact"> | string | null
    phone?: StringNullableFilter<"Contact"> | string | null
    niveau?: EnumNiveauFilter<"Contact"> | $Enums.Niveau
    tags?: StringNullableFilter<"Contact"> | string | null
    sector?: StringNullableFilter<"Contact"> | string | null
    createdAt?: DateTimeFilter<"Contact"> | Date | string
    updatedAt?: DateTimeFilter<"Contact"> | Date | string
    isArchived?: BoolFilter<"Contact"> | boolean
    archivedAt?: DateTimeNullableFilter<"Contact"> | Date | string | null
    archivedBy?: StringNullableFilter<"Contact"> | string | null
    createdByUserId?: StringNullableFilter<"Contact"> | string | null
    updatedByUserId?: StringNullableFilter<"Contact"> | string | null
  }

  export type ContactUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutUpdatedByUserInput, ContactUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<ContactCreateWithoutUpdatedByUserInput, ContactUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutUpdatedByUserInput, ContactUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type ContactUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type CommentUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutCreatedByUserInput, CommentUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<CommentCreateWithoutCreatedByUserInput, CommentUncheckedCreateWithoutCreatedByUserInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutCreatedByUserInput, CommentUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type CommentUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type CommentScalarWhereInput = {
    AND?: CommentScalarWhereInput | CommentScalarWhereInput[]
    OR?: CommentScalarWhereInput[]
    NOT?: CommentScalarWhereInput | CommentScalarWhereInput[]
    id?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    contactId?: StringFilter<"Comment"> | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    createdByUserId?: StringNullableFilter<"Comment"> | string | null
  }

  export type CategoryUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutCreatedByUserInput, CategoryUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<CategoryCreateWithoutCreatedByUserInput, CategoryUncheckedCreateWithoutCreatedByUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutCreatedByUserInput, CategoryUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    organisationId?: StringFilter<"Category"> | string
    logo?: StringNullableFilter<"Category"> | string | null
    parentId?: StringNullableFilter<"Category"> | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    isArchived?: BoolFilter<"Category"> | boolean
    archivedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    archivedBy?: StringNullableFilter<"Category"> | string | null
    createdByUserId?: StringNullableFilter<"Category"> | string | null
    updatedByUserId?: StringNullableFilter<"Category"> | string | null
  }

  export type CategoryUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutUpdatedByUserInput, CategoryUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<CategoryCreateWithoutUpdatedByUserInput, CategoryUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutUpdatedByUserInput, CategoryUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type CategoryUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCreatedByUserInput, ProductUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<ProductCreateWithoutCreatedByUserInput, ProductUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCreatedByUserInput, ProductUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type ProductUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    price?: FloatFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    actions?: StringNullableFilter<"Product"> | string | null
    organisationId?: StringFilter<"Product"> | string
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    isArchived?: BoolFilter<"Product"> | boolean
    archivedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    archivedBy?: StringNullableFilter<"Product"> | string | null
    brandId?: StringNullableFilter<"Product"> | string | null
    createdByUserId?: StringNullableFilter<"Product"> | string | null
    updatedByUserId?: StringNullableFilter<"Product"> | string | null
  }

  export type ProductUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUpdatedByUserInput, ProductUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<ProductCreateWithoutUpdatedByUserInput, ProductUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUpdatedByUserInput, ProductUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type ProductUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type StockUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutCreatedByUserInput, StockUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<StockCreateWithoutCreatedByUserInput, StockUncheckedCreateWithoutCreatedByUserInput>
  }

  export type StockUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutCreatedByUserInput, StockUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type StockUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type StockScalarWhereInput = {
    AND?: StockScalarWhereInput | StockScalarWhereInput[]
    OR?: StockScalarWhereInput[]
    NOT?: StockScalarWhereInput | StockScalarWhereInput[]
    id?: StringFilter<"Stock"> | string
    quantity?: IntFilter<"Stock"> | number
    productId?: StringFilter<"Stock"> | string
    organisationId?: StringFilter<"Stock"> | string
    createdAt?: DateTimeFilter<"Stock"> | Date | string
    updatedAt?: DateTimeFilter<"Stock"> | Date | string
    isArchived?: BoolFilter<"Stock"> | boolean
    archivedAt?: DateTimeNullableFilter<"Stock"> | Date | string | null
    archivedBy?: StringNullableFilter<"Stock"> | string | null
    createdByUserId?: StringNullableFilter<"Stock"> | string | null
    updatedByUserId?: StringNullableFilter<"Stock"> | string | null
  }

  export type StockUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutUpdatedByUserInput, StockUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<StockCreateWithoutUpdatedByUserInput, StockUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type StockUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutUpdatedByUserInput, StockUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type StockUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type BrandUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutCreatedByUserInput, BrandUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<BrandCreateWithoutCreatedByUserInput, BrandUncheckedCreateWithoutCreatedByUserInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutCreatedByUserInput, BrandUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type BrandUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type BrandScalarWhereInput = {
    AND?: BrandScalarWhereInput | BrandScalarWhereInput[]
    OR?: BrandScalarWhereInput[]
    NOT?: BrandScalarWhereInput | BrandScalarWhereInput[]
    id?: StringFilter<"Brand"> | string
    name?: StringFilter<"Brand"> | string
    description?: StringNullableFilter<"Brand"> | string | null
    organisationId?: StringFilter<"Brand"> | string
    logo?: StringNullableFilter<"Brand"> | string | null
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    isArchived?: BoolFilter<"Brand"> | boolean
    archivedAt?: DateTimeNullableFilter<"Brand"> | Date | string | null
    archivedBy?: StringNullableFilter<"Brand"> | string | null
    createdByUserId?: StringNullableFilter<"Brand"> | string | null
    updatedByUserId?: StringNullableFilter<"Brand"> | string | null
  }

  export type BrandUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutUpdatedByUserInput, BrandUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<BrandCreateWithoutUpdatedByUserInput, BrandUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutUpdatedByUserInput, BrandUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type BrandUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutCreatedByUserInput, NoteUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<NoteCreateWithoutCreatedByUserInput, NoteUncheckedCreateWithoutCreatedByUserInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutCreatedByUserInput, NoteUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type NoteUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutUpdatedByUserInput, NoteUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<NoteCreateWithoutUpdatedByUserInput, NoteUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutUpdatedByUserInput, NoteUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type NoteUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type DevisUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: DevisWhereUniqueInput
    update: XOR<DevisUpdateWithoutCreatedByUserInput, DevisUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<DevisCreateWithoutCreatedByUserInput, DevisUncheckedCreateWithoutCreatedByUserInput>
  }

  export type DevisUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: DevisWhereUniqueInput
    data: XOR<DevisUpdateWithoutCreatedByUserInput, DevisUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type DevisUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: DevisScalarWhereInput
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type DevisScalarWhereInput = {
    AND?: DevisScalarWhereInput | DevisScalarWhereInput[]
    OR?: DevisScalarWhereInput[]
    NOT?: DevisScalarWhereInput | DevisScalarWhereInput[]
    id?: StringFilter<"Devis"> | string
    devisNumber?: StringFilter<"Devis"> | string
    taxType?: EnumTaxTypeFilter<"Devis"> | $Enums.TaxType
    status?: EnumDevisStatusFilter<"Devis"> | $Enums.DevisStatus
    totalAmount?: FloatFilter<"Devis"> | number
    taxAmount?: FloatFilter<"Devis"> | number
    totalWithTax?: FloatFilter<"Devis"> | number
    notes?: StringNullableFilter<"Devis"> | string | null
    pdfUrl?: StringNullableFilter<"Devis"> | string | null
    creationDate?: DateTimeFilter<"Devis"> | Date | string
    lastModified?: DateTimeFilter<"Devis"> | Date | string
    archivedDate?: DateTimeNullableFilter<"Devis"> | Date | string | null
    dueDate?: DateTimeNullableFilter<"Devis"> | Date | string | null
    organisationId?: StringFilter<"Devis"> | string
    contactId?: StringFilter<"Devis"> | string
    createdById?: StringFilter<"Devis"> | string
    isArchived?: BoolFilter<"Devis"> | boolean
    archivedBy?: StringNullableFilter<"Devis"> | string | null
    createdByUserId?: StringNullableFilter<"Devis"> | string | null
    updatedByUserId?: StringNullableFilter<"Devis"> | string | null
  }

  export type DevisUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: DevisWhereUniqueInput
    update: XOR<DevisUpdateWithoutUpdatedByUserInput, DevisUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<DevisCreateWithoutUpdatedByUserInput, DevisUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type DevisUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: DevisWhereUniqueInput
    data: XOR<DevisUpdateWithoutUpdatedByUserInput, DevisUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type DevisUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: DevisScalarWhereInput
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type FeedbackContactUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: FeedbackContactWhereUniqueInput
    update: XOR<FeedbackContactUpdateWithoutCreatedByUserInput, FeedbackContactUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<FeedbackContactCreateWithoutCreatedByUserInput, FeedbackContactUncheckedCreateWithoutCreatedByUserInput>
  }

  export type FeedbackContactUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: FeedbackContactWhereUniqueInput
    data: XOR<FeedbackContactUpdateWithoutCreatedByUserInput, FeedbackContactUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type FeedbackContactUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: FeedbackContactScalarWhereInput
    data: XOR<FeedbackContactUpdateManyMutationInput, FeedbackContactUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutCreatedByUserInput, TaskUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<TaskCreateWithoutCreatedByUserInput, TaskUncheckedCreateWithoutCreatedByUserInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutCreatedByUserInput, TaskUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type TaskUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutUpdatedByUserInput, TaskUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<TaskCreateWithoutUpdatedByUserInput, TaskUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutUpdatedByUserInput, TaskUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type TaskUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type DevisItemUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: DevisItemWhereUniqueInput
    update: XOR<DevisItemUpdateWithoutCreatedByUserInput, DevisItemUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<DevisItemCreateWithoutCreatedByUserInput, DevisItemUncheckedCreateWithoutCreatedByUserInput>
  }

  export type DevisItemUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: DevisItemWhereUniqueInput
    data: XOR<DevisItemUpdateWithoutCreatedByUserInput, DevisItemUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type DevisItemUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: DevisItemScalarWhereInput
    data: XOR<DevisItemUpdateManyMutationInput, DevisItemUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type DevisItemScalarWhereInput = {
    AND?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
    OR?: DevisItemScalarWhereInput[]
    NOT?: DevisItemScalarWhereInput | DevisItemScalarWhereInput[]
    id?: StringFilter<"DevisItem"> | string
    description?: StringFilter<"DevisItem"> | string
    quantity?: IntFilter<"DevisItem"> | number
    unitPrice?: FloatFilter<"DevisItem"> | number
    taxRate?: FloatFilter<"DevisItem"> | number
    taxAmount?: FloatFilter<"DevisItem"> | number
    totalPrice?: FloatFilter<"DevisItem"> | number
    totalWithTax?: FloatFilter<"DevisItem"> | number
    creationDate?: DateTimeFilter<"DevisItem"> | Date | string
    lastModified?: DateTimeFilter<"DevisItem"> | Date | string
    devisId?: StringFilter<"DevisItem"> | string
    productId?: StringNullableFilter<"DevisItem"> | string | null
    createdByUserId?: StringNullableFilter<"DevisItem"> | string | null
  }

  export type DevisUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: DevisWhereUniqueInput
    update: XOR<DevisUpdateWithoutCreatedByInput, DevisUncheckedUpdateWithoutCreatedByInput>
    create: XOR<DevisCreateWithoutCreatedByInput, DevisUncheckedCreateWithoutCreatedByInput>
  }

  export type DevisUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: DevisWhereUniqueInput
    data: XOR<DevisUpdateWithoutCreatedByInput, DevisUncheckedUpdateWithoutCreatedByInput>
  }

  export type DevisUpdateManyWithWhereWithoutCreatedByInput = {
    where: DevisScalarWhereInput
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type UserCreateWithoutOwnedOrganisationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutOwnedOrganisationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutOwnedOrganisationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOwnedOrganisationsInput, UserUncheckedCreateWithoutOwnedOrganisationsInput>
  }

  export type UserCreateWithoutOrganisationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutOrganisationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutOrganisationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput>
  }

  export type InvitationCreateWithoutOrganisationInput = {
    id?: string
    email: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    invitedBy: UserCreateNestedOneWithoutInvitationsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutInvitationInput
  }

  export type InvitationUncheckedCreateWithoutOrganisationInput = {
    id?: string
    email: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedById: string
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutInvitationInput
  }

  export type InvitationCreateOrConnectWithoutOrganisationInput = {
    where: InvitationWhereUniqueInput
    create: XOR<InvitationCreateWithoutOrganisationInput, InvitationUncheckedCreateWithoutOrganisationInput>
  }

  export type InvitationCreateManyOrganisationInputEnvelope = {
    data: InvitationCreateManyOrganisationInput | InvitationCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutOrganisationInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutOrganisationInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrganisationInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrganisationInput, ProductUncheckedCreateWithoutOrganisationInput>
  }

  export type ProductCreateManyOrganisationInputEnvelope = {
    data: ProductCreateManyOrganisationInput | ProductCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type StockCreateWithoutOrganisationInput = {
    id?: string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    product: ProductCreateNestedOneWithoutStockInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutStockInput
    createdByUser?: UserCreateNestedOneWithoutStockInput
    updatedByUser?: UserCreateNestedOneWithoutStocksInput
  }

  export type StockUncheckedCreateWithoutOrganisationInput = {
    id?: string
    quantity: number
    productId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutOrganisationInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutOrganisationInput, StockUncheckedCreateWithoutOrganisationInput>
  }

  export type StockCreateManyOrganisationInputEnvelope = {
    data: StockCreateManyOrganisationInput | StockCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type ContactCreateWithoutOrganisationsInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutOrganisationsInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutOrganisationsInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutOrganisationsInput, ContactUncheckedCreateWithoutOrganisationsInput>
  }

  export type CategoryCreateWithoutOrganisationInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutOrganisationInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutOrganisationInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutOrganisationInput, CategoryUncheckedCreateWithoutOrganisationInput>
  }

  export type CategoryCreateManyOrganisationInputEnvelope = {
    data: CategoryCreateManyOrganisationInput | CategoryCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type BrandCreateWithoutOrganisationInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    ActivityLog?: ActivityLogCreateNestedManyWithoutBrandInput
    Category?: CategoryCreateNestedManyWithoutBrandInput
    createdByUser?: UserCreateNestedOneWithoutBrandInput
    updatedByUser?: UserCreateNestedOneWithoutBrandsInput
    Product?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutOrganisationInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutBrandInput
    Category?: CategoryUncheckedCreateNestedManyWithoutBrandInput
    Product?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutOrganisationInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutOrganisationInput, BrandUncheckedCreateWithoutOrganisationInput>
  }

  export type BrandCreateManyOrganisationInputEnvelope = {
    data: BrandCreateManyOrganisationInput | BrandCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutOrganisationInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    contact: ContactCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutOrganisationInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
  }

  export type NoteCreateOrConnectWithoutOrganisationInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutOrganisationInput, NoteUncheckedCreateWithoutOrganisationInput>
  }

  export type DevisCreateWithoutOrganisationInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    contact: ContactCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateWithoutOrganisationInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutOrganisationInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutOrganisationInput, DevisUncheckedCreateWithoutOrganisationInput>
  }

  export type DevisCreateManyOrganisationInputEnvelope = {
    data: DevisCreateManyOrganisationInput | DevisCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutOrganisationInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    createdBy: UserCreateNestedOneWithoutTaskCreatorInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutTaskInput
    createdByUser?: UserCreateNestedOneWithoutTaskInput
    updatedByUser?: UserCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutOrganisationInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutOrganisationInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutOrganisationInput, TaskUncheckedCreateWithoutOrganisationInput>
  }

  export type TaskCreateManyOrganisationInputEnvelope = {
    data: TaskCreateManyOrganisationInput | TaskCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutOrganisationInput = {
    id?: string
    contact: ContactCreateNestedOneWithoutFavoriteInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFavoriteInput
    createdByUser?: UserCreateNestedOneWithoutFavoriteInput
  }

  export type FavoriteUncheckedCreateWithoutOrganisationInput = {
    id?: string
    contactId: string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFavoriteInput
  }

  export type FavoriteCreateOrConnectWithoutOrganisationInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutOrganisationInput, FavoriteUncheckedCreateWithoutOrganisationInput>
  }

  export type FavoriteCreateManyOrganisationInputEnvelope = {
    data: FavoriteCreateManyOrganisationInput | FavoriteCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutOrganisationInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutOrganisationInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutOrganisationInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutOrganisationInput, ActivityLogUncheckedCreateWithoutOrganisationInput>
  }

  export type ActivityLogCreateManyOrganisationInputEnvelope = {
    data: ActivityLogCreateManyOrganisationInput | ActivityLogCreateManyOrganisationInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutOrganisationInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutOrganisationInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutOrganisationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrganisationInput, UserUncheckedCreateWithoutOrganisationInput>
  }

  export type UserCreateWithoutOrganisationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutOrganisationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserUpsertWithoutOwnedOrganisationsInput = {
    update: XOR<UserUpdateWithoutOwnedOrganisationsInput, UserUncheckedUpdateWithoutOwnedOrganisationsInput>
    create: XOR<UserCreateWithoutOwnedOrganisationsInput, UserUncheckedCreateWithoutOwnedOrganisationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOwnedOrganisationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOwnedOrganisationsInput, UserUncheckedUpdateWithoutOwnedOrganisationsInput>
  }

  export type UserUpdateWithoutOwnedOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutOwnedOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutOrganisationsInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutOrganisationsInput, UserUncheckedUpdateWithoutOrganisationsInput>
    create: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput>
  }

  export type UserUpdateWithWhereUniqueWithoutOrganisationsInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutOrganisationsInput, UserUncheckedUpdateWithoutOrganisationsInput>
  }

  export type UserUpdateManyWithWhereWithoutOrganisationsInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutOrganisationsInput>
  }

  export type InvitationUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: InvitationWhereUniqueInput
    update: XOR<InvitationUpdateWithoutOrganisationInput, InvitationUncheckedUpdateWithoutOrganisationInput>
    create: XOR<InvitationCreateWithoutOrganisationInput, InvitationUncheckedCreateWithoutOrganisationInput>
  }

  export type InvitationUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: InvitationWhereUniqueInput
    data: XOR<InvitationUpdateWithoutOrganisationInput, InvitationUncheckedUpdateWithoutOrganisationInput>
  }

  export type InvitationUpdateManyWithWhereWithoutOrganisationInput = {
    where: InvitationScalarWhereInput
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutOrganisationInput, ProductUncheckedUpdateWithoutOrganisationInput>
    create: XOR<ProductCreateWithoutOrganisationInput, ProductUncheckedCreateWithoutOrganisationInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutOrganisationInput, ProductUncheckedUpdateWithoutOrganisationInput>
  }

  export type ProductUpdateManyWithWhereWithoutOrganisationInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type StockUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutOrganisationInput, StockUncheckedUpdateWithoutOrganisationInput>
    create: XOR<StockCreateWithoutOrganisationInput, StockUncheckedCreateWithoutOrganisationInput>
  }

  export type StockUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutOrganisationInput, StockUncheckedUpdateWithoutOrganisationInput>
  }

  export type StockUpdateManyWithWhereWithoutOrganisationInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type ContactUpsertWithWhereUniqueWithoutOrganisationsInput = {
    where: ContactWhereUniqueInput
    update: XOR<ContactUpdateWithoutOrganisationsInput, ContactUncheckedUpdateWithoutOrganisationsInput>
    create: XOR<ContactCreateWithoutOrganisationsInput, ContactUncheckedCreateWithoutOrganisationsInput>
  }

  export type ContactUpdateWithWhereUniqueWithoutOrganisationsInput = {
    where: ContactWhereUniqueInput
    data: XOR<ContactUpdateWithoutOrganisationsInput, ContactUncheckedUpdateWithoutOrganisationsInput>
  }

  export type ContactUpdateManyWithWhereWithoutOrganisationsInput = {
    where: ContactScalarWhereInput
    data: XOR<ContactUpdateManyMutationInput, ContactUncheckedUpdateManyWithoutOrganisationsInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutOrganisationInput, CategoryUncheckedUpdateWithoutOrganisationInput>
    create: XOR<CategoryCreateWithoutOrganisationInput, CategoryUncheckedCreateWithoutOrganisationInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutOrganisationInput, CategoryUncheckedUpdateWithoutOrganisationInput>
  }

  export type CategoryUpdateManyWithWhereWithoutOrganisationInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type BrandUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutOrganisationInput, BrandUncheckedUpdateWithoutOrganisationInput>
    create: XOR<BrandCreateWithoutOrganisationInput, BrandUncheckedCreateWithoutOrganisationInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutOrganisationInput, BrandUncheckedUpdateWithoutOrganisationInput>
  }

  export type BrandUpdateManyWithWhereWithoutOrganisationInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutOrganisationInput, NoteUncheckedUpdateWithoutOrganisationInput>
    create: XOR<NoteCreateWithoutOrganisationInput, NoteUncheckedCreateWithoutOrganisationInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutOrganisationInput, NoteUncheckedUpdateWithoutOrganisationInput>
  }

  export type NoteUpdateManyWithWhereWithoutOrganisationInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type DevisUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: DevisWhereUniqueInput
    update: XOR<DevisUpdateWithoutOrganisationInput, DevisUncheckedUpdateWithoutOrganisationInput>
    create: XOR<DevisCreateWithoutOrganisationInput, DevisUncheckedCreateWithoutOrganisationInput>
  }

  export type DevisUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: DevisWhereUniqueInput
    data: XOR<DevisUpdateWithoutOrganisationInput, DevisUncheckedUpdateWithoutOrganisationInput>
  }

  export type DevisUpdateManyWithWhereWithoutOrganisationInput = {
    where: DevisScalarWhereInput
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutOrganisationInput, TaskUncheckedUpdateWithoutOrganisationInput>
    create: XOR<TaskCreateWithoutOrganisationInput, TaskUncheckedCreateWithoutOrganisationInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutOrganisationInput, TaskUncheckedUpdateWithoutOrganisationInput>
  }

  export type TaskUpdateManyWithWhereWithoutOrganisationInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type FavoriteUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutOrganisationInput, FavoriteUncheckedUpdateWithoutOrganisationInput>
    create: XOR<FavoriteCreateWithoutOrganisationInput, FavoriteUncheckedCreateWithoutOrganisationInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutOrganisationInput, FavoriteUncheckedUpdateWithoutOrganisationInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutOrganisationInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutOrganisationInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutOrganisationInput, ActivityLogUncheckedUpdateWithoutOrganisationInput>
    create: XOR<ActivityLogCreateWithoutOrganisationInput, ActivityLogUncheckedCreateWithoutOrganisationInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutOrganisationInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutOrganisationInput, ActivityLogUncheckedUpdateWithoutOrganisationInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutOrganisationInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutOrganisationInput>
  }

  export type UserUpsertWithoutOrganisationInput = {
    update: XOR<UserUpdateWithoutOrganisationInput, UserUncheckedUpdateWithoutOrganisationInput>
    create: XOR<UserCreateWithoutOrganisationInput, UserUncheckedCreateWithoutOrganisationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrganisationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrganisationInput, UserUncheckedUpdateWithoutOrganisationInput>
  }

  export type UserUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutOrganisationsInput = {
    update: XOR<UserUpdateWithoutOrganisationsInput, UserUncheckedUpdateWithoutOrganisationsInput>
    create: XOR<UserCreateWithoutOrganisationsInput, UserUncheckedCreateWithoutOrganisationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrganisationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrganisationsInput, UserUncheckedUpdateWithoutOrganisationsInput>
  }

  export type UserUpdateWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type ActivityLogCreateWithoutAccountInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutAccountInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutAccountInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutAccountInput, ActivityLogUncheckedCreateWithoutAccountInput>
  }

  export type ActivityLogCreateManyAccountInputEnvelope = {
    data: ActivityLogCreateManyAccountInput | ActivityLogCreateManyAccountInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutAccountInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutAccountInput, ActivityLogUncheckedUpdateWithoutAccountInput>
    create: XOR<ActivityLogCreateWithoutAccountInput, ActivityLogUncheckedCreateWithoutAccountInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutAccountInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutAccountInput, ActivityLogUncheckedUpdateWithoutAccountInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutAccountInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutAccountInput>
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type ActivityLogCreateWithoutSessionInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutSessionInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutSessionInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutSessionInput, ActivityLogUncheckedCreateWithoutSessionInput>
  }

  export type ActivityLogCreateManySessionInputEnvelope = {
    data: ActivityLogCreateManySessionInput | ActivityLogCreateManySessionInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutSessionInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutSessionInput, ActivityLogUncheckedUpdateWithoutSessionInput>
    create: XOR<ActivityLogCreateWithoutSessionInput, ActivityLogUncheckedCreateWithoutSessionInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutSessionInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutSessionInput, ActivityLogUncheckedUpdateWithoutSessionInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutSessionInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutSessionInput>
  }

  export type UserCreateWithoutAuthenticatorsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutAuthenticatorsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutAuthenticatorsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuthenticatorsInput, UserUncheckedCreateWithoutAuthenticatorsInput>
  }

  export type ActivityLogCreateWithoutAuthenticatorInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutAuthenticatorInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutAuthenticatorInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutAuthenticatorInput, ActivityLogUncheckedCreateWithoutAuthenticatorInput>
  }

  export type ActivityLogCreateManyAuthenticatorInputEnvelope = {
    data: ActivityLogCreateManyAuthenticatorInput | ActivityLogCreateManyAuthenticatorInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAuthenticatorsInput = {
    update: XOR<UserUpdateWithoutAuthenticatorsInput, UserUncheckedUpdateWithoutAuthenticatorsInput>
    create: XOR<UserCreateWithoutAuthenticatorsInput, UserUncheckedCreateWithoutAuthenticatorsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuthenticatorsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuthenticatorsInput, UserUncheckedUpdateWithoutAuthenticatorsInput>
  }

  export type UserUpdateWithoutAuthenticatorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutAuthenticatorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutAuthenticatorInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutAuthenticatorInput, ActivityLogUncheckedUpdateWithoutAuthenticatorInput>
    create: XOR<ActivityLogCreateWithoutAuthenticatorInput, ActivityLogUncheckedCreateWithoutAuthenticatorInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutAuthenticatorInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutAuthenticatorInput, ActivityLogUncheckedUpdateWithoutAuthenticatorInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutAuthenticatorInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutAuthenticatorInput>
  }

  export type UserCreateWithoutInvitationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutInvitationsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutInvitationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
  }

  export type OrganisationCreateWithoutInvitationsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutInvitationsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutInvitationsInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutInvitationsInput, OrganisationUncheckedCreateWithoutInvitationsInput>
  }

  export type ActivityLogCreateWithoutInvitationInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutInvitationInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutInvitationInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutInvitationInput, ActivityLogUncheckedCreateWithoutInvitationInput>
  }

  export type ActivityLogCreateManyInvitationInputEnvelope = {
    data: ActivityLogCreateManyInvitationInput | ActivityLogCreateManyInvitationInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutInvitationsInput = {
    update: XOR<UserUpdateWithoutInvitationsInput, UserUncheckedUpdateWithoutInvitationsInput>
    create: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvitationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvitationsInput, UserUncheckedUpdateWithoutInvitationsInput>
  }

  export type UserUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationUpsertWithoutInvitationsInput = {
    update: XOR<OrganisationUpdateWithoutInvitationsInput, OrganisationUncheckedUpdateWithoutInvitationsInput>
    create: XOR<OrganisationCreateWithoutInvitationsInput, OrganisationUncheckedCreateWithoutInvitationsInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutInvitationsInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutInvitationsInput, OrganisationUncheckedUpdateWithoutInvitationsInput>
  }

  export type OrganisationUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutInvitationInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutInvitationInput, ActivityLogUncheckedUpdateWithoutInvitationInput>
    create: XOR<ActivityLogCreateWithoutInvitationInput, ActivityLogUncheckedCreateWithoutInvitationInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutInvitationInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutInvitationInput, ActivityLogUncheckedUpdateWithoutInvitationInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutInvitationInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutInvitationInput>
  }

  export type UserCreateWithoutPasswordResetTokensInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutPasswordResetTokensInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutPasswordResetTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPasswordResetTokensInput, UserUncheckedCreateWithoutPasswordResetTokensInput>
  }

  export type ActivityLogCreateWithoutPasswordResetTokenInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutPasswordResetTokenInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutPasswordResetTokenInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutPasswordResetTokenInput, ActivityLogUncheckedCreateWithoutPasswordResetTokenInput>
  }

  export type ActivityLogCreateManyPasswordResetTokenInputEnvelope = {
    data: ActivityLogCreateManyPasswordResetTokenInput | ActivityLogCreateManyPasswordResetTokenInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPasswordResetTokensInput = {
    update: XOR<UserUpdateWithoutPasswordResetTokensInput, UserUncheckedUpdateWithoutPasswordResetTokensInput>
    create: XOR<UserCreateWithoutPasswordResetTokensInput, UserUncheckedCreateWithoutPasswordResetTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPasswordResetTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPasswordResetTokensInput, UserUncheckedUpdateWithoutPasswordResetTokensInput>
  }

  export type UserUpdateWithoutPasswordResetTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutPasswordResetTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutPasswordResetTokenInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutPasswordResetTokenInput, ActivityLogUncheckedUpdateWithoutPasswordResetTokenInput>
    create: XOR<ActivityLogCreateWithoutPasswordResetTokenInput, ActivityLogUncheckedCreateWithoutPasswordResetTokenInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutPasswordResetTokenInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutPasswordResetTokenInput, ActivityLogUncheckedUpdateWithoutPasswordResetTokenInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutPasswordResetTokenInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutPasswordResetTokenInput>
  }

  export type OrganisationCreateWithoutContactInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutContactInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutContactInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutContactInput, OrganisationUncheckedCreateWithoutContactInput>
  }

  export type CommentCreateWithoutContactInput = {
    id?: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ActivityLog?: ActivityLogCreateNestedManyWithoutCommentInput
    createdByUser?: UserCreateNestedOneWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutContactInput = {
    id?: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutContactInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutContactInput, CommentUncheckedCreateWithoutContactInput>
  }

  export type CommentCreateManyContactInputEnvelope = {
    data: CommentCreateManyContactInput | CommentCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type FeedbackContactCreateWithoutContactInput = {
    id?: string
    message: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFeedbackContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFeedbackContactInput
    createdByUser?: UserCreateNestedOneWithoutFeedbackContactsInput
  }

  export type FeedbackContactUncheckedCreateWithoutContactInput = {
    id?: string
    message: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFeedbackContactInput
  }

  export type FeedbackContactCreateOrConnectWithoutContactInput = {
    where: FeedbackContactWhereUniqueInput
    create: XOR<FeedbackContactCreateWithoutContactInput, FeedbackContactUncheckedCreateWithoutContactInput>
  }

  export type FeedbackContactCreateManyContactInputEnvelope = {
    data: FeedbackContactCreateManyContactInput | FeedbackContactCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type NoteCreateWithoutContactInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutContactInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutNoteInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteCreateOrConnectWithoutContactInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutContactInput, NoteUncheckedCreateWithoutContactInput>
  }

  export type NoteCreateManyContactInputEnvelope = {
    data: NoteCreateManyContactInput | NoteCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type DevisCreateWithoutContactInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateWithoutContactInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutContactInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutContactInput, DevisUncheckedCreateWithoutContactInput>
  }

  export type DevisCreateManyContactInputEnvelope = {
    data: DevisCreateManyContactInput | DevisCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutContactInput = {
    id?: string
    organisation: OrganisationCreateNestedOneWithoutFavoriteInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutFavoriteInput
    createdByUser?: UserCreateNestedOneWithoutFavoriteInput
  }

  export type FavoriteUncheckedCreateWithoutContactInput = {
    id?: string
    organisationId: string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutFavoriteInput
  }

  export type FavoriteCreateOrConnectWithoutContactInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutContactInput, FavoriteUncheckedCreateWithoutContactInput>
  }

  export type FavoriteCreateManyContactInputEnvelope = {
    data: FavoriteCreateManyContactInput | FavoriteCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutContactInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutContactInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutContactInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutContactInput, ActivityLogUncheckedCreateWithoutContactInput>
  }

  export type ActivityLogCreateManyContactInputEnvelope = {
    data: ActivityLogCreateManyContactInput | ActivityLogCreateManyContactInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutContactInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutContactInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutContactInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutContactInput, UserUncheckedCreateWithoutContactInput>
  }

  export type UserCreateWithoutContactsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutContactsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutContactsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutContactsInput, UserUncheckedCreateWithoutContactsInput>
  }

  export type OrganisationUpsertWithWhereUniqueWithoutContactInput = {
    where: OrganisationWhereUniqueInput
    update: XOR<OrganisationUpdateWithoutContactInput, OrganisationUncheckedUpdateWithoutContactInput>
    create: XOR<OrganisationCreateWithoutContactInput, OrganisationUncheckedCreateWithoutContactInput>
  }

  export type OrganisationUpdateWithWhereUniqueWithoutContactInput = {
    where: OrganisationWhereUniqueInput
    data: XOR<OrganisationUpdateWithoutContactInput, OrganisationUncheckedUpdateWithoutContactInput>
  }

  export type OrganisationUpdateManyWithWhereWithoutContactInput = {
    where: OrganisationScalarWhereInput
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyWithoutContactInput>
  }

  export type CommentUpsertWithWhereUniqueWithoutContactInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutContactInput, CommentUncheckedUpdateWithoutContactInput>
    create: XOR<CommentCreateWithoutContactInput, CommentUncheckedCreateWithoutContactInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutContactInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutContactInput, CommentUncheckedUpdateWithoutContactInput>
  }

  export type CommentUpdateManyWithWhereWithoutContactInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutContactInput>
  }

  export type FeedbackContactUpsertWithWhereUniqueWithoutContactInput = {
    where: FeedbackContactWhereUniqueInput
    update: XOR<FeedbackContactUpdateWithoutContactInput, FeedbackContactUncheckedUpdateWithoutContactInput>
    create: XOR<FeedbackContactCreateWithoutContactInput, FeedbackContactUncheckedCreateWithoutContactInput>
  }

  export type FeedbackContactUpdateWithWhereUniqueWithoutContactInput = {
    where: FeedbackContactWhereUniqueInput
    data: XOR<FeedbackContactUpdateWithoutContactInput, FeedbackContactUncheckedUpdateWithoutContactInput>
  }

  export type FeedbackContactUpdateManyWithWhereWithoutContactInput = {
    where: FeedbackContactScalarWhereInput
    data: XOR<FeedbackContactUpdateManyMutationInput, FeedbackContactUncheckedUpdateManyWithoutContactInput>
  }

  export type NoteUpsertWithWhereUniqueWithoutContactInput = {
    where: NoteWhereUniqueInput
    update: XOR<NoteUpdateWithoutContactInput, NoteUncheckedUpdateWithoutContactInput>
    create: XOR<NoteCreateWithoutContactInput, NoteUncheckedCreateWithoutContactInput>
  }

  export type NoteUpdateWithWhereUniqueWithoutContactInput = {
    where: NoteWhereUniqueInput
    data: XOR<NoteUpdateWithoutContactInput, NoteUncheckedUpdateWithoutContactInput>
  }

  export type NoteUpdateManyWithWhereWithoutContactInput = {
    where: NoteScalarWhereInput
    data: XOR<NoteUpdateManyMutationInput, NoteUncheckedUpdateManyWithoutContactInput>
  }

  export type DevisUpsertWithWhereUniqueWithoutContactInput = {
    where: DevisWhereUniqueInput
    update: XOR<DevisUpdateWithoutContactInput, DevisUncheckedUpdateWithoutContactInput>
    create: XOR<DevisCreateWithoutContactInput, DevisUncheckedCreateWithoutContactInput>
  }

  export type DevisUpdateWithWhereUniqueWithoutContactInput = {
    where: DevisWhereUniqueInput
    data: XOR<DevisUpdateWithoutContactInput, DevisUncheckedUpdateWithoutContactInput>
  }

  export type DevisUpdateManyWithWhereWithoutContactInput = {
    where: DevisScalarWhereInput
    data: XOR<DevisUpdateManyMutationInput, DevisUncheckedUpdateManyWithoutContactInput>
  }

  export type FavoriteUpsertWithWhereUniqueWithoutContactInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutContactInput, FavoriteUncheckedUpdateWithoutContactInput>
    create: XOR<FavoriteCreateWithoutContactInput, FavoriteUncheckedCreateWithoutContactInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutContactInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutContactInput, FavoriteUncheckedUpdateWithoutContactInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutContactInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutContactInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutContactInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutContactInput, ActivityLogUncheckedUpdateWithoutContactInput>
    create: XOR<ActivityLogCreateWithoutContactInput, ActivityLogUncheckedCreateWithoutContactInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutContactInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutContactInput, ActivityLogUncheckedUpdateWithoutContactInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutContactInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutContactInput>
  }

  export type UserUpsertWithoutContactInput = {
    update: XOR<UserUpdateWithoutContactInput, UserUncheckedUpdateWithoutContactInput>
    create: XOR<UserCreateWithoutContactInput, UserUncheckedCreateWithoutContactInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutContactInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutContactInput, UserUncheckedUpdateWithoutContactInput>
  }

  export type UserUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutContactsInput = {
    update: XOR<UserUpdateWithoutContactsInput, UserUncheckedUpdateWithoutContactsInput>
    create: XOR<UserCreateWithoutContactsInput, UserUncheckedCreateWithoutContactsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutContactsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutContactsInput, UserUncheckedUpdateWithoutContactsInput>
  }

  export type UserUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ContactCreateWithoutCommentsInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutCommentsInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutCommentsInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutCommentsInput, ContactUncheckedCreateWithoutCommentsInput>
  }

  export type ActivityLogCreateWithoutCommentInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutCommentInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutCommentInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutCommentInput, ActivityLogUncheckedCreateWithoutCommentInput>
  }

  export type ActivityLogCreateManyCommentInputEnvelope = {
    data: ActivityLogCreateManyCommentInput | ActivityLogCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCommentInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutCommentInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutCommentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
  }

  export type ContactUpsertWithoutCommentsInput = {
    update: XOR<ContactUpdateWithoutCommentsInput, ContactUncheckedUpdateWithoutCommentsInput>
    create: XOR<ContactCreateWithoutCommentsInput, ContactUncheckedCreateWithoutCommentsInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutCommentsInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutCommentsInput, ContactUncheckedUpdateWithoutCommentsInput>
  }

  export type ContactUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutCommentInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutCommentInput, ActivityLogUncheckedUpdateWithoutCommentInput>
    create: XOR<ActivityLogCreateWithoutCommentInput, ActivityLogUncheckedCreateWithoutCommentInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutCommentInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutCommentInput, ActivityLogUncheckedUpdateWithoutCommentInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutCommentInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutCommentInput>
  }

  export type UserUpsertWithoutCommentInput = {
    update: XOR<UserUpdateWithoutCommentInput, UserUncheckedUpdateWithoutCommentInput>
    create: XOR<UserCreateWithoutCommentInput, UserUncheckedCreateWithoutCommentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentInput, UserUncheckedUpdateWithoutCommentInput>
  }

  export type UserUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ContactCreateWithoutFeedbackContactInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutFeedbackContactInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutFeedbackContactInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutFeedbackContactInput, ContactUncheckedCreateWithoutFeedbackContactInput>
  }

  export type UserCreateWithoutFeedbackContactInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutFeedbackContactInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutFeedbackContactInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFeedbackContactInput, UserUncheckedCreateWithoutFeedbackContactInput>
  }

  export type ActivityLogCreateWithoutFeedbackContactInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutFeedbackContactInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutFeedbackContactInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutFeedbackContactInput, ActivityLogUncheckedCreateWithoutFeedbackContactInput>
  }

  export type ActivityLogCreateManyFeedbackContactInputEnvelope = {
    data: ActivityLogCreateManyFeedbackContactInput | ActivityLogCreateManyFeedbackContactInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutFeedbackContactsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutFeedbackContactsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutFeedbackContactsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFeedbackContactsInput, UserUncheckedCreateWithoutFeedbackContactsInput>
  }

  export type ContactUpsertWithoutFeedbackContactInput = {
    update: XOR<ContactUpdateWithoutFeedbackContactInput, ContactUncheckedUpdateWithoutFeedbackContactInput>
    create: XOR<ContactCreateWithoutFeedbackContactInput, ContactUncheckedCreateWithoutFeedbackContactInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutFeedbackContactInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutFeedbackContactInput, ContactUncheckedUpdateWithoutFeedbackContactInput>
  }

  export type ContactUpdateWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type UserUpsertWithoutFeedbackContactInput = {
    update: XOR<UserUpdateWithoutFeedbackContactInput, UserUncheckedUpdateWithoutFeedbackContactInput>
    create: XOR<UserCreateWithoutFeedbackContactInput, UserUncheckedCreateWithoutFeedbackContactInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFeedbackContactInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFeedbackContactInput, UserUncheckedUpdateWithoutFeedbackContactInput>
  }

  export type UserUpdateWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutFeedbackContactInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutFeedbackContactInput, ActivityLogUncheckedUpdateWithoutFeedbackContactInput>
    create: XOR<ActivityLogCreateWithoutFeedbackContactInput, ActivityLogUncheckedCreateWithoutFeedbackContactInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutFeedbackContactInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutFeedbackContactInput, ActivityLogUncheckedUpdateWithoutFeedbackContactInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutFeedbackContactInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutFeedbackContactInput>
  }

  export type UserUpsertWithoutFeedbackContactsInput = {
    update: XOR<UserUpdateWithoutFeedbackContactsInput, UserUncheckedUpdateWithoutFeedbackContactsInput>
    create: XOR<UserCreateWithoutFeedbackContactsInput, UserUncheckedCreateWithoutFeedbackContactsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFeedbackContactsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFeedbackContactsInput, UserUncheckedUpdateWithoutFeedbackContactsInput>
  }

  export type UserUpdateWithoutFeedbackContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutFeedbackContactsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ContactCreateWithoutFavoriteInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutFavoriteInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutFavoriteInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutFavoriteInput, ContactUncheckedCreateWithoutFavoriteInput>
  }

  export type OrganisationCreateWithoutFavoriteInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutFavoriteInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutFavoriteInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutFavoriteInput, OrganisationUncheckedCreateWithoutFavoriteInput>
  }

  export type ActivityLogCreateWithoutFavoriteInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutFavoriteInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutFavoriteInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutFavoriteInput, ActivityLogUncheckedCreateWithoutFavoriteInput>
  }

  export type ActivityLogCreateManyFavoriteInputEnvelope = {
    data: ActivityLogCreateManyFavoriteInput | ActivityLogCreateManyFavoriteInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutFavoriteInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutFavoriteInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutFavoriteInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavoriteInput, UserUncheckedCreateWithoutFavoriteInput>
  }

  export type ContactUpsertWithoutFavoriteInput = {
    update: XOR<ContactUpdateWithoutFavoriteInput, ContactUncheckedUpdateWithoutFavoriteInput>
    create: XOR<ContactCreateWithoutFavoriteInput, ContactUncheckedCreateWithoutFavoriteInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutFavoriteInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutFavoriteInput, ContactUncheckedUpdateWithoutFavoriteInput>
  }

  export type ContactUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type OrganisationUpsertWithoutFavoriteInput = {
    update: XOR<OrganisationUpdateWithoutFavoriteInput, OrganisationUncheckedUpdateWithoutFavoriteInput>
    create: XOR<OrganisationCreateWithoutFavoriteInput, OrganisationUncheckedCreateWithoutFavoriteInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutFavoriteInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutFavoriteInput, OrganisationUncheckedUpdateWithoutFavoriteInput>
  }

  export type OrganisationUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutFavoriteInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutFavoriteInput, ActivityLogUncheckedUpdateWithoutFavoriteInput>
    create: XOR<ActivityLogCreateWithoutFavoriteInput, ActivityLogUncheckedCreateWithoutFavoriteInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutFavoriteInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutFavoriteInput, ActivityLogUncheckedUpdateWithoutFavoriteInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutFavoriteInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutFavoriteInput>
  }

  export type UserUpsertWithoutFavoriteInput = {
    update: XOR<UserUpdateWithoutFavoriteInput, UserUncheckedUpdateWithoutFavoriteInput>
    create: XOR<UserCreateWithoutFavoriteInput, UserUncheckedCreateWithoutFavoriteInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavoriteInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavoriteInput, UserUncheckedUpdateWithoutFavoriteInput>
  }

  export type UserUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationCreateWithoutProductInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutProductInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutProductInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutProductInput, OrganisationUncheckedCreateWithoutProductInput>
  }

  export type BrandCreateWithoutProductInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutBrandInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutBrandInput
    Category?: CategoryCreateNestedManyWithoutBrandInput
    createdByUser?: UserCreateNestedOneWithoutBrandInput
    updatedByUser?: UserCreateNestedOneWithoutBrandsInput
  }

  export type BrandUncheckedCreateWithoutProductInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutBrandInput
    Category?: CategoryUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutProductInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutProductInput, BrandUncheckedCreateWithoutProductInput>
  }

  export type StockCreateWithoutProductInput = {
    id?: string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutStockInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutStockInput
    createdByUser?: UserCreateNestedOneWithoutStockInput
    updatedByUser?: UserCreateNestedOneWithoutStocksInput
  }

  export type StockUncheckedCreateWithoutProductInput = {
    id?: string
    quantity: number
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutStockInput
  }

  export type StockCreateOrConnectWithoutProductInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutProductInput, StockUncheckedCreateWithoutProductInput>
  }

  export type StockCreateManyProductInputEnvelope = {
    data: StockCreateManyProductInput | StockCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutProductInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutProductInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutProductInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput>
  }

  export type DevisItemCreateWithoutProductInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devis: DevisCreateNestedOneWithoutItemsInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisItemInput
    createdByUser?: UserCreateNestedOneWithoutDevisItemsInput
  }

  export type DevisItemUncheckedCreateWithoutProductInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisItemInput
  }

  export type DevisItemCreateOrConnectWithoutProductInput = {
    where: DevisItemWhereUniqueInput
    create: XOR<DevisItemCreateWithoutProductInput, DevisItemUncheckedCreateWithoutProductInput>
  }

  export type DevisItemCreateManyProductInputEnvelope = {
    data: DevisItemCreateManyProductInput | DevisItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutProductInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutProductInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutProductInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutProductInput, ActivityLogUncheckedCreateWithoutProductInput>
  }

  export type ActivityLogCreateManyProductInputEnvelope = {
    data: ActivityLogCreateManyProductInput | ActivityLogCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutProductInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutProductInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutProductInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductInput, UserUncheckedCreateWithoutProductInput>
  }

  export type UserCreateWithoutProductsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutProductsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutProductsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
  }

  export type OrganisationUpsertWithoutProductInput = {
    update: XOR<OrganisationUpdateWithoutProductInput, OrganisationUncheckedUpdateWithoutProductInput>
    create: XOR<OrganisationCreateWithoutProductInput, OrganisationUncheckedCreateWithoutProductInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutProductInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutProductInput, OrganisationUncheckedUpdateWithoutProductInput>
  }

  export type OrganisationUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type BrandUpsertWithoutProductInput = {
    update: XOR<BrandUpdateWithoutProductInput, BrandUncheckedUpdateWithoutProductInput>
    create: XOR<BrandCreateWithoutProductInput, BrandUncheckedCreateWithoutProductInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutProductInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutProductInput, BrandUncheckedUpdateWithoutProductInput>
  }

  export type BrandUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutBrandNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutBrandNestedInput
    Category?: CategoryUpdateManyWithoutBrandNestedInput
    createdByUser?: UserUpdateOneWithoutBrandNestedInput
    updatedByUser?: UserUpdateOneWithoutBrandsNestedInput
  }

  export type BrandUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutBrandNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type StockUpsertWithWhereUniqueWithoutProductInput = {
    where: StockWhereUniqueInput
    update: XOR<StockUpdateWithoutProductInput, StockUncheckedUpdateWithoutProductInput>
    create: XOR<StockCreateWithoutProductInput, StockUncheckedCreateWithoutProductInput>
  }

  export type StockUpdateWithWhereUniqueWithoutProductInput = {
    where: StockWhereUniqueInput
    data: XOR<StockUpdateWithoutProductInput, StockUncheckedUpdateWithoutProductInput>
  }

  export type StockUpdateManyWithWhereWithoutProductInput = {
    where: StockScalarWhereInput
    data: XOR<StockUpdateManyMutationInput, StockUncheckedUpdateManyWithoutProductInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutProductInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutProductInput, CategoryUncheckedUpdateWithoutProductInput>
    create: XOR<CategoryCreateWithoutProductInput, CategoryUncheckedCreateWithoutProductInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutProductInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutProductInput, CategoryUncheckedUpdateWithoutProductInput>
  }

  export type CategoryUpdateManyWithWhereWithoutProductInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutProductInput>
  }

  export type DevisItemUpsertWithWhereUniqueWithoutProductInput = {
    where: DevisItemWhereUniqueInput
    update: XOR<DevisItemUpdateWithoutProductInput, DevisItemUncheckedUpdateWithoutProductInput>
    create: XOR<DevisItemCreateWithoutProductInput, DevisItemUncheckedCreateWithoutProductInput>
  }

  export type DevisItemUpdateWithWhereUniqueWithoutProductInput = {
    where: DevisItemWhereUniqueInput
    data: XOR<DevisItemUpdateWithoutProductInput, DevisItemUncheckedUpdateWithoutProductInput>
  }

  export type DevisItemUpdateManyWithWhereWithoutProductInput = {
    where: DevisItemScalarWhereInput
    data: XOR<DevisItemUpdateManyMutationInput, DevisItemUncheckedUpdateManyWithoutProductInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutProductInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutProductInput, ActivityLogUncheckedUpdateWithoutProductInput>
    create: XOR<ActivityLogCreateWithoutProductInput, ActivityLogUncheckedCreateWithoutProductInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutProductInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutProductInput, ActivityLogUncheckedUpdateWithoutProductInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutProductInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutProductInput>
  }

  export type UserUpsertWithoutProductInput = {
    update: XOR<UserUpdateWithoutProductInput, UserUncheckedUpdateWithoutProductInput>
    create: XOR<UserCreateWithoutProductInput, UserUncheckedCreateWithoutProductInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductInput, UserUncheckedUpdateWithoutProductInput>
  }

  export type UserUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutProductsInput = {
    update: XOR<UserUpdateWithoutProductsInput, UserUncheckedUpdateWithoutProductsInput>
    create: XOR<UserCreateWithoutProductsInput, UserUncheckedCreateWithoutProductsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProductsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProductsInput, UserUncheckedUpdateWithoutProductsInput>
  }

  export type UserUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ProductCreateWithoutStockInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutStockInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutStockInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutStockInput, ProductUncheckedCreateWithoutStockInput>
  }

  export type OrganisationCreateWithoutStockInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutStockInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutStockInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutStockInput, OrganisationUncheckedCreateWithoutStockInput>
  }

  export type ActivityLogCreateWithoutStockInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutStockInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutStockInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutStockInput, ActivityLogUncheckedCreateWithoutStockInput>
  }

  export type ActivityLogCreateManyStockInputEnvelope = {
    data: ActivityLogCreateManyStockInput | ActivityLogCreateManyStockInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutStockInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutStockInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutStockInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStockInput, UserUncheckedCreateWithoutStockInput>
  }

  export type UserCreateWithoutStocksInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutStocksInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutStocksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStocksInput, UserUncheckedCreateWithoutStocksInput>
  }

  export type ProductUpsertWithoutStockInput = {
    update: XOR<ProductUpdateWithoutStockInput, ProductUncheckedUpdateWithoutStockInput>
    create: XOR<ProductCreateWithoutStockInput, ProductUncheckedCreateWithoutStockInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutStockInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutStockInput, ProductUncheckedUpdateWithoutStockInput>
  }

  export type ProductUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type OrganisationUpsertWithoutStockInput = {
    update: XOR<OrganisationUpdateWithoutStockInput, OrganisationUncheckedUpdateWithoutStockInput>
    create: XOR<OrganisationCreateWithoutStockInput, OrganisationUncheckedCreateWithoutStockInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutStockInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutStockInput, OrganisationUncheckedUpdateWithoutStockInput>
  }

  export type OrganisationUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutStockInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutStockInput, ActivityLogUncheckedUpdateWithoutStockInput>
    create: XOR<ActivityLogCreateWithoutStockInput, ActivityLogUncheckedCreateWithoutStockInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutStockInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutStockInput, ActivityLogUncheckedUpdateWithoutStockInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutStockInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutStockInput>
  }

  export type UserUpsertWithoutStockInput = {
    update: XOR<UserUpdateWithoutStockInput, UserUncheckedUpdateWithoutStockInput>
    create: XOR<UserCreateWithoutStockInput, UserUncheckedCreateWithoutStockInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStockInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStockInput, UserUncheckedUpdateWithoutStockInput>
  }

  export type UserUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutStocksInput = {
    update: XOR<UserUpdateWithoutStocksInput, UserUncheckedUpdateWithoutStocksInput>
    create: XOR<UserCreateWithoutStocksInput, UserUncheckedCreateWithoutStocksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStocksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStocksInput, UserUncheckedUpdateWithoutStocksInput>
  }

  export type UserUpdateWithoutStocksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutStocksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutCategoryInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutCategoryInput, OrganisationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryCreateWithoutChildrenInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutChildrenInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutChildrenInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
  }

  export type CategoryCreateWithoutParentInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutParentInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutParentInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryCreateManyParentInputEnvelope = {
    data: CategoryCreateManyParentInput | CategoryCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutCategoryInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutCategoryInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutCategoryInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutCategoryInput, ActivityLogUncheckedCreateWithoutCategoryInput>
  }

  export type ActivityLogCreateManyCategoryInputEnvelope = {
    data: ActivityLogCreateManyCategoryInput | ActivityLogCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCategoriesInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutCategoriesInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type BrandCreateWithoutCategoryInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutBrandInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutBrandInput
    createdByUser?: UserCreateNestedOneWithoutBrandInput
    updatedByUser?: UserCreateNestedOneWithoutBrandsInput
    Product?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutBrandInput
    Product?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutCategoryInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutCategoryInput, BrandUncheckedCreateWithoutCategoryInput>
  }

  export type UserCreateWithoutCategoryInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutCategoryInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutCategoryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCategoryInput, UserUncheckedCreateWithoutCategoryInput>
  }

  export type UserCreateWithoutCategorysInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutCategorysInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutCategorysInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCategorysInput, UserUncheckedCreateWithoutCategorysInput>
  }

  export type OrganisationUpsertWithoutCategoryInput = {
    update: XOR<OrganisationUpdateWithoutCategoryInput, OrganisationUncheckedUpdateWithoutCategoryInput>
    create: XOR<OrganisationCreateWithoutCategoryInput, OrganisationUncheckedCreateWithoutCategoryInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutCategoryInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutCategoryInput, OrganisationUncheckedUpdateWithoutCategoryInput>
  }

  export type OrganisationUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type CategoryUpsertWithoutChildrenInput = {
    update: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
    create: XOR<CategoryCreateWithoutChildrenInput, CategoryUncheckedCreateWithoutChildrenInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutChildrenInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutChildrenInput, CategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type CategoryUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
    create: XOR<CategoryCreateWithoutParentInput, CategoryUncheckedCreateWithoutParentInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentInput, CategoryUncheckedUpdateWithoutParentInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutCategoryInput, ActivityLogUncheckedUpdateWithoutCategoryInput>
    create: XOR<ActivityLogCreateWithoutCategoryInput, ActivityLogUncheckedCreateWithoutCategoryInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutCategoryInput, ActivityLogUncheckedUpdateWithoutCategoryInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutCategoryInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoriesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type BrandUpsertWithWhereUniqueWithoutCategoryInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutCategoryInput, BrandUncheckedUpdateWithoutCategoryInput>
    create: XOR<BrandCreateWithoutCategoryInput, BrandUncheckedCreateWithoutCategoryInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutCategoryInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutCategoryInput, BrandUncheckedUpdateWithoutCategoryInput>
  }

  export type BrandUpdateManyWithWhereWithoutCategoryInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutCategoryInput>
  }

  export type UserUpsertWithoutCategoryInput = {
    update: XOR<UserUpdateWithoutCategoryInput, UserUncheckedUpdateWithoutCategoryInput>
    create: XOR<UserCreateWithoutCategoryInput, UserUncheckedCreateWithoutCategoryInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCategoryInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCategoryInput, UserUncheckedUpdateWithoutCategoryInput>
  }

  export type UserUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutCategorysInput = {
    update: XOR<UserUpdateWithoutCategorysInput, UserUncheckedUpdateWithoutCategorysInput>
    create: XOR<UserCreateWithoutCategorysInput, UserUncheckedCreateWithoutCategorysInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCategorysInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCategorysInput, UserUncheckedUpdateWithoutCategorysInput>
  }

  export type UserUpdateWithoutCategorysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCategorysInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationCreateWithoutBrandInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutBrandInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutBrandInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutBrandInput, OrganisationUncheckedCreateWithoutBrandInput>
  }

  export type ActivityLogCreateWithoutBrandInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutBrandInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutBrandInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutBrandInput, ActivityLogUncheckedCreateWithoutBrandInput>
  }

  export type ActivityLogCreateManyBrandInputEnvelope = {
    data: ActivityLogCreateManyBrandInput | ActivityLogCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutBrandInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutCategoryInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutBrandInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutCategoryInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type CategoryCreateOrConnectWithoutBrandInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutBrandInput, CategoryUncheckedCreateWithoutBrandInput>
  }

  export type UserCreateWithoutBrandInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutBrandInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutBrandInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBrandInput, UserUncheckedCreateWithoutBrandInput>
  }

  export type UserCreateWithoutBrandsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutBrandsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutBrandsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBrandsInput, UserUncheckedCreateWithoutBrandsInput>
  }

  export type ProductCreateWithoutBrandInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutBrandInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBrandInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductCreateManyBrandInputEnvelope = {
    data: ProductCreateManyBrandInput | ProductCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type OrganisationUpsertWithoutBrandInput = {
    update: XOR<OrganisationUpdateWithoutBrandInput, OrganisationUncheckedUpdateWithoutBrandInput>
    create: XOR<OrganisationCreateWithoutBrandInput, OrganisationUncheckedCreateWithoutBrandInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutBrandInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutBrandInput, OrganisationUncheckedUpdateWithoutBrandInput>
  }

  export type OrganisationUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutBrandInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutBrandInput, ActivityLogUncheckedUpdateWithoutBrandInput>
    create: XOR<ActivityLogCreateWithoutBrandInput, ActivityLogUncheckedCreateWithoutBrandInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutBrandInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutBrandInput, ActivityLogUncheckedUpdateWithoutBrandInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutBrandInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutBrandInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutBrandInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutBrandInput, CategoryUncheckedUpdateWithoutBrandInput>
    create: XOR<CategoryCreateWithoutBrandInput, CategoryUncheckedCreateWithoutBrandInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutBrandInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutBrandInput, CategoryUncheckedUpdateWithoutBrandInput>
  }

  export type CategoryUpdateManyWithWhereWithoutBrandInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutBrandInput>
  }

  export type UserUpsertWithoutBrandInput = {
    update: XOR<UserUpdateWithoutBrandInput, UserUncheckedUpdateWithoutBrandInput>
    create: XOR<UserCreateWithoutBrandInput, UserUncheckedCreateWithoutBrandInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBrandInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBrandInput, UserUncheckedUpdateWithoutBrandInput>
  }

  export type UserUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutBrandsInput = {
    update: XOR<UserUpdateWithoutBrandsInput, UserUncheckedUpdateWithoutBrandsInput>
    create: XOR<UserCreateWithoutBrandsInput, UserUncheckedCreateWithoutBrandsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBrandsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBrandsInput, UserUncheckedUpdateWithoutBrandsInput>
  }

  export type UserUpdateWithoutBrandsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutBrandsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ProductUpsertWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
  }

  export type ProductUpdateManyWithWhereWithoutBrandInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBrandInput>
  }

  export type UserCreateWithoutNotesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutNotesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutNotesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
  }

  export type ContactCreateWithoutNotesInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutNotesInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutNotesInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutNotesInput, ContactUncheckedCreateWithoutNotesInput>
  }

  export type UserCreateWithoutCollaboratedNotesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutCollaboratedNotesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutCollaboratedNotesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCollaboratedNotesInput, UserUncheckedCreateWithoutCollaboratedNotesInput>
  }

  export type ActivityLogCreateWithoutNoteInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutNoteInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutNoteInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutNoteInput, ActivityLogUncheckedCreateWithoutNoteInput>
  }

  export type ActivityLogCreateManyNoteInputEnvelope = {
    data: ActivityLogCreateManyNoteInput | ActivityLogCreateManyNoteInput[]
    skipDuplicates?: boolean
  }

  export type OrganisationCreateWithoutNotesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutNotesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutNotesInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutNotesInput, OrganisationUncheckedCreateWithoutNotesInput>
  }

  export type UserCreateWithoutNoteInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutNoteInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutNoteInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNoteInput, UserUncheckedCreateWithoutNoteInput>
  }

  export type UserCreateWithoutNotesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutNotesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserUpsertWithoutNotesInput = {
    update: XOR<UserUpdateWithoutNotesInput, UserUncheckedUpdateWithoutNotesInput>
    create: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotesInput, UserUncheckedUpdateWithoutNotesInput>
  }

  export type UserUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ContactUpsertWithoutNotesInput = {
    update: XOR<ContactUpdateWithoutNotesInput, ContactUncheckedUpdateWithoutNotesInput>
    create: XOR<ContactCreateWithoutNotesInput, ContactUncheckedCreateWithoutNotesInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutNotesInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutNotesInput, ContactUncheckedUpdateWithoutNotesInput>
  }

  export type ContactUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCollaboratedNotesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCollaboratedNotesInput, UserUncheckedUpdateWithoutCollaboratedNotesInput>
    create: XOR<UserCreateWithoutCollaboratedNotesInput, UserUncheckedCreateWithoutCollaboratedNotesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCollaboratedNotesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCollaboratedNotesInput, UserUncheckedUpdateWithoutCollaboratedNotesInput>
  }

  export type UserUpdateManyWithWhereWithoutCollaboratedNotesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCollaboratedNotesInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutNoteInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutNoteInput, ActivityLogUncheckedUpdateWithoutNoteInput>
    create: XOR<ActivityLogCreateWithoutNoteInput, ActivityLogUncheckedCreateWithoutNoteInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutNoteInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutNoteInput, ActivityLogUncheckedUpdateWithoutNoteInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutNoteInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutNoteInput>
  }

  export type OrganisationUpsertWithWhereUniqueWithoutNotesInput = {
    where: OrganisationWhereUniqueInput
    update: XOR<OrganisationUpdateWithoutNotesInput, OrganisationUncheckedUpdateWithoutNotesInput>
    create: XOR<OrganisationCreateWithoutNotesInput, OrganisationUncheckedCreateWithoutNotesInput>
  }

  export type OrganisationUpdateWithWhereUniqueWithoutNotesInput = {
    where: OrganisationWhereUniqueInput
    data: XOR<OrganisationUpdateWithoutNotesInput, OrganisationUncheckedUpdateWithoutNotesInput>
  }

  export type OrganisationUpdateManyWithWhereWithoutNotesInput = {
    where: OrganisationScalarWhereInput
    data: XOR<OrganisationUpdateManyMutationInput, OrganisationUncheckedUpdateManyWithoutNotesInput>
  }

  export type UserUpsertWithoutNoteInput = {
    update: XOR<UserUpdateWithoutNoteInput, UserUncheckedUpdateWithoutNoteInput>
    create: XOR<UserCreateWithoutNoteInput, UserUncheckedCreateWithoutNoteInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNoteInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNoteInput, UserUncheckedUpdateWithoutNoteInput>
  }

  export type UserUpdateWithoutNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutNotesInput = {
    update: XOR<UserUpdateWithoutNotesInput, UserUncheckedUpdateWithoutNotesInput>
    create: XOR<UserCreateWithoutNotesInput, UserUncheckedCreateWithoutNotesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotesInput, UserUncheckedUpdateWithoutNotesInput>
  }

  export type UserUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationCreateWithoutDevisInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutDevisInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutDevisInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutDevisInput, OrganisationUncheckedCreateWithoutDevisInput>
  }

  export type ContactCreateWithoutDevisInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutDevisInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutDevisInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutDevisInput, ContactUncheckedCreateWithoutDevisInput>
  }

  export type UserCreateWithoutDevisInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
  }

  export type UserUncheckedCreateWithoutDevisInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
  }

  export type UserCreateOrConnectWithoutDevisInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDevisInput, UserUncheckedCreateWithoutDevisInput>
  }

  export type DevisItemCreateWithoutDevisInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    product?: ProductCreateNestedOneWithoutDevisItemInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisItemInput
    createdByUser?: UserCreateNestedOneWithoutDevisItemsInput
  }

  export type DevisItemUncheckedCreateWithoutDevisInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    productId?: string | null
    createdByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisItemInput
  }

  export type DevisItemCreateOrConnectWithoutDevisInput = {
    where: DevisItemWhereUniqueInput
    create: XOR<DevisItemCreateWithoutDevisInput, DevisItemUncheckedCreateWithoutDevisInput>
  }

  export type DevisItemCreateManyDevisInputEnvelope = {
    data: DevisItemCreateManyDevisInput | DevisItemCreateManyDevisInput[]
    skipDuplicates?: boolean
  }

  export type ActivityLogCreateWithoutDevisInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutDevisInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutDevisInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutDevisInput, ActivityLogUncheckedCreateWithoutDevisInput>
  }

  export type ActivityLogCreateManyDevisInputEnvelope = {
    data: ActivityLogCreateManyDevisInput | ActivityLogCreateManyDevisInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutDevissInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutDevissInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutDevissInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDevissInput, UserUncheckedCreateWithoutDevissInput>
  }

  export type UserCreateWithoutUpdatedDevissInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedDevissInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedDevissInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedDevissInput, UserUncheckedCreateWithoutUpdatedDevissInput>
  }

  export type OrganisationUpsertWithoutDevisInput = {
    update: XOR<OrganisationUpdateWithoutDevisInput, OrganisationUncheckedUpdateWithoutDevisInput>
    create: XOR<OrganisationCreateWithoutDevisInput, OrganisationUncheckedCreateWithoutDevisInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutDevisInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutDevisInput, OrganisationUncheckedUpdateWithoutDevisInput>
  }

  export type OrganisationUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type ContactUpsertWithoutDevisInput = {
    update: XOR<ContactUpdateWithoutDevisInput, ContactUncheckedUpdateWithoutDevisInput>
    create: XOR<ContactCreateWithoutDevisInput, ContactUncheckedCreateWithoutDevisInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutDevisInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutDevisInput, ContactUncheckedUpdateWithoutDevisInput>
  }

  export type ContactUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type UserUpsertWithoutDevisInput = {
    update: XOR<UserUpdateWithoutDevisInput, UserUncheckedUpdateWithoutDevisInput>
    create: XOR<UserCreateWithoutDevisInput, UserUncheckedCreateWithoutDevisInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDevisInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDevisInput, UserUncheckedUpdateWithoutDevisInput>
  }

  export type UserUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
  }

  export type DevisItemUpsertWithWhereUniqueWithoutDevisInput = {
    where: DevisItemWhereUniqueInput
    update: XOR<DevisItemUpdateWithoutDevisInput, DevisItemUncheckedUpdateWithoutDevisInput>
    create: XOR<DevisItemCreateWithoutDevisInput, DevisItemUncheckedCreateWithoutDevisInput>
  }

  export type DevisItemUpdateWithWhereUniqueWithoutDevisInput = {
    where: DevisItemWhereUniqueInput
    data: XOR<DevisItemUpdateWithoutDevisInput, DevisItemUncheckedUpdateWithoutDevisInput>
  }

  export type DevisItemUpdateManyWithWhereWithoutDevisInput = {
    where: DevisItemScalarWhereInput
    data: XOR<DevisItemUpdateManyMutationInput, DevisItemUncheckedUpdateManyWithoutDevisInput>
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutDevisInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutDevisInput, ActivityLogUncheckedUpdateWithoutDevisInput>
    create: XOR<ActivityLogCreateWithoutDevisInput, ActivityLogUncheckedCreateWithoutDevisInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutDevisInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutDevisInput, ActivityLogUncheckedUpdateWithoutDevisInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutDevisInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutDevisInput>
  }

  export type UserUpsertWithoutDevissInput = {
    update: XOR<UserUpdateWithoutDevissInput, UserUncheckedUpdateWithoutDevissInput>
    create: XOR<UserCreateWithoutDevissInput, UserUncheckedCreateWithoutDevissInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDevissInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDevissInput, UserUncheckedUpdateWithoutDevissInput>
  }

  export type UserUpdateWithoutDevissInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDevissInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutUpdatedDevissInput = {
    update: XOR<UserUpdateWithoutUpdatedDevissInput, UserUncheckedUpdateWithoutUpdatedDevissInput>
    create: XOR<UserCreateWithoutUpdatedDevissInput, UserUncheckedCreateWithoutUpdatedDevissInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedDevissInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedDevissInput, UserUncheckedUpdateWithoutUpdatedDevissInput>
  }

  export type UserUpdateWithoutUpdatedDevissInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedDevissInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type DevisCreateWithoutItemsInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    contact: ContactCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateWithoutItemsInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutItemsInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutItemsInput, DevisUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutDevisItemInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutDevisItemInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    ActivityLog?: ActivityLogUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutDevisItemInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutDevisItemInput, ProductUncheckedCreateWithoutDevisItemInput>
  }

  export type ActivityLogCreateWithoutDevisItemInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    task?: TaskCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutDevisItemInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutDevisItemInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutDevisItemInput, ActivityLogUncheckedCreateWithoutDevisItemInput>
  }

  export type ActivityLogCreateManyDevisItemInputEnvelope = {
    data: ActivityLogCreateManyDevisItemInput | ActivityLogCreateManyDevisItemInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutDevisItemsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutDevisItemsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutDevisItemsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDevisItemsInput, UserUncheckedCreateWithoutDevisItemsInput>
  }

  export type DevisUpsertWithoutItemsInput = {
    update: XOR<DevisUpdateWithoutItemsInput, DevisUncheckedUpdateWithoutItemsInput>
    create: XOR<DevisCreateWithoutItemsInput, DevisUncheckedCreateWithoutItemsInput>
    where?: DevisWhereInput
  }

  export type DevisUpdateToOneWithWhereWithoutItemsInput = {
    where?: DevisWhereInput
    data: XOR<DevisUpdateWithoutItemsInput, DevisUncheckedUpdateWithoutItemsInput>
  }

  export type DevisUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type ProductUpsertWithoutDevisItemInput = {
    update: XOR<ProductUpdateWithoutDevisItemInput, ProductUncheckedUpdateWithoutDevisItemInput>
    create: XOR<ProductCreateWithoutDevisItemInput, ProductUncheckedCreateWithoutDevisItemInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutDevisItemInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutDevisItemInput, ProductUncheckedUpdateWithoutDevisItemInput>
  }

  export type ProductUpdateWithoutDevisItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutDevisItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutDevisItemInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutDevisItemInput, ActivityLogUncheckedUpdateWithoutDevisItemInput>
    create: XOR<ActivityLogCreateWithoutDevisItemInput, ActivityLogUncheckedCreateWithoutDevisItemInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutDevisItemInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutDevisItemInput, ActivityLogUncheckedUpdateWithoutDevisItemInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutDevisItemInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutDevisItemInput>
  }

  export type UserUpsertWithoutDevisItemsInput = {
    update: XOR<UserUpdateWithoutDevisItemsInput, UserUncheckedUpdateWithoutDevisItemsInput>
    create: XOR<UserCreateWithoutDevisItemsInput, UserUncheckedCreateWithoutDevisItemsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDevisItemsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDevisItemsInput, UserUncheckedUpdateWithoutDevisItemsInput>
  }

  export type UserUpdateWithoutDevisItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDevisItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserCreateWithoutTaskAssigneeInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutTaskAssigneeInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutTaskAssigneeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
  }

  export type OrganisationCreateWithoutTaskInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutTaskInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
    ActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutTaskInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutTaskInput, OrganisationUncheckedCreateWithoutTaskInput>
  }

  export type UserCreateWithoutTaskCreatorInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutTaskCreatorInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutTaskCreatorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskCreatorInput, UserUncheckedCreateWithoutTaskCreatorInput>
  }

  export type ActivityLogCreateWithoutTaskInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
    user?: UserCreateNestedOneWithoutAllActivityLogsInput
    organisation?: OrganisationCreateNestedOneWithoutActivityLogsInput
    createdBy?: UserCreateNestedOneWithoutCreatedActivitiesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedActivitiesInput
    relatedUser?: UserCreateNestedOneWithoutRelatedActivitiesInput
    account?: AccountCreateNestedOneWithoutActivityLogInput
    session?: SessionCreateNestedOneWithoutActivityLogInput
    authenticator?: AuthenticatorCreateNestedOneWithoutActivityLogInput
    invitation?: InvitationCreateNestedOneWithoutActivityLogInput
    passwordResetToken?: PasswordResetTokenCreateNestedOneWithoutActivityLogInput
    contact?: ContactCreateNestedOneWithoutActivityLogInput
    comment?: CommentCreateNestedOneWithoutActivityLogInput
    feedbackContact?: FeedbackContactCreateNestedOneWithoutActivityLogInput
    favorite?: FavoriteCreateNestedOneWithoutActivityLogInput
    product?: ProductCreateNestedOneWithoutActivityLogInput
    stock?: StockCreateNestedOneWithoutActivityLogInput
    category?: CategoryCreateNestedOneWithoutActivityLogInput
    brand?: BrandCreateNestedOneWithoutActivityLogInput
    note?: NoteCreateNestedOneWithoutActivityLogInput
    devis?: DevisCreateNestedOneWithoutActivityLogInput
    devisItem?: DevisItemCreateNestedOneWithoutActivityLogInput
  }

  export type ActivityLogUncheckedCreateWithoutTaskInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateOrConnectWithoutTaskInput = {
    where: ActivityLogWhereUniqueInput
    create: XOR<ActivityLogCreateWithoutTaskInput, ActivityLogUncheckedCreateWithoutTaskInput>
  }

  export type ActivityLogCreateManyTaskInputEnvelope = {
    data: ActivityLogCreateManyTaskInput | ActivityLogCreateManyTaskInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTaskInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutTaskInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutTaskInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
  }

  export type UserCreateWithoutTasksInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutTasksInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutTasksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
  }

  export type UserUpsertWithoutTaskAssigneeInput = {
    update: XOR<UserUpdateWithoutTaskAssigneeInput, UserUncheckedUpdateWithoutTaskAssigneeInput>
    create: XOR<UserCreateWithoutTaskAssigneeInput, UserUncheckedCreateWithoutTaskAssigneeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTaskAssigneeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTaskAssigneeInput, UserUncheckedUpdateWithoutTaskAssigneeInput>
  }

  export type UserUpdateWithoutTaskAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationUpsertWithoutTaskInput = {
    update: XOR<OrganisationUpdateWithoutTaskInput, OrganisationUncheckedUpdateWithoutTaskInput>
    create: XOR<OrganisationCreateWithoutTaskInput, OrganisationUncheckedCreateWithoutTaskInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutTaskInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutTaskInput, OrganisationUncheckedUpdateWithoutTaskInput>
  }

  export type OrganisationUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type UserUpsertWithoutTaskCreatorInput = {
    update: XOR<UserUpdateWithoutTaskCreatorInput, UserUncheckedUpdateWithoutTaskCreatorInput>
    create: XOR<UserCreateWithoutTaskCreatorInput, UserUncheckedCreateWithoutTaskCreatorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTaskCreatorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTaskCreatorInput, UserUncheckedUpdateWithoutTaskCreatorInput>
  }

  export type UserUpdateWithoutTaskCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type ActivityLogUpsertWithWhereUniqueWithoutTaskInput = {
    where: ActivityLogWhereUniqueInput
    update: XOR<ActivityLogUpdateWithoutTaskInput, ActivityLogUncheckedUpdateWithoutTaskInput>
    create: XOR<ActivityLogCreateWithoutTaskInput, ActivityLogUncheckedCreateWithoutTaskInput>
  }

  export type ActivityLogUpdateWithWhereUniqueWithoutTaskInput = {
    where: ActivityLogWhereUniqueInput
    data: XOR<ActivityLogUpdateWithoutTaskInput, ActivityLogUncheckedUpdateWithoutTaskInput>
  }

  export type ActivityLogUpdateManyWithWhereWithoutTaskInput = {
    where: ActivityLogScalarWhereInput
    data: XOR<ActivityLogUpdateManyMutationInput, ActivityLogUncheckedUpdateManyWithoutTaskInput>
  }

  export type UserUpsertWithoutTaskInput = {
    update: XOR<UserUpdateWithoutTaskInput, UserUncheckedUpdateWithoutTaskInput>
    create: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTaskInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTaskInput, UserUncheckedUpdateWithoutTaskInput>
  }

  export type UserUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutTasksInput = {
    update: XOR<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>
    create: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTasksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>
  }

  export type UserUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserCreateWithoutAllActivityLogsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutAllActivityLogsInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutAllActivityLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAllActivityLogsInput, UserUncheckedCreateWithoutAllActivityLogsInput>
  }

  export type OrganisationCreateWithoutActivityLogsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    owner: UserCreateNestedOneWithoutOwnedOrganisationsInput
    members?: UserCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationCreateNestedManyWithoutOrganisationInput
    Product?: ProductCreateNestedManyWithoutOrganisationInput
    Stock?: StockCreateNestedManyWithoutOrganisationInput
    Contact?: ContactCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryCreateNestedManyWithoutOrganisationInput
    Brand?: BrandCreateNestedManyWithoutOrganisationInput
    notes?: NoteCreateNestedManyWithoutOrganisationInput
    Devis?: DevisCreateNestedManyWithoutOrganisationInput
    Task?: TaskCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteCreateNestedManyWithoutOrganisationInput
    createdByUser?: UserCreateNestedOneWithoutOrganisationInput
    updatedByUser?: UserCreateNestedOneWithoutOrganisationsInput
  }

  export type OrganisationUncheckedCreateWithoutActivityLogsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
    members?: UserUncheckedCreateNestedManyWithoutOrganisationsInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganisationInput
    Product?: ProductUncheckedCreateNestedManyWithoutOrganisationInput
    Stock?: StockUncheckedCreateNestedManyWithoutOrganisationInput
    Contact?: ContactUncheckedCreateNestedManyWithoutOrganisationsInput
    Category?: CategoryUncheckedCreateNestedManyWithoutOrganisationInput
    Brand?: BrandUncheckedCreateNestedManyWithoutOrganisationInput
    notes?: NoteUncheckedCreateNestedManyWithoutOrganisationInput
    Devis?: DevisUncheckedCreateNestedManyWithoutOrganisationInput
    Task?: TaskUncheckedCreateNestedManyWithoutOrganisationInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutOrganisationInput
  }

  export type OrganisationCreateOrConnectWithoutActivityLogsInput = {
    where: OrganisationWhereUniqueInput
    create: XOR<OrganisationCreateWithoutActivityLogsInput, OrganisationUncheckedCreateWithoutActivityLogsInput>
  }

  export type UserCreateWithoutCreatedActivitiesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutCreatedActivitiesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutCreatedActivitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedActivitiesInput, UserUncheckedCreateWithoutCreatedActivitiesInput>
  }

  export type UserCreateWithoutUpdatedActivitiesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    RelatedActivities?: ActivityLogCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedActivitiesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    RelatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutRelatedUserInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedActivitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedActivitiesInput, UserUncheckedCreateWithoutUpdatedActivitiesInput>
  }

  export type UserCreateWithoutRelatedActivitiesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorCreateNestedManyWithoutUserInput
    organisations?: OrganisationCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationCreateNestedManyWithoutOwnerInput
    invitations?: InvitationCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutUserInput
    notes?: NoteCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogCreateNestedManyWithoutUpdatedByInput
    AllActivityLogs?: ActivityLogCreateNestedManyWithoutUserInput
    createdByUser?: UserCreateNestedOneWithoutUserInput
    updatedByUser?: UserCreateNestedOneWithoutUsersInput
    User?: UserCreateNestedManyWithoutCreatedByUserInput
    Users?: UserCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisCreateNestedManyWithoutCreatedByInput
  }

  export type UserUncheckedCreateWithoutRelatedActivitiesInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    authenticators?: AuthenticatorUncheckedCreateNestedManyWithoutUserInput
    organisations?: OrganisationUncheckedCreateNestedManyWithoutMembersInput
    ownedOrganisations?: OrganisationUncheckedCreateNestedManyWithoutOwnerInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutInvitedByInput
    passwordResetTokens?: PasswordResetTokenUncheckedCreateNestedManyWithoutUserInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutUserInput
    notes?: NoteUncheckedCreateNestedManyWithoutUserInput
    collaboratedNotes?: NoteUncheckedCreateNestedManyWithoutCollaboratorsInput
    TaskAssignee?: TaskUncheckedCreateNestedManyWithoutAssigneeInput
    TaskCreator?: TaskUncheckedCreateNestedManyWithoutCreatedByInput
    CreatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutCreatedByInput
    UpdatedActivities?: ActivityLogUncheckedCreateNestedManyWithoutUpdatedByInput
    AllActivityLogs?: ActivityLogUncheckedCreateNestedManyWithoutUserInput
    User?: UserUncheckedCreateNestedManyWithoutCreatedByUserInput
    Users?: UserUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutCreatedByUserInput
    Organisations?: OrganisationUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Contact?: ContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Contacts?: ContactUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Comment?: CommentUncheckedCreateNestedManyWithoutCreatedByUserInput
    Category?: CategoryUncheckedCreateNestedManyWithoutCreatedByUserInput
    Categorys?: CategoryUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Product?: ProductUncheckedCreateNestedManyWithoutCreatedByUserInput
    Products?: ProductUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Stock?: StockUncheckedCreateNestedManyWithoutCreatedByUserInput
    Stocks?: StockUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCreatedByUserInput
    Brands?: BrandUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Note?: NoteUncheckedCreateNestedManyWithoutCreatedByUserInput
    Notes?: NoteUncheckedCreateNestedManyWithoutUpdatedByUserInput
    Deviss?: DevisUncheckedCreateNestedManyWithoutCreatedByUserInput
    updatedDeviss?: DevisUncheckedCreateNestedManyWithoutUpdatedByUserInput
    FeedbackContacts?: FeedbackContactUncheckedCreateNestedManyWithoutCreatedByUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutCreatedByUserInput
    Tasks?: TaskUncheckedCreateNestedManyWithoutUpdatedByUserInput
    DevisItems?: DevisItemUncheckedCreateNestedManyWithoutCreatedByUserInput
    Devis?: DevisUncheckedCreateNestedManyWithoutCreatedByInput
  }

  export type UserCreateOrConnectWithoutRelatedActivitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRelatedActivitiesInput, UserUncheckedCreateWithoutRelatedActivitiesInput>
  }

  export type AccountCreateWithoutActivityLogInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateWithoutActivityLogInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountCreateOrConnectWithoutActivityLogInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutActivityLogInput, AccountUncheckedCreateWithoutActivityLogInput>
  }

  export type SessionCreateWithoutActivityLogInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateWithoutActivityLogInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SessionCreateOrConnectWithoutActivityLogInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutActivityLogInput, SessionUncheckedCreateWithoutActivityLogInput>
  }

  export type AuthenticatorCreateWithoutActivityLogInput = {
    id?: string
    credentialID: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
    user: UserCreateNestedOneWithoutAuthenticatorsInput
  }

  export type AuthenticatorUncheckedCreateWithoutActivityLogInput = {
    id?: string
    credentialID: string
    userId: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
  }

  export type AuthenticatorCreateOrConnectWithoutActivityLogInput = {
    where: AuthenticatorWhereUniqueInput
    create: XOR<AuthenticatorCreateWithoutActivityLogInput, AuthenticatorUncheckedCreateWithoutActivityLogInput>
  }

  export type InvitationCreateWithoutActivityLogInput = {
    id?: string
    email: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    invitedBy: UserCreateNestedOneWithoutInvitationsInput
    organisation: OrganisationCreateNestedOneWithoutInvitationsInput
  }

  export type InvitationUncheckedCreateWithoutActivityLogInput = {
    id?: string
    email: string
    organisationId: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedById: string
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
  }

  export type InvitationCreateOrConnectWithoutActivityLogInput = {
    where: InvitationWhereUniqueInput
    create: XOR<InvitationCreateWithoutActivityLogInput, InvitationUncheckedCreateWithoutActivityLogInput>
  }

  export type PasswordResetTokenCreateWithoutActivityLogInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutPasswordResetTokensInput
  }

  export type PasswordResetTokenUncheckedCreateWithoutActivityLogInput = {
    id?: string
    userId: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type PasswordResetTokenCreateOrConnectWithoutActivityLogInput = {
    where: PasswordResetTokenWhereUniqueInput
    create: XOR<PasswordResetTokenCreateWithoutActivityLogInput, PasswordResetTokenUncheckedCreateWithoutActivityLogInput>
  }

  export type ContactCreateWithoutActivityLogInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisations?: OrganisationCreateNestedManyWithoutContactInput
    comments?: CommentCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactCreateNestedManyWithoutContactInput
    notes?: NoteCreateNestedManyWithoutContactInput
    Devis?: DevisCreateNestedManyWithoutContactInput
    Favorite?: FavoriteCreateNestedManyWithoutContactInput
    createdByUser?: UserCreateNestedOneWithoutContactInput
    updatedByUser?: UserCreateNestedOneWithoutContactsInput
  }

  export type ContactUncheckedCreateWithoutActivityLogInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    organisations?: OrganisationUncheckedCreateNestedManyWithoutContactInput
    comments?: CommentUncheckedCreateNestedManyWithoutContactInput
    FeedbackContact?: FeedbackContactUncheckedCreateNestedManyWithoutContactInput
    notes?: NoteUncheckedCreateNestedManyWithoutContactInput
    Devis?: DevisUncheckedCreateNestedManyWithoutContactInput
    Favorite?: FavoriteUncheckedCreateNestedManyWithoutContactInput
  }

  export type ContactCreateOrConnectWithoutActivityLogInput = {
    where: ContactWhereUniqueInput
    create: XOR<ContactCreateWithoutActivityLogInput, ContactUncheckedCreateWithoutActivityLogInput>
  }

  export type CommentCreateWithoutActivityLogInput = {
    id?: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutCommentsInput
    createdByUser?: UserCreateNestedOneWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutActivityLogInput = {
    id?: string
    content: string
    createdAt?: Date | string
    contactId: string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type CommentCreateOrConnectWithoutActivityLogInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutActivityLogInput, CommentUncheckedCreateWithoutActivityLogInput>
  }

  export type FeedbackContactCreateWithoutActivityLogInput = {
    id?: string
    message: string
    createdAt?: Date | string
    updatedAt?: Date | string
    contact: ContactCreateNestedOneWithoutFeedbackContactInput
    user: UserCreateNestedOneWithoutFeedbackContactInput
    createdByUser?: UserCreateNestedOneWithoutFeedbackContactsInput
  }

  export type FeedbackContactUncheckedCreateWithoutActivityLogInput = {
    id?: string
    message: string
    contactId: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type FeedbackContactCreateOrConnectWithoutActivityLogInput = {
    where: FeedbackContactWhereUniqueInput
    create: XOR<FeedbackContactCreateWithoutActivityLogInput, FeedbackContactUncheckedCreateWithoutActivityLogInput>
  }

  export type FavoriteCreateWithoutActivityLogInput = {
    id?: string
    contact: ContactCreateNestedOneWithoutFavoriteInput
    organisation: OrganisationCreateNestedOneWithoutFavoriteInput
    createdByUser?: UserCreateNestedOneWithoutFavoriteInput
  }

  export type FavoriteUncheckedCreateWithoutActivityLogInput = {
    id?: string
    contactId: string
    organisationId: string
    createdByUserId?: string | null
  }

  export type FavoriteCreateOrConnectWithoutActivityLogInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutActivityLogInput, FavoriteUncheckedCreateWithoutActivityLogInput>
  }

  export type ProductCreateWithoutActivityLogInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutProductInput
    brand?: BrandCreateNestedOneWithoutProductInput
    Stock?: StockCreateNestedManyWithoutProductInput
    categories?: CategoryCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemCreateNestedManyWithoutProductInput
    createdByUser?: UserCreateNestedOneWithoutProductInput
    updatedByUser?: UserCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutActivityLogInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Stock?: StockUncheckedCreateNestedManyWithoutProductInput
    categories?: CategoryUncheckedCreateNestedManyWithoutProductInput
    DevisItem?: DevisItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutActivityLogInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutActivityLogInput, ProductUncheckedCreateWithoutActivityLogInput>
  }

  export type StockCreateWithoutActivityLogInput = {
    id?: string
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    product: ProductCreateNestedOneWithoutStockInput
    organisation: OrganisationCreateNestedOneWithoutStockInput
    createdByUser?: UserCreateNestedOneWithoutStockInput
    updatedByUser?: UserCreateNestedOneWithoutStocksInput
  }

  export type StockUncheckedCreateWithoutActivityLogInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type StockCreateOrConnectWithoutActivityLogInput = {
    where: StockWhereUniqueInput
    create: XOR<StockCreateWithoutActivityLogInput, StockUncheckedCreateWithoutActivityLogInput>
  }

  export type CategoryCreateWithoutActivityLogInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutCategoryInput
    parent?: CategoryCreateNestedOneWithoutChildrenInput
    children?: CategoryCreateNestedManyWithoutParentInput
    Product?: ProductCreateNestedManyWithoutCategoriesInput
    Brand?: BrandCreateNestedManyWithoutCategoryInput
    createdByUser?: UserCreateNestedOneWithoutCategoryInput
    updatedByUser?: UserCreateNestedOneWithoutCategorysInput
  }

  export type CategoryUncheckedCreateWithoutActivityLogInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    children?: CategoryUncheckedCreateNestedManyWithoutParentInput
    Product?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    Brand?: BrandUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutActivityLogInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutActivityLogInput, CategoryUncheckedCreateWithoutActivityLogInput>
  }

  export type BrandCreateWithoutActivityLogInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutBrandInput
    Category?: CategoryCreateNestedManyWithoutBrandInput
    createdByUser?: UserCreateNestedOneWithoutBrandInput
    updatedByUser?: UserCreateNestedOneWithoutBrandsInput
    Product?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateWithoutActivityLogInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    Category?: CategoryUncheckedCreateNestedManyWithoutBrandInput
    Product?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutActivityLogInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutActivityLogInput, BrandUncheckedCreateWithoutActivityLogInput>
  }

  export type NoteCreateWithoutActivityLogInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    user: UserCreateNestedOneWithoutNotesInput
    contact: ContactCreateNestedOneWithoutNotesInput
    collaborators?: UserCreateNestedManyWithoutCollaboratedNotesInput
    Organisation?: OrganisationCreateNestedManyWithoutNotesInput
    createdByUser?: UserCreateNestedOneWithoutNoteInput
    updatedByUser?: UserCreateNestedOneWithoutNotesInput
  }

  export type NoteUncheckedCreateWithoutActivityLogInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    collaborators?: UserUncheckedCreateNestedManyWithoutCollaboratedNotesInput
    Organisation?: OrganisationUncheckedCreateNestedManyWithoutNotesInput
  }

  export type NoteCreateOrConnectWithoutActivityLogInput = {
    where: NoteWhereUniqueInput
    create: XOR<NoteCreateWithoutActivityLogInput, NoteUncheckedCreateWithoutActivityLogInput>
  }

  export type DevisCreateWithoutActivityLogInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    isArchived?: boolean
    archivedBy?: string | null
    organisation: OrganisationCreateNestedOneWithoutDevisInput
    contact: ContactCreateNestedOneWithoutDevisInput
    createdBy: UserCreateNestedOneWithoutDevisInput
    items?: DevisItemCreateNestedManyWithoutDevisInput
    createdByUser?: UserCreateNestedOneWithoutDevissInput
    updatedByUser?: UserCreateNestedOneWithoutUpdatedDevissInput
  }

  export type DevisUncheckedCreateWithoutActivityLogInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    items?: DevisItemUncheckedCreateNestedManyWithoutDevisInput
  }

  export type DevisCreateOrConnectWithoutActivityLogInput = {
    where: DevisWhereUniqueInput
    create: XOR<DevisCreateWithoutActivityLogInput, DevisUncheckedCreateWithoutActivityLogInput>
  }

  export type DevisItemCreateWithoutActivityLogInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devis: DevisCreateNestedOneWithoutItemsInput
    product?: ProductCreateNestedOneWithoutDevisItemInput
    createdByUser?: UserCreateNestedOneWithoutDevisItemsInput
  }

  export type DevisItemUncheckedCreateWithoutActivityLogInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    productId?: string | null
    createdByUserId?: string | null
  }

  export type DevisItemCreateOrConnectWithoutActivityLogInput = {
    where: DevisItemWhereUniqueInput
    create: XOR<DevisItemCreateWithoutActivityLogInput, DevisItemUncheckedCreateWithoutActivityLogInput>
  }

  export type TaskCreateWithoutActivityLogInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    assignee?: UserCreateNestedOneWithoutTaskAssigneeInput
    organisation: OrganisationCreateNestedOneWithoutTaskInput
    createdBy: UserCreateNestedOneWithoutTaskCreatorInput
    createdByUser?: UserCreateNestedOneWithoutTaskInput
    updatedByUser?: UserCreateNestedOneWithoutTasksInput
  }

  export type TaskUncheckedCreateWithoutActivityLogInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type TaskCreateOrConnectWithoutActivityLogInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutActivityLogInput, TaskUncheckedCreateWithoutActivityLogInput>
  }

  export type UserUpsertWithoutAllActivityLogsInput = {
    update: XOR<UserUpdateWithoutAllActivityLogsInput, UserUncheckedUpdateWithoutAllActivityLogsInput>
    create: XOR<UserCreateWithoutAllActivityLogsInput, UserUncheckedCreateWithoutAllActivityLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAllActivityLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAllActivityLogsInput, UserUncheckedUpdateWithoutAllActivityLogsInput>
  }

  export type UserUpdateWithoutAllActivityLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutAllActivityLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type OrganisationUpsertWithoutActivityLogsInput = {
    update: XOR<OrganisationUpdateWithoutActivityLogsInput, OrganisationUncheckedUpdateWithoutActivityLogsInput>
    create: XOR<OrganisationCreateWithoutActivityLogsInput, OrganisationUncheckedCreateWithoutActivityLogsInput>
    where?: OrganisationWhereInput
  }

  export type OrganisationUpdateToOneWithWhereWithoutActivityLogsInput = {
    where?: OrganisationWhereInput
    data: XOR<OrganisationUpdateWithoutActivityLogsInput, OrganisationUncheckedUpdateWithoutActivityLogsInput>
  }

  export type OrganisationUpdateWithoutActivityLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutActivityLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type UserUpsertWithoutCreatedActivitiesInput = {
    update: XOR<UserUpdateWithoutCreatedActivitiesInput, UserUncheckedUpdateWithoutCreatedActivitiesInput>
    create: XOR<UserCreateWithoutCreatedActivitiesInput, UserUncheckedCreateWithoutCreatedActivitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedActivitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedActivitiesInput, UserUncheckedUpdateWithoutCreatedActivitiesInput>
  }

  export type UserUpdateWithoutCreatedActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutUpdatedActivitiesInput = {
    update: XOR<UserUpdateWithoutUpdatedActivitiesInput, UserUncheckedUpdateWithoutUpdatedActivitiesInput>
    create: XOR<UserCreateWithoutUpdatedActivitiesInput, UserUncheckedCreateWithoutUpdatedActivitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedActivitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedActivitiesInput, UserUncheckedUpdateWithoutUpdatedActivitiesInput>
  }

  export type UserUpdateWithoutUpdatedActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUpsertWithoutRelatedActivitiesInput = {
    update: XOR<UserUpdateWithoutRelatedActivitiesInput, UserUncheckedUpdateWithoutRelatedActivitiesInput>
    create: XOR<UserCreateWithoutRelatedActivitiesInput, UserUncheckedCreateWithoutRelatedActivitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRelatedActivitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRelatedActivitiesInput, UserUncheckedUpdateWithoutRelatedActivitiesInput>
  }

  export type UserUpdateWithoutRelatedActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutRelatedActivitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type AccountUpsertWithoutActivityLogInput = {
    update: XOR<AccountUpdateWithoutActivityLogInput, AccountUncheckedUpdateWithoutActivityLogInput>
    create: XOR<AccountCreateWithoutActivityLogInput, AccountUncheckedCreateWithoutActivityLogInput>
    where?: AccountWhereInput
  }

  export type AccountUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: AccountWhereInput
    data: XOR<AccountUpdateWithoutActivityLogInput, AccountUncheckedUpdateWithoutActivityLogInput>
  }

  export type AccountUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUpsertWithoutActivityLogInput = {
    update: XOR<SessionUpdateWithoutActivityLogInput, SessionUncheckedUpdateWithoutActivityLogInput>
    create: XOR<SessionCreateWithoutActivityLogInput, SessionUncheckedCreateWithoutActivityLogInput>
    where?: SessionWhereInput
  }

  export type SessionUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: SessionWhereInput
    data: XOR<SessionUpdateWithoutActivityLogInput, SessionUncheckedUpdateWithoutActivityLogInput>
  }

  export type SessionUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuthenticatorUpsertWithoutActivityLogInput = {
    update: XOR<AuthenticatorUpdateWithoutActivityLogInput, AuthenticatorUncheckedUpdateWithoutActivityLogInput>
    create: XOR<AuthenticatorCreateWithoutActivityLogInput, AuthenticatorUncheckedCreateWithoutActivityLogInput>
    where?: AuthenticatorWhereInput
  }

  export type AuthenticatorUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: AuthenticatorWhereInput
    data: XOR<AuthenticatorUpdateWithoutActivityLogInput, AuthenticatorUncheckedUpdateWithoutActivityLogInput>
  }

  export type AuthenticatorUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAuthenticatorsNestedInput
  }

  export type AuthenticatorUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationUpsertWithoutActivityLogInput = {
    update: XOR<InvitationUpdateWithoutActivityLogInput, InvitationUncheckedUpdateWithoutActivityLogInput>
    create: XOR<InvitationCreateWithoutActivityLogInput, InvitationUncheckedCreateWithoutActivityLogInput>
    where?: InvitationWhereInput
  }

  export type InvitationUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: InvitationWhereInput
    data: XOR<InvitationUpdateWithoutActivityLogInput, InvitationUncheckedUpdateWithoutActivityLogInput>
  }

  export type InvitationUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedBy?: UserUpdateOneRequiredWithoutInvitationsNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutInvitationsNestedInput
  }

  export type InvitationUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedById?: StringFieldUpdateOperationsInput | string
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PasswordResetTokenUpsertWithoutActivityLogInput = {
    update: XOR<PasswordResetTokenUpdateWithoutActivityLogInput, PasswordResetTokenUncheckedUpdateWithoutActivityLogInput>
    create: XOR<PasswordResetTokenCreateWithoutActivityLogInput, PasswordResetTokenUncheckedCreateWithoutActivityLogInput>
    where?: PasswordResetTokenWhereInput
  }

  export type PasswordResetTokenUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: PasswordResetTokenWhereInput
    data: XOR<PasswordResetTokenUpdateWithoutActivityLogInput, PasswordResetTokenUncheckedUpdateWithoutActivityLogInput>
  }

  export type PasswordResetTokenUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPasswordResetTokensNestedInput
  }

  export type PasswordResetTokenUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContactUpsertWithoutActivityLogInput = {
    update: XOR<ContactUpdateWithoutActivityLogInput, ContactUncheckedUpdateWithoutActivityLogInput>
    create: XOR<ContactCreateWithoutActivityLogInput, ContactUncheckedCreateWithoutActivityLogInput>
    where?: ContactWhereInput
  }

  export type ContactUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: ContactWhereInput
    data: XOR<ContactUpdateWithoutActivityLogInput, ContactUncheckedUpdateWithoutActivityLogInput>
  }

  export type ContactUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
  }

  export type CommentUpsertWithoutActivityLogInput = {
    update: XOR<CommentUpdateWithoutActivityLogInput, CommentUncheckedUpdateWithoutActivityLogInput>
    create: XOR<CommentCreateWithoutActivityLogInput, CommentUncheckedCreateWithoutActivityLogInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutActivityLogInput, CommentUncheckedUpdateWithoutActivityLogInput>
  }

  export type CommentUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutCommentsNestedInput
    createdByUser?: UserUpdateOneWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FeedbackContactUpsertWithoutActivityLogInput = {
    update: XOR<FeedbackContactUpdateWithoutActivityLogInput, FeedbackContactUncheckedUpdateWithoutActivityLogInput>
    create: XOR<FeedbackContactCreateWithoutActivityLogInput, FeedbackContactUncheckedCreateWithoutActivityLogInput>
    where?: FeedbackContactWhereInput
  }

  export type FeedbackContactUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: FeedbackContactWhereInput
    data: XOR<FeedbackContactUpdateWithoutActivityLogInput, FeedbackContactUncheckedUpdateWithoutActivityLogInput>
  }

  export type FeedbackContactUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutFeedbackContactNestedInput
    user?: UserUpdateOneRequiredWithoutFeedbackContactNestedInput
    createdByUser?: UserUpdateOneWithoutFeedbackContactsNestedInput
  }

  export type FeedbackContactUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUpsertWithoutActivityLogInput = {
    update: XOR<FavoriteUpdateWithoutActivityLogInput, FavoriteUncheckedUpdateWithoutActivityLogInput>
    create: XOR<FavoriteCreateWithoutActivityLogInput, FavoriteUncheckedCreateWithoutActivityLogInput>
    where?: FavoriteWhereInput
  }

  export type FavoriteUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: FavoriteWhereInput
    data: XOR<FavoriteUpdateWithoutActivityLogInput, FavoriteUncheckedUpdateWithoutActivityLogInput>
  }

  export type FavoriteUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact?: ContactUpdateOneRequiredWithoutFavoriteNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutFavoriteNestedInput
    createdByUser?: UserUpdateOneWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpsertWithoutActivityLogInput = {
    update: XOR<ProductUpdateWithoutActivityLogInput, ProductUncheckedUpdateWithoutActivityLogInput>
    create: XOR<ProductCreateWithoutActivityLogInput, ProductUncheckedCreateWithoutActivityLogInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutActivityLogInput, ProductUncheckedUpdateWithoutActivityLogInput>
  }

  export type ProductUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type StockUpsertWithoutActivityLogInput = {
    update: XOR<StockUpdateWithoutActivityLogInput, StockUncheckedUpdateWithoutActivityLogInput>
    create: XOR<StockCreateWithoutActivityLogInput, StockUncheckedCreateWithoutActivityLogInput>
    where?: StockWhereInput
  }

  export type StockUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: StockWhereInput
    data: XOR<StockUpdateWithoutActivityLogInput, StockUncheckedUpdateWithoutActivityLogInput>
  }

  export type StockUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutStockNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutStockNestedInput
    createdByUser?: UserUpdateOneWithoutStockNestedInput
    updatedByUser?: UserUpdateOneWithoutStocksNestedInput
  }

  export type StockUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUpsertWithoutActivityLogInput = {
    update: XOR<CategoryUpdateWithoutActivityLogInput, CategoryUncheckedUpdateWithoutActivityLogInput>
    create: XOR<CategoryCreateWithoutActivityLogInput, CategoryUncheckedCreateWithoutActivityLogInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutActivityLogInput, CategoryUncheckedUpdateWithoutActivityLogInput>
  }

  export type CategoryUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type BrandUpsertWithoutActivityLogInput = {
    update: XOR<BrandUpdateWithoutActivityLogInput, BrandUncheckedUpdateWithoutActivityLogInput>
    create: XOR<BrandCreateWithoutActivityLogInput, BrandUncheckedCreateWithoutActivityLogInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutActivityLogInput, BrandUncheckedUpdateWithoutActivityLogInput>
  }

  export type BrandUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutBrandNestedInput
    Category?: CategoryUpdateManyWithoutBrandNestedInput
    createdByUser?: UserUpdateOneWithoutBrandNestedInput
    updatedByUser?: UserUpdateOneWithoutBrandsNestedInput
    Product?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Category?: CategoryUncheckedUpdateManyWithoutBrandNestedInput
    Product?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type NoteUpsertWithoutActivityLogInput = {
    update: XOR<NoteUpdateWithoutActivityLogInput, NoteUncheckedUpdateWithoutActivityLogInput>
    create: XOR<NoteCreateWithoutActivityLogInput, NoteUncheckedCreateWithoutActivityLogInput>
    where?: NoteWhereInput
  }

  export type NoteUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: NoteWhereInput
    data: XOR<NoteUpdateWithoutActivityLogInput, NoteUncheckedUpdateWithoutActivityLogInput>
  }

  export type NoteUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type DevisUpsertWithoutActivityLogInput = {
    update: XOR<DevisUpdateWithoutActivityLogInput, DevisUncheckedUpdateWithoutActivityLogInput>
    create: XOR<DevisCreateWithoutActivityLogInput, DevisUncheckedCreateWithoutActivityLogInput>
    where?: DevisWhereInput
  }

  export type DevisUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: DevisWhereInput
    data: XOR<DevisUpdateWithoutActivityLogInput, DevisUncheckedUpdateWithoutActivityLogInput>
  }

  export type DevisUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisItemUpsertWithoutActivityLogInput = {
    update: XOR<DevisItemUpdateWithoutActivityLogInput, DevisItemUncheckedUpdateWithoutActivityLogInput>
    create: XOR<DevisItemCreateWithoutActivityLogInput, DevisItemUncheckedCreateWithoutActivityLogInput>
    where?: DevisItemWhereInput
  }

  export type DevisItemUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: DevisItemWhereInput
    data: XOR<DevisItemUpdateWithoutActivityLogInput, DevisItemUncheckedUpdateWithoutActivityLogInput>
  }

  export type DevisItemUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devis?: DevisUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneWithoutDevisItemNestedInput
    createdByUser?: UserUpdateOneWithoutDevisItemsNestedInput
  }

  export type DevisItemUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpsertWithoutActivityLogInput = {
    update: XOR<TaskUpdateWithoutActivityLogInput, TaskUncheckedUpdateWithoutActivityLogInput>
    create: XOR<TaskCreateWithoutActivityLogInput, TaskUncheckedCreateWithoutActivityLogInput>
    where?: TaskWhereInput
  }

  export type TaskUpdateToOneWithWhereWithoutActivityLogInput = {
    where?: TaskWhereInput
    data: XOR<TaskUpdateWithoutActivityLogInput, TaskUncheckedUpdateWithoutActivityLogInput>
  }

  export type TaskUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutTaskNestedInput
    createdBy?: UserUpdateOneRequiredWithoutTaskCreatorNestedInput
    createdByUser?: UserUpdateOneWithoutTaskNestedInput
    updatedByUser?: UserUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutActivityLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuthenticatorCreateManyUserInput = {
    id?: string
    credentialID: string
    providerAccountId: string
    credentialPublicKey: string
    counter: number
    credentialDeviceType: string
    credentialBackedUp: boolean
    transports?: string | null
  }

  export type OrganisationCreateManyOwnerInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type InvitationCreateManyInvitedByInput = {
    id?: string
    email: string
    organisationId: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
  }

  export type PasswordResetTokenCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type FeedbackContactCreateManyUserInput = {
    id?: string
    message: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type NoteCreateManyUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type TaskCreateManyAssigneeInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type TaskCreateManyCreatedByInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type ActivityLogCreateManyCreatedByInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateManyUpdatedByInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateManyRelatedUserInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogCreateManyUserInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type UserCreateManyCreatedByUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type UserCreateManyUpdatedByUserInput = {
    id?: string
    name?: string | null
    email: string
    emailVerified?: Date | string | null
    image?: string | null
    password?: string | null
    role?: $Enums.Role
    accessType?: $Enums.AccessType
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type FavoriteCreateManyCreatedByUserInput = {
    id?: string
    contactId: string
    organisationId: string
  }

  export type OrganisationCreateManyCreatedByUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    updatedByUserId?: string | null
  }

  export type OrganisationCreateManyUpdatedByUserInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    ownerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    domain?: $Enums.Domain
    createdByUserId?: string | null
  }

  export type ContactCreateManyCreatedByUserInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type ContactCreateManyUpdatedByUserInput = {
    id?: string
    name: string
    logo?: string | null
    adresse?: string | null
    status_contact?: $Enums.Status_Contact
    email?: string | null
    phone?: string | null
    niveau: $Enums.Niveau
    tags?: string | null
    sector?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type CommentCreateManyCreatedByUserInput = {
    id?: string
    content: string
    createdAt?: Date | string
    contactId: string
    updatedAt?: Date | string
  }

  export type CategoryCreateManyCreatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type CategoryCreateManyUpdatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type ProductCreateManyCreatedByUserInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    updatedByUserId?: string | null
  }

  export type ProductCreateManyUpdatedByUserInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
  }

  export type StockCreateManyCreatedByUserInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type StockCreateManyUpdatedByUserInput = {
    id?: string
    quantity: number
    productId: string
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type BrandCreateManyCreatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type BrandCreateManyUpdatedByUserInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type NoteCreateManyCreatedByUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type NoteCreateManyUpdatedByUserInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    contactId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type DevisCreateManyCreatedByUserInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type DevisCreateManyUpdatedByUserInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type FeedbackContactCreateManyCreatedByUserInput = {
    id?: string
    message: string
    contactId: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TaskCreateManyCreatedByUserInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    updatedByUserId?: string | null
  }

  export type TaskCreateManyUpdatedByUserInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
  }

  export type DevisItemCreateManyCreatedByUserInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    productId?: string | null
  }

  export type DevisCreateManyCreatedByInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    contactId: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutAccountNestedInput
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuthenticatorUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUpdateManyWithoutAuthenticatorNestedInput
  }

  export type AuthenticatorUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutAuthenticatorNestedInput
  }

  export type AuthenticatorUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    credentialID?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    credentialPublicKey?: StringFieldUpdateOperationsInput | string
    counter?: IntFieldUpdateOperationsInput | number
    credentialDeviceType?: StringFieldUpdateOperationsInput | string
    credentialBackedUp?: BoolFieldUpdateOperationsInput | boolean
    transports?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganisationUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateManyWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganisationUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationUpdateWithoutInvitedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutInvitationsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutInvitationNestedInput
  }

  export type InvitationUncheckedUpdateWithoutInvitedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutInvitationNestedInput
  }

  export type InvitationUncheckedUpdateManyWithoutInvitedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PasswordResetTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUpdateManyWithoutPasswordResetTokenNestedInput
  }

  export type PasswordResetTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutPasswordResetTokenNestedInput
  }

  export type PasswordResetTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeedbackContactUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutFeedbackContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFeedbackContactNestedInput
    createdByUser?: UserUpdateOneWithoutFeedbackContactsNestedInput
  }

  export type FeedbackContactUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFeedbackContactNestedInput
  }

  export type FeedbackContactUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutCollaboratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutCollaboratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateManyWithoutCollaboratorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutTaskNestedInput
    createdBy?: UserUpdateOneRequiredWithoutTaskCreatorNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutTaskNestedInput
    createdByUser?: UserUpdateOneWithoutTaskNestedInput
    updatedByUser?: UserUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutAssigneeInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutTaskNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutTaskNestedInput
    createdByUser?: UserUpdateOneWithoutTaskNestedInput
    updatedByUser?: UserUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutRelatedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutRelatedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutRelatedUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact?: ContactUpdateOneRequiredWithoutFavoriteNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutFavoriteNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
  }

  export type OrganisationUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganisationUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUpdateManyWithoutContactNestedInput
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    organisations?: OrganisationUncheckedUpdateManyWithoutContactNestedInput
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutCommentsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contactId?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutStockNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutStockNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutStockNestedInput
    updatedByUser?: UserUpdateOneWithoutStocksNestedInput
  }

  export type StockUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutStockNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutStockNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutStockNestedInput
    createdByUser?: UserUpdateOneWithoutStockNestedInput
  }

  export type StockUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BrandUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutBrandNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutBrandNestedInput
    Category?: CategoryUpdateManyWithoutBrandNestedInput
    updatedByUser?: UserUpdateOneWithoutBrandsNestedInput
    Product?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutBrandNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutBrandNestedInput
    Product?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BrandUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutBrandNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutBrandNestedInput
    Category?: CategoryUpdateManyWithoutBrandNestedInput
    createdByUser?: UserUpdateOneWithoutBrandNestedInput
    Product?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutBrandNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutBrandNestedInput
    Product?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
  }

  export type NoteUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FeedbackContactUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    contact?: ContactUpdateOneRequiredWithoutFeedbackContactNestedInput
    user?: UserUpdateOneRequiredWithoutFeedbackContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFeedbackContactNestedInput
  }

  export type FeedbackContactUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFeedbackContactNestedInput
  }

  export type FeedbackContactUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TaskUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutTaskNestedInput
    createdBy?: UserUpdateOneRequiredWithoutTaskCreatorNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutTaskNestedInput
    updatedByUser?: UserUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    organisation?: OrganisationUpdateOneRequiredWithoutTaskNestedInput
    createdBy?: UserUpdateOneRequiredWithoutTaskCreatorNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutTaskNestedInput
    createdByUser?: UserUpdateOneWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisItemUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devis?: DevisUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneWithoutDevisItemNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisItemNestedInput
  }

  export type DevisItemUncheckedUpdateWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisItemNestedInput
  }

  export type DevisItemUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationCreateManyOrganisationInput = {
    id?: string
    email: string
    role: $Enums.Role
    accessType: $Enums.AccessType
    invitedById: string
    invitedAt?: Date | string
    acceptedAt?: Date | string | null
    token: string
    tokenExpiresAt: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
  }

  export type ProductCreateManyOrganisationInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    brandId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type StockCreateManyOrganisationInput = {
    id?: string
    quantity: number
    productId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type CategoryCreateManyOrganisationInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    parentId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type BrandCreateManyOrganisationInput = {
    id?: string
    name: string
    description?: string | null
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type DevisCreateManyOrganisationInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    contactId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type TaskCreateManyOrganisationInput = {
    id?: string
    title: string
    description?: string | null
    type: $Enums.TaskType
    status?: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    assigneeId?: string | null
    dueDate?: Date | string | null
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type FavoriteCreateManyOrganisationInput = {
    id?: string
    contactId: string
    createdByUserId?: string | null
  }

  export type ActivityLogCreateManyOrganisationInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type UserUpdateWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    collaboratedNotes?: NoteUncheckedUpdateManyWithoutCollaboratorsNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type InvitationUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    invitedBy?: UserUpdateOneRequiredWithoutInvitationsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutInvitationNestedInput
  }

  export type InvitationUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedById?: StringFieldUpdateOperationsInput | string
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutInvitationNestedInput
  }

  export type InvitationUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    invitedById?: StringFieldUpdateOperationsInput | string
    invitedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    token?: StringFieldUpdateOperationsInput | string
    tokenExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutStockNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutStockNestedInput
    createdByUser?: UserUpdateOneWithoutStockNestedInput
    updatedByUser?: UserUpdateOneWithoutStocksNestedInput
  }

  export type StockUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ContactUpdateWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutContactNestedInput
    notes?: NoteUpdateManyWithoutContactNestedInput
    Devis?: DevisUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutContactNestedInput
    createdByUser?: UserUpdateOneWithoutContactNestedInput
    updatedByUser?: UserUpdateOneWithoutContactsNestedInput
  }

  export type ContactUncheckedUpdateWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutContactNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutContactNestedInput
    notes?: NoteUncheckedUpdateManyWithoutContactNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutContactNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutContactNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutContactNestedInput
  }

  export type ContactUncheckedUpdateManyWithoutOrganisationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    adresse?: NullableStringFieldUpdateOperationsInput | string | null
    status_contact?: EnumStatus_ContactFieldUpdateOperationsInput | $Enums.Status_Contact
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    niveau?: EnumNiveauFieldUpdateOperationsInput | $Enums.Niveau
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    sector?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BrandUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUpdateManyWithoutBrandNestedInput
    Category?: CategoryUpdateManyWithoutBrandNestedInput
    createdByUser?: UserUpdateOneWithoutBrandNestedInput
    updatedByUser?: UserUpdateOneWithoutBrandsNestedInput
    Product?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutBrandNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutBrandNestedInput
    Product?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    contact?: ContactUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
  }

  export type NoteUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    contact?: ContactUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assignee?: UserUpdateOneWithoutTaskAssigneeNestedInput
    createdBy?: UserUpdateOneRequiredWithoutTaskCreatorNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutTaskNestedInput
    createdByUser?: UserUpdateOneWithoutTaskNestedInput
    updatedByUser?: UserUpdateOneWithoutTasksNestedInput
  }

  export type TaskUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumTaskTypeFieldUpdateOperationsInput | $Enums.TaskType
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    assigneeId?: NullableStringFieldUpdateOperationsInput | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    contact?: ContactUpdateOneRequiredWithoutFavoriteNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFavoriteNestedInput
    createdByUser?: UserUpdateOneWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    contactId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutOrganisationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyAccountInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutAccountInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManySessionInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutSessionInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutSessionInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutSessionInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyAuthenticatorInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutAuthenticatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutAuthenticatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutAuthenticatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyInvitationInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutInvitationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutInvitationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutInvitationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyPasswordResetTokenInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutPasswordResetTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutPasswordResetTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutPasswordResetTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentCreateManyContactInput = {
    id?: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type FeedbackContactCreateManyContactInput = {
    id?: string
    message: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    createdByUserId?: string | null
  }

  export type NoteCreateManyContactInput = {
    id?: string
    title: string
    content: string
    color?: string
    isPinned?: boolean
    lastModified: Date | string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type DevisCreateManyContactInput = {
    id?: string
    devisNumber: string
    taxType: $Enums.TaxType
    status?: $Enums.DevisStatus
    totalAmount: number
    taxAmount: number
    totalWithTax: number
    notes?: string | null
    pdfUrl?: string | null
    creationDate?: Date | string
    lastModified?: Date | string
    archivedDate?: Date | string | null
    dueDate?: Date | string | null
    organisationId: string
    createdById: string
    isArchived?: boolean
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type FavoriteCreateManyContactInput = {
    id?: string
    organisationId: string
    createdByUserId?: string | null
  }

  export type ActivityLogCreateManyContactInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type OrganisationUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    notes?: NoteUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ActivityLog?: ActivityLogUpdateManyWithoutCommentNestedInput
    createdByUser?: UserUpdateOneWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FeedbackContactUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFeedbackContactNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFeedbackContactNestedInput
    createdByUser?: UserUpdateOneWithoutFeedbackContactsNestedInput
  }

  export type FeedbackContactUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFeedbackContactNestedInput
  }

  export type FeedbackContactUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NoteUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutNotesNestedInput
    collaborators?: UserUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUpdateManyWithoutNotesNestedInput
    createdByUser?: UserUpdateOneWithoutNoteNestedInput
    updatedByUser?: UserUpdateOneWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    collaborators?: UserUncheckedUpdateManyWithoutCollaboratedNotesNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutNoteNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutNotesNestedInput
  }

  export type NoteUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    isPinned?: BoolFieldUpdateOperationsInput | boolean
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutDevisNestedInput
    createdBy?: UserUpdateOneRequiredWithoutDevisNestedInput
    items?: DevisItemUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisNestedInput
    createdByUser?: UserUpdateOneWithoutDevissNestedInput
    updatedByUser?: UserUpdateOneWithoutUpdatedDevissNestedInput
  }

  export type DevisUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: DevisItemUncheckedUpdateManyWithoutDevisNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisNestedInput
  }

  export type DevisUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    devisNumber?: StringFieldUpdateOperationsInput | string
    taxType?: EnumTaxTypeFieldUpdateOperationsInput | $Enums.TaxType
    status?: EnumDevisStatusFieldUpdateOperationsInput | $Enums.DevisStatus
    totalAmount?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    pdfUrl?: NullableStringFieldUpdateOperationsInput | string | null
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdById?: StringFieldUpdateOperationsInput | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FavoriteUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    organisation?: OrganisationUpdateOneRequiredWithoutFavoriteNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutFavoriteNestedInput
    createdByUser?: UserUpdateOneWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutFavoriteNestedInput
  }

  export type FavoriteUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    organisationId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyCommentInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyFeedbackContactInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutFeedbackContactInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyFavoriteInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutFavoriteInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockCreateManyProductInput = {
    id?: string
    quantity: number
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type DevisItemCreateManyProductInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    devisId: string
    createdByUserId?: string | null
  }

  export type ActivityLogCreateManyProductInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type StockUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutStockNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutStockNestedInput
    createdByUser?: UserUpdateOneWithoutStockNestedInput
    updatedByUser?: UserUpdateOneWithoutStocksNestedInput
  }

  export type StockUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutStockNestedInput
  }

  export type StockUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devis?: DevisUpdateOneRequiredWithoutItemsNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisItemNestedInput
    createdByUser?: UserUpdateOneWithoutDevisItemsNestedInput
  }

  export type DevisItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisItemNestedInput
  }

  export type DevisItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    devisId?: StringFieldUpdateOperationsInput | string
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyStockInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutStockInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryCreateManyParentInput = {
    id?: string
    name: string
    description?: string | null
    organisationId: string
    logo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type ActivityLogCreateManyCategoryInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type CategoryUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUpdateManyWithoutCategoryNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    brand?: BrandUpdateOneWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BrandUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutBrandNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutBrandNestedInput
    createdByUser?: UserUpdateOneWithoutBrandNestedInput
    updatedByUser?: UserUpdateOneWithoutBrandsNestedInput
    Product?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutBrandNestedInput
    Product?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyBrandInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ProductCreateManyBrandInput = {
    id?: string
    name: string
    description: string
    price: number
    images?: ProductCreateimagesInput | string[]
    actions?: string | null
    organisationId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    isArchived?: boolean
    archivedAt?: Date | string | null
    archivedBy?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
  }

  export type ActivityLogUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutCategoryNestedInput
    parent?: CategoryUpdateOneWithoutChildrenNestedInput
    children?: CategoryUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutCategoryNestedInput
    Product?: ProductUpdateManyWithoutCategoriesNestedInput
    createdByUser?: UserUpdateOneWithoutCategoryNestedInput
    updatedByUser?: UserUpdateOneWithoutCategorysNestedInput
  }

  export type CategoryUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    children?: CategoryUncheckedUpdateManyWithoutParentNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutCategoryNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organisation?: OrganisationUpdateOneRequiredWithoutProductNestedInput
    Stock?: StockUpdateManyWithoutProductNestedInput
    categories?: CategoryUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutProductNestedInput
    createdByUser?: UserUpdateOneWithoutProductNestedInput
    updatedByUser?: UserUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    Stock?: StockUncheckedUpdateManyWithoutProductNestedInput
    categories?: CategoryUncheckedUpdateManyWithoutProductNestedInput
    DevisItem?: DevisItemUncheckedUpdateManyWithoutProductNestedInput
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    actions?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyNoteInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type UserUpdateWithoutCollaboratedNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUpdateManyWithoutUserNestedInput
    notes?: NoteUpdateManyWithoutUserNestedInput
    TaskAssignee?: TaskUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUpdateManyWithoutUserNestedInput
    createdByUser?: UserUpdateOneWithoutUserNestedInput
    updatedByUser?: UserUpdateOneWithoutUsersNestedInput
    User?: UserUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCollaboratedNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    authenticators?: AuthenticatorUncheckedUpdateManyWithoutUserNestedInput
    organisations?: OrganisationUncheckedUpdateManyWithoutMembersNestedInput
    ownedOrganisations?: OrganisationUncheckedUpdateManyWithoutOwnerNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutInvitedByNestedInput
    passwordResetTokens?: PasswordResetTokenUncheckedUpdateManyWithoutUserNestedInput
    FeedbackContact?: FeedbackContactUncheckedUpdateManyWithoutUserNestedInput
    notes?: NoteUncheckedUpdateManyWithoutUserNestedInput
    TaskAssignee?: TaskUncheckedUpdateManyWithoutAssigneeNestedInput
    TaskCreator?: TaskUncheckedUpdateManyWithoutCreatedByNestedInput
    CreatedActivities?: ActivityLogUncheckedUpdateManyWithoutCreatedByNestedInput
    UpdatedActivities?: ActivityLogUncheckedUpdateManyWithoutUpdatedByNestedInput
    RelatedActivities?: ActivityLogUncheckedUpdateManyWithoutRelatedUserNestedInput
    AllActivityLogs?: ActivityLogUncheckedUpdateManyWithoutUserNestedInput
    User?: UserUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Users?: UserUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisation?: OrganisationUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Organisations?: OrganisationUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Contacts?: ContactUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Comment?: CommentUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Categorys?: CategoryUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Product?: ProductUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Products?: ProductUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Stock?: StockUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Stocks?: StockUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Brands?: BrandUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Note?: NoteUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Notes?: NoteUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    Deviss?: DevisUncheckedUpdateManyWithoutCreatedByUserNestedInput
    updatedDeviss?: DevisUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    FeedbackContacts?: FeedbackContactUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Tasks?: TaskUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    DevisItems?: DevisItemUncheckedUpdateManyWithoutCreatedByUserNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutCreatedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCollaboratedNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    accessType?: EnumAccessTypeFieldUpdateOperationsInput | $Enums.AccessType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutNoteInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganisationUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    owner?: UserUpdateOneRequiredWithoutOwnedOrganisationsNestedInput
    members?: UserUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUpdateManyWithoutOrganisationNestedInput
    createdByUser?: UserUpdateOneWithoutOrganisationNestedInput
    updatedByUser?: UserUpdateOneWithoutOrganisationsNestedInput
  }

  export type OrganisationUncheckedUpdateWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    members?: UserUncheckedUpdateManyWithoutOrganisationsNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganisationNestedInput
    Product?: ProductUncheckedUpdateManyWithoutOrganisationNestedInput
    Stock?: StockUncheckedUpdateManyWithoutOrganisationNestedInput
    Contact?: ContactUncheckedUpdateManyWithoutOrganisationsNestedInput
    Category?: CategoryUncheckedUpdateManyWithoutOrganisationNestedInput
    Brand?: BrandUncheckedUpdateManyWithoutOrganisationNestedInput
    Devis?: DevisUncheckedUpdateManyWithoutOrganisationNestedInput
    Task?: TaskUncheckedUpdateManyWithoutOrganisationNestedInput
    Favorite?: FavoriteUncheckedUpdateManyWithoutOrganisationNestedInput
    ActivityLogs?: ActivityLogUncheckedUpdateManyWithoutOrganisationNestedInput
  }

  export type OrganisationUncheckedUpdateManyWithoutNotesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    ownerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    domain?: EnumDomainFieldUpdateOperationsInput | $Enums.Domain
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DevisItemCreateManyDevisInput = {
    id?: string
    description: string
    quantity: number
    unitPrice: number
    taxRate: number
    taxAmount: number
    totalPrice: number
    totalWithTax: number
    creationDate?: Date | string
    lastModified?: Date | string
    productId?: string | null
    createdByUserId?: string | null
  }

  export type ActivityLogCreateManyDevisInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisItemId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type DevisItemUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneWithoutDevisItemNestedInput
    ActivityLog?: ActivityLogUpdateManyWithoutDevisItemNestedInput
    createdByUser?: UserUpdateOneWithoutDevisItemsNestedInput
  }

  export type DevisItemUncheckedUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    ActivityLog?: ActivityLogUncheckedUpdateManyWithoutDevisItemNestedInput
  }

  export type DevisItemUncheckedUpdateManyWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    taxRate?: FloatFieldUpdateOperationsInput | number
    taxAmount?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    totalWithTax?: FloatFieldUpdateOperationsInput | number
    creationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutDevisInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyDevisItemInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    taskId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutDevisItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    task?: TaskUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutDevisItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutDevisItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogCreateManyTaskInput = {
    id?: string
    action: string
    entityType: string
    entityId: string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: string | null
    organisationId?: string | null
    createdByUserId?: string | null
    updatedByUserId?: string | null
    relatedUserId?: string | null
    accountId?: string | null
    sessionId?: string | null
    authenticatorId?: string | null
    invitationId?: string | null
    passwordResetTokenId?: string | null
    contactId?: string | null
    commentId?: string | null
    feedbackContactId?: string | null
    favoriteId?: string | null
    productId?: string | null
    stockId?: string | null
    categoryId?: string | null
    brandId?: string | null
    noteId?: string | null
    devisId?: string | null
    devisItemId?: string | null
    createdAt?: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    actionDetails?: string | null
    entityName?: string | null
  }

  export type ActivityLogUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutAllActivityLogsNestedInput
    organisation?: OrganisationUpdateOneWithoutActivityLogsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedActivitiesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedActivitiesNestedInput
    relatedUser?: UserUpdateOneWithoutRelatedActivitiesNestedInput
    account?: AccountUpdateOneWithoutActivityLogNestedInput
    session?: SessionUpdateOneWithoutActivityLogNestedInput
    authenticator?: AuthenticatorUpdateOneWithoutActivityLogNestedInput
    invitation?: InvitationUpdateOneWithoutActivityLogNestedInput
    passwordResetToken?: PasswordResetTokenUpdateOneWithoutActivityLogNestedInput
    contact?: ContactUpdateOneWithoutActivityLogNestedInput
    comment?: CommentUpdateOneWithoutActivityLogNestedInput
    feedbackContact?: FeedbackContactUpdateOneWithoutActivityLogNestedInput
    favorite?: FavoriteUpdateOneWithoutActivityLogNestedInput
    product?: ProductUpdateOneWithoutActivityLogNestedInput
    stock?: StockUpdateOneWithoutActivityLogNestedInput
    category?: CategoryUpdateOneWithoutActivityLogNestedInput
    brand?: BrandUpdateOneWithoutActivityLogNestedInput
    note?: NoteUpdateOneWithoutActivityLogNestedInput
    devis?: DevisUpdateOneWithoutActivityLogNestedInput
    devisItem?: DevisItemUpdateOneWithoutActivityLogNestedInput
  }

  export type ActivityLogUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ActivityLogUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldData?: NullableJsonNullValueInput | InputJsonValue
    newData?: NullableJsonNullValueInput | InputJsonValue
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    organisationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedByUserId?: NullableStringFieldUpdateOperationsInput | string | null
    relatedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    accountId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    authenticatorId?: NullableStringFieldUpdateOperationsInput | string | null
    invitationId?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetTokenId?: NullableStringFieldUpdateOperationsInput | string | null
    contactId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    feedbackContactId?: NullableStringFieldUpdateOperationsInput | string | null
    favoriteId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    stockId?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    brandId?: NullableStringFieldUpdateOperationsInput | string | null
    noteId?: NullableStringFieldUpdateOperationsInput | string | null
    devisId?: NullableStringFieldUpdateOperationsInput | string | null
    devisItemId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    actionDetails?: NullableStringFieldUpdateOperationsInput | string | null
    entityName?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}